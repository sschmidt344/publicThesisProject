First came the virus that had never been seen  before and that spread faster than we could ever imagine.
Now, we hear there's a safe and effective way to stop it - vaccines that will protect millions from COVID-19.
But can we really know they're safe after less than a year of testing?
COVID-19 vaccines may be  new, but vaccines are not.
We've been using vaccines to protect against  infectious diseases for over a century.
Two COVID vaccines are the first authorized  vaccines ever to use a new technology,
but even that technology, called messenger R-N-A,
has been tested and studied by vaccine researchers for decades.
We've learned how to make vaccines better and safer,
and we've applied all that knowledge to COVID-19 vaccines. 
We also had a head start on COVID vaccines
thanks to studies the National Institutes of Health had done.
Scientists there actually created a vaccine that could be custom-made
to fight different strains of coronavirus - like the virus that causes COVID.
Using these studies, they were able to  make a COVID-19 test vaccine
just over a month after the disease was first reported.
All vaccines have to be thoroughly tested before they can be marketed.
During clinical trials, scientists measure and compare data on volunteers who receive a vaccine
to those who receive a placebo - like an injection of saline.
Most early clinical trials involve  fewer than 3,000 volunteers,
so it can take a year or more to get the data  needed to measure how well vaccines work.
Early clinical trials for COVID vaccines  enrolled at least 30,000 volunteers each,
so data on safety and performance were  collected and analyzed in under 4 months.
Vaccines are usually developed one step at a time
and companies wait until they have final  approval to start manufacturing them.
But addressing this pandemic couldn't wait so government and industry invested millions
of dollars to produce vaccines at the same  time their test data was under review.
This meant health departments and clinics  started getting vaccine shipments
a few days after the Food and Drug Administration's rigorous standards for safety were met
and the vaccines were authorized for public use.
Thanks to extraordinary advances, science, industry, and dozens of government agencies have been
able to work together to produce and deliver safe and effective COVID-19 vaccines in record time.
Decades of experience and innovation led  to this achievement - one that can keep you,
your family, and your community safe  from a serious and dangerous disease.
Learn more. CDC.GOV/CORONAVIRUS
WE CAN DO THIS.
