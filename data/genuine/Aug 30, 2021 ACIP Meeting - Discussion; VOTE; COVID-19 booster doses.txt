Okay, thank you, everyone.
For folks on the call, we will now reconvene the meeting,
and continue where we left off.
I see that we have a couple of ACIP members
who have raised their hands.
I apologize to our colleagues.
If you'll just wait a moment, I promise I'll get to you.
Dr. Sanchez is next.
>> Thanks, Grace.
I just wanted to comment that the issue
of equity certainly is very important, and the past comments
about individuals of color.
But when I look at slide 65 on the percent
of people we see getting COVID vaccine, it's across the board.
We -- I mean, even among whites, 36% --
only 34% fully vaccinated.
We really -- the message has to go out completely for everyone,
because it's really -- I mean,
we're doing an abysmal job right now
of vaccinating the American public, and I absolutely agree
that the message has to be
that the vaccine is safe and effective.
Thank you.
>> Thank you, Dr. Sanchez.
Dr. Cineas?
>> Thank you, Dr. Lee.
I also would like to address the issue of equity.
My practice serves a largely under-served patient population,
mostly Latinx, African-American, and refugee patients,
who have been disproportionately affected by the pandemic.
While there is some vaccine hesitancy in my patients,
there is also trust in the providers in my practice,
and the number one barrier that I hear is
that the vaccine is too new, or was developed too rapidly,
and that it's, quote unquote, "experimental."
So I think that having full approval by the FDA
and the ACIP would take away one
of the barriers in my counseling.
Thank you.
>> Thank you so much.
Dr. Dooling,
is there anything else you'd like to add?
>> No, thank you for those comments, and they do echo a lot
of the discussion on the work group call.
Thank you.
>> Thank you.
Dr. Gluckman?
>> Thank you very much.
One of the comments I wanted to --
I heard one of the ACIP members questioning the amount of data
that we had that would be relevant to the Delta variant,
and I recognize that we don't have the level of robustness
that we heard presented earlier.
But I believe that there's real-world data that shows
that the vast majority of patients
in the hospital are unvaccinated.
I did pull some data from our own health plan, and it appeared
that 85% of the patients
that are currently hospitalized are unvaccinated.
I think it's important that we send a clear message,
that the vaccination's effective
at preventing severe disease currently,
unless there's any real disputes about the effectiveness
of what we're seeing today.
Thank you.
>> Thank you.
Dr. Dooling, I see you pulled up a slide.
Would you like to comment?
>> This was a slide -- this was presented in the presentation,
demonstrating just that point, that through the middle of July,
incidence in unvaccinated people continues
to be many-fold higher, compared to those in fully --
compared to hospitalization in fully vaccinated people.
I'd also like to reinforce that, in the grade presentation,
many of the observational studies were studied
through July, and some even in August.
So many of the countries in which those studies were done,
Delta was the circulating variant at that time.
So there is information on the benefits of vaccination
against Delta embedded within our presentation.
>> Thank you.
Dr. Kim?
>> Thank you, Dr. Lee, and I'd
like to echo what everybody's been saying.
That was a terrific presentation, Dr. Dooling,
as well as the other speakers who are here today.
It's been a day chock full of information,
and with really some very important discussions
to take place still.
I have a two-part comment/question.
I wonder if, Dr. Dooling, if we could go back
to the policy question slide.
So it was presented that the -- as this slide shows,
the relationship between FDA's EUA and the --
and ACIP interim recommendations,
and the BLA by the FDA, and the fact that ACIP will be
in a position to direct a standard recommendation.
Therefore, I ask that the committee
to revise the policy question to "Should vaccination
with the Pfizer COVID-19 vaccine be routinely recommended
for people age 16 years or older?"
There's obviously a big difference here, and that --
which leads me to the next question/comment.
And I may be jumping the gun on this one,
but I'd like to mention that if the vote today
that will be taken is to be in favor of this policy question,
I'd like to ask the committee members
to discuss including the Pfizer COVID-19 vaccine
in the adult immunization schedule and the child
and adolescent immunization schedule.
I realize that the interim changes to the --
schedule has not been made in the past,
and that was primarily due to keep the cycle
of ACIP recommendations --
our ACIP recommendations updates predictable,
and to prevent possible multiple schedules to be in circulation.
But -- a time where many past norms are exactly that,
the past, I believe that quickly incorporating routine COVID-19
vaccination recommendations in adults, and child
and adolescent immunization schedules are in order for ACIP
to leverage these immunization schedules,
their power to influence or command, if you will,
clinicians' practices and behavior,
and also to help boost vaccine confidence among providers
and the public.
So I'd like to ask the committee to consider that,
consider that discussion.
Thank you.
>> Thank you very much, and thank you for your comments
about the critical nature of the vaccine schedule,
and the service that it provides to our provider community.
I would like to say that, should the ACIP vote in favor
of this recommendation today, it will be adopted
within the pediatric and adult schedule, and, you know,
we can definitely take those comments into consideration
in how to represent it specifically
for maximum clarity and benefit.
>> Thank you for those suggestions.
Dr. Fryhofer?
>> Thank you, Sandra Fryhofer, American Medical Association.
I want to just go back to the equity question again,
and sort of echo the comments of Dr. Brooks.
I've had so many patients feel
that this vaccine was just experimental,
because they didn't quite understand what emergency
use was.
The concept of EUA was sort of new to the American public,
but now that this vaccine has been fully vetted,
it has full FDA approval, I think that a thumbs-up
from ACIP will go a great way in instilling confidence.
Then we get that off the table, and now, what we have
to do is make it easy for our patients to get vaccinated,
and do the outreach, and make it available,
and make it as easy as possible.
That would involve, you know,
employers giving people time off,
and just making it more accessible.
>> Thank you.
>> Thank you.
Dr. Mary Rubin I think wanted
to just comment on the earlier question related to CICP,
so I'll ask her to just make a brief comment,
and then I think we will move on to the vote.
>> Thanks, Dr. Lee.
I just wanted to reaffirm what Dr. -- said.
So the COVID-19 vaccine's currently authorized
through the FDA EUA, or approved
by the FDA are COVID countermeasures
under the Public Readiness and Emergency Preparedness Act.
And so, individuals who think they might have an injury
as a result of COVID-19 vaccines are eligible to apply
for benefits under the CICP.
Full FDA approval of the Pfizer COVID-19 vaccine does not remove
its coverage from the CICP, or provide coverage under the VICP.
As a reminder, in order to add a new vaccine to the VICP,
three things must occur.
The vaccine must be recommended by the CDC
for routine administration to children and/or pregnant women.
Congress must enact an access tax on the vaccine,
and the HHS must add the vaccine to the VICP through publication
of a notice of coverage in the federal register.
And that's not yet been done for COVID-19 vaccines to date.
Thank you.
>> Thank you, Dr. Rubin, for that clarification.
Dr. Cineas, is your hand raised?
Okay. Thank you.
And just to state that this is not intended
to stop the conversation in any way.
I just would like to get a motion on the table.
So I'm actually going to ask Dr. Dooling if she would be willing
to put up the proposed language for the recommendation,
having heard also some of the suggestions that were made.
As that is getting put up, we will ask our voting members
for a motion, and if seconded, we will pause,
and then actually open up for discussion once more.
So the discussion is not done.
Go ahead, Dr. Dooling.
>> Thank you, Dr. Lee.
So just to walk ACIP members through the decision in front
of them, the policy question is, "Should vaccination
with Pfizer BioN Tech COVID-19 vaccine be recommended
for people age 16 years and older?"
Next slide.
Recall that the work group interpretation were
that the balance of consequences,
the desirable consequences clearly outweighing undesirable
consequences in most settings, and support for a
"we recommend" intervention.
Next slide.
So the vote language is here.
"The Pfizer BioN Tech COVID-19 vaccine is recommended
for people 16 years of age and older
under FDA's biologic license application, or BLA approval."
I'll turn it over to you, Dr. Lee.
>> Thank you, sorry.
So I see that I have some hands raised.
I'm going to ask if a voting member wishes to make a motion.
Dr. Poehling?
>> Yes, this is Dr. Kathy Poehling,
and I would like to make a motion
to accept the motion on the table.
Thank you.
>> Thank you.
So we now have a motion on the table.
I'm going to look to the next hand to ask if you'd
like to second the motion.
Ms. Bahta?
>> Yes, I would like to second.
Thank you.
>> Thank you.
So it's been moved and seconded
that we adopt the recommendation language presented by Dr. Dooling
as on the slide, and before we move to a vote
by our voting members to discuss the motion on the table,
if there's any additional questions
or issues the committee would
like to raise before the formal vote.
And I see Dr. Long's hand is raised.
>> Dr. Lee, can I interrupt for just one second,
and just clarify for everyone that this --
this is in addition to -- this recommendation would be
in addition to the current recommendation
that recommends use of this vaccine for people age 12 years
of age and older under FDA's EUA.
And so, to clarify, this does not take away the continued
recommendation for use among 12 to 15-year-olds
under the EUA for this product.
>> Thank you, and just to add to that,
it also does not change the vote on the EUA for the third dose
for the immunocompromised population.
All right, go ahead, Dr. Long.
>> I wanted to say what Amanda just said
about the 12 and older.
So it's on the table under EUA, and the other thing, Dr. Lee,
you will know, or Amanda will know --
Robert's rules, I believe, we are --
the motion should be to approve, not to accept.
>> Yes, that's correct.
Apologies for the misstatement.
>> Is there any further discussion, or would any
of the members wish to make a statement,
or provide any additional comment?
And especially if you've not had a chance to comment previously,
we welcome any additional discussion.
Dr. Kotton?
>> Camille Kotton.
I would just like to say that I am very appreciative
for the incredible amount of work that was presented today,
and the really amazing, amazing amount of data
that has been shown, and that it's wonderful that we are
at this time where we can reach decision as far
as whether we want to proceed with this recommendation.
So thanks to everyone who worked so hard to get us to this point.
>> Dr. Lee, while waiting for anyone else to raise their hand,
I just want to remind all of the ACIP members that, for the vote,
we will ask them to turn on your video cameras,
so that we can see the ACIP members,
and also to restatement their conflict of interest.
I just wanted to make sure we got that in, and it doesn't look
like there's any other hands raised.
>> Terrific.
Well, we'll take a moment to actually ask our members to turn
on their cameras in the meantime,
and since I do not see any additional hands raised,
I'll assume the committee's ready to vote on the motion.
Thank you [laughter].
>> Grace, quick question.
Would we be able to comment after the vote?
>> Absolutely.
I'm happy to allow for comments after the vote.
Thank you for asking, Dr. Talbot.
Terrific. So we will proceed with the vote,
if there are no objections.
I'm going to go in reverse order today, and ACIP members,
please state your name, whether you have a conflict of interest,
and then your vote on the recommendation that's listed
on this particular slide.
So we will start with Dr. Talbot.
>> Hi, Keipp Talbot,
no conflicts, and yes.
>> Thank you, dear.
Dr. Sanchez?
>> Sanchez, no conflicts, yes.
>> Terrific.
Dr. Poehling
>> Kathy Poehling, no conflicts, yes.
>> Thank you.
Ms. McNally?
>> McNally, no conflict, yes.
>> Thank you.
Dr. Long?
>> Sarah Long, no conflict, yes.
>> Thank you.
Dr. Kotton?
>> Camille Kotton, no conflicts, yes.
>> Thank you.
Dr. Daley?
>> Matt Daley, no conflicts, yes.
>> Thank you.
Dr. Cineas?
>> Dr. Cineas, no conflicts, yes.
>> Thank you.
Dr. Chen?
>> Wilber Chen, no conflicts, yes.
>> Thank you.
Dr. Brooks?
>> Oliver Brooks, no conflicts, yes.
>> Thank you.
Dr. Bell?
>> Beth Bell, no conflicts, yes.
>> Thank you.
Ms. Bahta?
>> Lynn Bahta, no conflicts, yes.
>> Thank you.
Dr. Ault?
>> Kevin Ault, no conflicts, yes.
>> Thank you.
And Grace Lee, no conflicts, yes.
And so, with that, Dr. Cohn,
I believe we have 14 yeses, zero nos, and the ayes have it,
and the recommendation is approved.
>> Yes, I concur.
The motion passes.
I think we're going to try to get the videos back up,
for people who wish to make comments.
Give us one second.
>> Okay, thank you.
>> Give us one second, please.
Okay. I think we at least have the video back up.
I think we can go ahead and start comment.
>> Yep, sure.
That sounds good.
Okay. I see Dr. Talbot's hand is raised.
Please go ahead, Dr. Talbot.
>> I actually have a couple things to say.
One is, I would like to reiterate how hard our FDA
and CDC colleagues have worked through this pandemic.
They have been working extra hours,
not just for a few months, but now for 18 months,
and they have done this --
I want to remind the American public
that our public health infrastructure was stretched
prior to the pandemic.
And I would like everyone who made public comment in regards
to how much more the CDC can do to remember to reach
out to their representatives, and congressmen, and senators,
that the CDC needs to be funded fully on a yearly basis,
with a stable budget to cover not only our routine healthcare,
so that kids are vaccinated for everything,
but also to handle epidemics and pandemics.
I think our colleagues have been very overworked,
and I want people to know they are working just as tirelessly
as they were in the beginning.
But we need everyone else's help, too, to spread the news
that this vaccine is safe.
If you've been vaccinated, raise your arm and tell everyone
about it, and be loud and proud.
I think the second thing I really want to bring home is,
our kids need to be in school, and everyone wants to do it
with going back to completely normal.
And I don't think that's possible.
I think our kids are going to be scarred
if we don't get them back in school.
They need to be masked, and everyone who has anything to do
with a child that's not old enough to be vaccinated
yet should be vaccinated for the benefit of those children,
and for other loved ones who might be immunocompromised.
So once again, tell everyone you've been vaccinated.
Encourage everyone to be vaccinated,
and I'm saying this not just as an infectious disease doctor,
not just as an epidemiologist,
not just as an ACIP voting member,
but as a mom of two children.
Please go get vaccinated, so our kids can go to school.
Thank you.
>> Thank you, Dr. Talbot.
Dr. Chen?
>> Yeah, I -- well, first of all,
I want to echo what Dr. Keipp Talbot just said,
that I really appreciate what the CDC
and FDA have been doing behind the scenes,
and they're really unsung heroes, continuing to work,
you know, for 18 months tirelessly.
It's just been tremendous.
Through today's presentations, which were really amazing,
I've been highly encouraged by the clear demonstration
of the safety and effectiveness
of the Pfizer BioN Tech vaccine that we saw.
I also just wanted to emphasize
that we don't have the expectation
that the Pfizer vaccine or any
of the other COVID vaccines confer immortality,
nor invulnerability against predictable life events --
for example, the occurrence of cancer, motor vehicle accidents,
or other things that can cause someone
to get hospitalized or die.
And just because of timing, it's not related.
I also wanted to just mention an imminent, predictable event
that is coming up, which is non-COVID respiratory viruses.
As we return back to in-person classes for our children,
as we enter into the fall and winter season,
we should not be surprised by the eventuality of seeing a rise
in infections from seasonal respiratory viruses,
like influenza, RSV, rhinovirus, and others,
which we are already seeing right now with that signal.
You know, these COVID vaccines will not prevent runny nose,
sore throat, fever, cough, nor the hospitalizations
or possible deaths due to those non-COVID respiratory viruses.
And, you know, I have many pediatric medical colleagues
that have voiced their concerns about the expectation
of an overwhelming number of hospitalizations
in children in the coming months.
Medical systems are already preparing to surge upwards
to 200 or more percent of their normal capacity
to handle these pediatric hospitalizations.
And so, you know, clearly, the Pfizer vaccine
and all these other COVID vaccines have demonstrated a
very strong track record for safety and effectiveness,
especially in the prevention of hospitalization
and death due to COVID.
So again, this is, again, just a warning for the upcoming season,
because we're going to see other respiratory viruses mixed
in with this present pandemic.
So while we have an FDA-approved vaccine --
COVID vaccine for adults, EUA authorization
for children 12 years of age and older, in the coming months,
I look forward to reviewing the data that we will have,
hopefully soon, for safety and efficacy for younger children.
And, you know, certainly I'm looking toward having this
vaccine be available to protect, you know, this vulnerable
and precious part of our population.
I'll end my comment there.
Thank you.
>> Thank you, Dr. Chen.
I'm going to hand it over to Dr. Daley.
>> Yeah, thanks so much.
So I have several broad comments I'd like to make.
How will history judge this moment in time?
This is a question that I was asked a few weeks ago during an
interview, and I've been thinking about it ever since.
And I think that there are several crucial developments
that'll be judged very favorably over the course of time.
You know, last fall, several
of our national health experts stated that we'd be fortunate
to have a vaccine that was 70% effective
against the new respiratory virus.
And yet, here we are with a vaccine demonstrating greater
than 90% efficacy, and 96% efficacy against death.
And so, you know, I think history's going to judge this
as a moment of incredible scientific innovation,
and then second -- and this is my opinion alone.
But I've been struck by how well our existing processes
and systems have functioned in the environment
of this unprecedented pandemic.
And this will echo some of the comments that Dr. Talbot made,
but, you know, I'd like to highlight the processes
at work at the FDA.
You know, the Food and Drug Administration,
they're responsible for protecting public health
by ensuring the safety, efficacy, and security of drugs,
biologics, and medical devices, and even with the urgency
of the pandemic, the FDA has followed their established
processes on maintaining an appropriately high bar
for licensure.
And some in the press and in the public have urged the FDA
to speed up their reviews, and I would state,
in some ways, the opposite.
You know, take the time that you need
to conduct the extraordinarily detailed and careful review
that you'd perform with any other licensed medical product,
and in fact, I'm confident that that's happened.
And then, I'd also like to highlight the work
of this group.
As Dr. Lee, our committee chair, has reminded us, the ACIP needs
to follow all the established processes,
including the rigorous grading of scientific data,
and the integration of this grade
into the evidence-to-recommendations
framework.
And this process was just demonstrated so clearly
by the presentations just given
by Dr. Gargano and Dr. Dooling.
And then, finally, you know, I'd want to highlight that,
prior to the pandemic,
the United States had an extensive system
for monitoring the safety of authorized
and licensed vaccines, and this system includes multiple
components, including the VERS and VSD
that we heard from today.
And then, during the pandemic, the system has been enhanced,
such as by the creation of V-Safe, and by the addition
of other federal partners that contribute data
to this safety assessment, and then that system's allowed us
to detect these rare
but potentially serious adverse events following vaccination.
And as Dr. Lee showed in her presentation,
these data then are used to reevaluate risk versus benefit.
And these data can also be used
to mitigate adverse events whenever possible.
So, I mean, I think we all fully recognize
that the story's not all rosy,
and there's many areas of concern.
You know, we've really suffered from a plague of disinformation
and misinformation, and as many as 72 million individuals
in the U.S. 16 and older are not vaccinated.
And we have these new variants that have emerged
with increased transmissibility, and cases, hospitalizations,
and deaths are on the rise, but even in consideration
of these challenges, you know,
in response to that question I was asked
about how history's going to judge this moment,
my personal judgment is that this is a time
of incredible scientific innovation.
And I'm hugely grateful for that.
And entering the pandemic in the United States,
we were in the fortunate position
of having established systems to license vaccines,
to recommend vaccines,
to evaluate vaccines using real-world safety data,
and then these systems were enhanced for the pandemic.
And they really met the challenges of the pandemic,
and by and large, performed very well.
And so, I just think that the fact
that we're here today voting on recommendations
of a licensed vaccine against COVID-19 is historical in
and of itself, and it just further reinforces the points
that I've just made.
Thank you very much.
>> Thank you for your comments.
Dr. Poehling?
>> Hi, Dr. Kathy Poehling.
I wanted to also send my sincere thanks
to the many people who've been working
to make this day possible.
I voted in favor after reviewing the large amount of safety
and effectiveness data from randomized controlled trials,
observational studies,
and multiple safety monitoring systems.
Over 209 million doses have been administered.
The hospitalization rate among unvaccinated is much,
much higher, over 19-fold times higher,
than that of the vaccinated.
Delta variant is far more transmissible,
with high replication and viral loads, and is causing
over 100,000 infections and over 1000 deaths per week.
Vaccines and masks work to protect us, our families,
our children, and our community.
I encourage all eligible to be vaccinated and use masks
to protect you and all those that you love.
Thank you.
>> Thank you.
Would any of our members like to make any additional comments?
Oh, Dr. Long, go ahead.
>> Yes, it's really related to the schools opening,
and it probably is not our purview.
Before -- if they will open certainly before we have our
next meeting, and at our next meetings,
we will not have any vaccine in front of us to look
at for younger children, at least for a few months.
So I hope that we understand the tapestry of the epidemiology.
I'm hearing about pediatric facilities with stuffed ICU,
but we have pretty good immunization in New York State,
in Pennsylvania, in New Jersey,
and I know in North Philadelphia,
where we definitely have Delta virus, we do not have a surge
of pediatric cases in the ICU.
And I am concerned that, for younger children, you know,
those that probably need this educational environment most,
and especially in some of our vulnerable neighborhoods
that are well-immunized, that we might wonder
if we can not impose a 10-day quarantine on a classroom
or a child who might have relatively mild symptoms
from coronavirus, et cetera.
I just don't -- this is not something we talk about a lot,
although we have all become pretty good experts
at coronavirus.
So I wonder if Dr. Cohn
or Dr. Wharton would want
to say anything about the continuous scrutiny
of the recommendations, and your idea that one decision
or one rule may not fit all communities
in the United States.
>> Actually, this is Dr. Lee.
I just want to keep us on task, I'll say.
I'll just say that, you know, our purview today is
on vaccines, and we still have a discussion ahead of us
that I want to get to.
I am going to ask us to skip our break.
I did want to make one comment.
Dr. Duchin, did you want
to add something really quickly to this discussion?
>> Thank you, Dr. Lee.
I just wanted to say that, you know,
this is a miraculous accomplishment,
to have such an effective vaccine so quickly,
and I just want to remind people that, right now,
when not everyone can be vaccinated,
and even when not all of those who are eligible are vaccinated,
that we really need to use all tools at our disposal
in addition to vaccines to fight this Delta outbreak
in particular.
And that means using the best quality mask, the best-fitting
and highest-filtering mask we can,
understanding the critical importance
of improving indoor air quality through ventilation
and filtration, and reducing high-risk activities.
Vaccines are wonderful.
They're miraculous, but we need to use all tools
at our disposal right now.
Thank you.
>> Thank you, Dr. Gutchen, and I'll just add one last comment,
and then we'll wrap up this session, which is I, you know,
agree with the comments of many of my colleagues on the call
about the importance of vaccination.
The one thing I did want to emphasize is
that the BLA is inclusive of pregnant women, and as we know,
the ACOG, FNFM, and CDC have really strengthened the
recommendations around vaccination
of pregnant individuals because of the severity
of disease that we're seeing.
I just wanted to remind our colleagues
and the public how important this particular population is,
both because they're suffering far worse complications
from COVID infection, you know, with significant severity
of disease, and it's also impacting their infants.
I think this is an opportunity for us, in that we know
that only 10 to 15% of pregnant women are actually vaccinated.
So we have a long ways to go.
We've talked a lot about disparities.
I actually think that, you know, pregnant women, you know,
should be included in that mix.
I mean, we really need to think about how
to strengthen our vaccination rates
in the pregnant population.
With that, I am actually going to suggest
that we skip our break.
I apologize, just like always, but we do have a --
we can turn off our cameras now.
I'm going to suggest we turn off our cameras, and that we move
on to the -- let me turn off my camera, sorry --
to the next section, where we will have Dr. Sarah Oliver
present on a framework
for COVID-19 booster doses in the U.S.
>> Thanks so much, and good afternoon.
Next slide.
So to begin, I want to continue to distinguish what it is
that we're addressing today.
At the last ACIP meeting,
ACIP recommended an additional COVID-19 vaccine dose
after receipt of a primary series as a way
to provide protection for those
who may not have mounted an appropriate immune response
to the initially-recommended series.
Booster doses are vaccine doses administered
when the initial sufficient immune response
to a primary series may have waned over time.
This is what we will be addressing today.
Next slide.
As we think through the recommendations
for booster doses of COVID vaccines,
the main question we're answering is,
"Are booster doses needed for those previously vaccinated
with a primary series?"
As with other recommendations for COVID vaccines,
we will review the data in a systematic
and transparent fashion.
Policy on booster doses will be coordinated with FDA
for regulatory allowance and ACIP
for recommendations around use.
Next slide.
As we discussed at the last meeting, recommendations
for booster doses would obviously only apply to those
who had completed a primary series.
To date, over 365 million vaccine doses have been
administered in the U.S. The figure
to the left shows the number of people fully vaccinated
by COVID vaccine series type, and on right shows the percent
of the population fully vaccinated by age.
Over 60% of those 12 years of age
and over are fully vaccinated.
Next slide.
We also showed this figure at the last meeting,
the daily count of newly fully-vaccinated individuals.
Average number of doses administered have been
increasing since mid-July, and as a result,
we're seeing increases in the number
of fully vaccinated individuals.
Next slide.
And this slide shows newly-vaccinated --
the newly-vaccinated figure by age.
If you look on the far right of the graph, the increases seen
in recent weeks are primarily those 18 to 64 years of age.
Next slide.
So we also showed this slide last time as well,
with our overall road map
for the next several weeks to months.
Next slide.
At the last meeting,
we discussed the framework for booster doses.
Then, at today's meeting, we'll begin to provide data
to inform booster dose policy.
Next slide.
So then, this is the framework that was presented
at the last meeting, and we'll walk through it again today,
and fill in data where we can.
Next slide.
First, we'll review data regarding VE waning over time.
Next slide.
These are the Kaplan-Meier curves shown at the time
of EUA review for each
of the three authorized COVID-19 vaccines.
At that time, the median followup was around two months.
You saw data from Pfizer today regarding the longer followup
for those in the clinical trials, and we'll continue
to work with the manufacturers to review this followup
from clinical trials at upcoming meetings.
Next slide.
Today, we will summarize recent U.S. publications evaluating
waning immunity, listed here.
You can see on the far right
that the time assessed included data through July of 2021.
Next slide.
So this slide shows VE estimates against hospitalization
from the studies listed on the previous slides.
You can see VE estimates remain high over time.
Next slide.
This slide shows the VE estimates against infection
from the studies listed.
VE estimates have had some decreases over time
for the last one to two months.
There are a variety of reasons
that we could be noting this decline.
One aspect could be waning immunity due
to time since primary series.
However, there is another factor to consider as well.
Next slide.
As we've seen from previous presentations today
around the increases of the Delta variant, in May,
Delta was around 7% of sequenced isolates, and by mid-July,
this was up to 94% of sequenced isolates.
So the impact of the Delta variant leads us
to our next question.
Next slide.
Is VE reduced for the Delta variant?
Next slide.
This figure shows VE estimates by outcome for the Alpha variant
in blue, compared to the Delta variant in orange.
The outcomes range along the top, VE for any infection
on the left, symptomatic infection in the middle,
and hospitalization or severe disease on the right.
You can see that among global studies assessing infection
with Alpha versus Delta, there was a mild decrease in Delta VE.
There may be a variety of factors
that can impact these results and variation by countries,
including differences in study methods,
intervals between doses, and timing with vaccination
and variant increases.
Next slide.
This slide shows results of studies that compare pre-Delta
versus Delta estimates for VE.
Infection or symptomatic disease is on the left,
and hospitalization or severe disease is on the right.
In studies comparing pre-Delta and Delta time periods,
the pre-Delta VE estimates are high at 87% or higher.
Since the introduction of the Delta variant,
VE against infection ranges from 39 to 84%.
VE against hospitalization, though,
remains high, from 75 to 95%.
Next slide.
So this is a summary of VE estimates
since the introduction of the Delta variant.
The colors correspond to the vaccines assessed in the study.
This highlights that regardless of the vaccine evaluated,
all vaccines remain effective in preventing hospitalization
and severe disease, but there could be --
may be less effective in preventing infection
or mild illness recently.
These reasons for lower effectiveness likely include
both waning over time and the Delta variant.
Next slide.
>> So we also need to evaluate how the need
for booster doses may vary by sub-population.
First, we'll address adults 65 years of age and over.
Next slide.
This study highlights VE for symptomatic infection
with the Pfizer vaccine for several
of the recent variants of concern.
Adults 60 years of age and over are in the light blue.
VE against symptomatic infection in adults 60 and over is high,
but some decreases are noted against variants of concern.
However, it's important to note
that these differences were not statistically significant,
and there were small numbers and very wide confidence intervals
for several of the different variants.
Next slide.
This slide highlights VE against hospitalization.
VE in adults 65 years of age and over has decreased slightly
over time, but has remained high, and again,
differences by time interval
since vaccination were not significantly different.
Next slide.
This slide shows unpublished COVID-NET data
with preliminary VE against COVID-19 associated
hospitalization among fully vaccinated patients 18 years
of age and over by age group and month.
VE remains high, 94% or higher, for adults 18 to 49 in yellow,
50 to 64 in green, and 65 to 74 in blue.
Preliminary VE against hospitalizations
in adults 75 years of age and over, in red, decreased in July,
but still remained over 80%.
Next slide.
So moving to VE among healthcare personnel,
the figure on the left shows VE by days since the second dose
of the primary series, and the figure on the right shows VE
by variant predominance, the time period pre-Delta,
and the time period when the Delta variant was predominant.
The VE against infection among front-line workers,
including healthcare personnel, declined somewhat over time,
and from the pre-Delta period to the Delta period.
However, again, the VEs were not significantly different.
Next slide.
This slide demonstrates VE
against infection among long-term care
facility residents.
There was some question initially for how these older,
potentially medically frail adults may respond
to the vaccine.
However, this shows that, initially, VE was high,
74% or higher, by vaccine.
Next slide.
However, if we look over time, moving into the recent months
where Delta was the primary variant,
VE has fallen to just over 50%.
Next slide.
So this is the same summary slide as before,
but to put the estimates for older adults,
healthcare personnel,
and long-term care facility residents
into the overall context.
Lower VE against infection was seen
for long-term care facility residents.
VE among older age groups
and healthcare personnel are comparable with other subgroups,
and followup is needed
to monitor these VE estimates over time.
Next slide.
So next, moving to the other aspect
of booster dose decisions, to review the benefits and harms.
Are booster doses of COVID vaccines safe and immunogenic?
Next slide.
We know Pfizer, Moderna,
and Janssen are all conducting studies to evaluate the safety
and immunogenicity of booster doses.
While we've heard about the immunogenicity
of these booster doses reported in the press, it's important
for us to review sufficient safety data
for booster doses as well.
At upcoming ACIP meetings,
we'll have the manufacturers present data on third doses.
Next slide.
Next, will booster doses
of COVID vaccines reduce COVID incidence,
hospitalization, and mortality?
Next slide.
We're evaluating data available to discuss the potential impact
of COVID booster doses in a variety
of populations and settings.
The data are limited currently.
However, as data become available, we'll make sure
to bring it to ACIP to inform these discussions.
Next slide.
Do booster doses improve VE against the Delta variant,
and then other variants of concern?
Next slide.
Immunogenicity data, including sera from study participants
who received a booster dose,
can evaluate neutralizing antibody data for variants
of concern, including Delta.
While there's no correlate of protection available,
there is a growing understanding around the impact
of neutralizing antibodies.
This understanding can be used to infer the impact
of booster doses from studies of neutralizing antibodies
to clinical protection against Delta
and other variants of concern.
We'll have presentations to ACIP at upcoming meetings
to address this as well.
Next slide.
And finally, we want to highlight
that feasibility will be an important aspect
for booster doses as well.
Next slide.
Some aspects of implementation will be more feasible
than a primary series roll-out Supply and number
of vaccination sites should not be a serious limitation.
However, there will be some aspects of implementation
that could be more complex.
Individuals received a variety of primary series.
Upcoming data will evaluate booster dose response
for the same vaccine as primary series that we call
"homologous," as well as a different vaccine
as the primary series, which we call "heterologous."
Booster dose policy will need to address individuals
who received all primary series.
Another aspect that could impact implementation includes the
possibility of different doses.
Some COVID vaccine booster studies have evaluated various
booster doses -- have evaluated various doses
for booster vaccines for the same product.
The data on these studies will need to be reviewed,
and feasibility of implementation discussed.
Next slide.
So moving to the summary
and work group considerations -- next slide.
First, I want to highlight that it's not uncommon
for a vaccine series to require several doses.
Vaccines that require more than one dose do not necessarily mean
that annual boosters are needed.
For many vaccines, the final dose is given
at least six months after the initial dose.
This table shows a sample of vaccines that can be given
to adolescents or adults that require more than one dose,
and with the last dose given at six months or further.
Next slide.
This slide can attempt to explain why that occurs.
This is clearly an oversimplification
of vaccinology, but just want to highlight that the initial dose
of a vaccine is typically thought of as a priming dose.
It induces an immune response, which includes B-cells,
T-cells, and antibodies.
However, subsequent doses
of the vaccine can produce a boost effect, which can lead
to a broader response within the immune system.
The time between doses can allow for more of the boosting effect
within the immune system.
In a pandemic setting, it can be important
to achieve high protection early, with a second dose given
at a shorter interval.
However, it may mean that a later dose
for this boost effect is needed as well, and again,
this doesn't necessarily mean
that an annual booster dose would be needed.
Next slide.
The data we've seen today has demonstrated
that COVID vaccines continue to maintain high protection
against severe disease, hospitalization, and death.
Protection against infection, including asymptomatic
or mild infection, appears to be lower in recent months.
It's very difficult to distinguish the role of time
since primary series, and the impact
of the Delta variant on this.
The data we've seen today were reported through July.
Data through August will be shown at future ACIP meetings.
It's important to monitor trends of effectiveness
by severity of disease over time.
Policy around booster doses requires continued evaluation
of effectiveness, monitoring the impact of both time
and variants, and the ability of booster doses
to improve protection.
Next slide.
If we can recall back to December 2020 and early 2021,
ACIP made recommendations for allocation of initial doses
of COVID-19 vaccines in the phases listed here.
Early in the vaccine roll-out,
ACIP voted for a risk-based approach to allocation
of COVID vaccines, highlighting the highest-risk individuals.
However, we know that there was substantial variation
in how this was implemented across states and jurisdictions.
Next slide.
So next to move to work group considerations--
the work group continues to emphasize
that the top priority should be continued vaccination
of unvaccinated individuals.
Planning for delivery of booster doses
to vaccinated individuals should not deter outreach for delivery
of primary series to unvaccinated individuals.
The work group also feels that the priority
for booster dose policy should be the prevention
of severe disease in at-risk population, and simplicity
and flexibility will be important to support equitable
and efficient delivery of booster doses.
Next slide.
It's also important to assure global vaccine availability.
Uncontrolled spread globally that could result
in new variants threaten control of the pandemic everywhere.
In addition to global equity,
policy around booster doses should consider equity
in the U.S. population as well.
Access to booster doses may vary by population and setting.
We should also apply lessons learned around equitable access
in the early primary series roll-out Next slide.
The work group highlighted that,
in addition to the immunogenicity data,
we need to review available safety data for booster doses.
The balance of benefits and risk for booster doses may vary
by age and other factors.
Any policy for booster doses needs
to take this benefit/risk balance into account,
and the work group emphasized that it's critical to wait
for additional safety data
and regulatory allowance for booster doses.
Next slide.
At this time, the work group has discussed a risk-based approach
for booster dose recommendations.
First, to prevent severe disease in the most at-risk population,
primarily long-term care facility residents
and older adults, and any age criteria can be discussed
with further reviews of the data.
And next, to support a strained healthcare infrastructure.
We know that VE against severe disease remains high
for healthcare personnel, but healthcare personnel
with even mild disease may not be able to work.
So prevention of mild disease takes on greater importance
as a public health goal in this population.
Time since vaccination with the primary series is
also important.
For many vaccines, a minimum interval is beneficial
for boosting effect.
However, the ability to benefit
from this boosting effect extends well beyond
that minimum interval.
Next slide.
So again, if we recall the initial allocation
recommendations that were focused
on the highest risk population and time since recommendation --
next slide -- this slide again shows possible recommendations
for the initial booster doses,
with the populations mentioned on the last slide.
Again, highlighting that this focuses
on the highest-risk individuals, and time interval
since receipt of the last dose.
Next slide.
ACIP will continue to review additional data.
At upcoming ACIP meetings, we can review manufacturer data
on safety and immunogenicity of booster doses,
and also review effectiveness, breakthrough infections,
and epi data through August.
The work group and ACIP will continue
to have further discussions around feasibility,
implementation, and the balance of benefits and risk
by age group and by population.
Next slide.
So to return to our outline, today,
we began to review the available data
to inform booster dose policy.
Next slide.
ACIP can meet again mid-September
to review data just mentioned,
and then we can have a subsequent ACIP meeting
after FDA authorization for any booster doses
for a possible vote around populations for use.
Next slide.
I want to thank our fantastic team,
who's helped pull all of this together.
Next slide.
And so, our questions for ACIP --
does ACIP agree with the proposed risk-based approach
for COVID booster dose recommendations
that the work group discussed?
And what other questions would be important
for ACIP to address?
Thanks.
>> Thanks.
And Dr. Lee, while people are thinking
through that amazing presentation, and thinking
about their comments and questions,
I do want to introduce Dr. Dmitri Doskalakas [assumed
spelling], who is part of our incident management for CDC,
and for the CDC COVID response.
And we have some comments that we just want
to make regarding how to use COVID --
this COVID vaccine under the BLA,
and information that's important for providers.
Dr. Doskalakas?
>> Thank you, Dr. Cohn.
Excellent.
Thank you, Dr. Cohn.
So while you all are thinking,
I'll just introduce myself again.
So I'm the deputy incident manager
over the vaccine task force, and thank you for allowing me
to come and just let you know what we have been telling our
partners and jurisdictions
around appropriate use of vaccine.
So I'll preface by saying that this vaccine --
these vaccines are a lot different than other vaccines
and drugs that come to the market.
So specifically, they are distributed
by the U.S. government, and are under provider agreements
that state very clearly
that providers must administer the vaccines in accordance
with all program requirements and recommendations of the CDC,
the advisory committee on immunization practices --
so you all -- and the U.S. Food and Drug Administration.
Notably, this applies to both an EUA
and FDA-approved COVID vaccine.
Accordingly, use of the products outside of those
that have been approved and authorized by the FDA --
so something that we would call
with other drugs off-label -- is not recommended.
And it is important, again,
to remember that this vaccine is much different
than other vaccines coming to the market,
because it would also violate the provider agreement,
and could expose providers to the following risks.
The first is administration of the product off-label
or not following FDA, ACIP guidance may not be covered
under the PREP Act, or the PREP Act declaration.
Therefore, providers may not have immunity from claims.
Secondly, individuals
who receive an off-label dose may not be eligible
for compensation under the countermeasures injury
compensation program, and I did hear the question that came
up earlier about this vaccine under BLA still being
under the countermeasures injury compensation program.
So if a patient experiences an adverse event, if used off-label
or off-recommendation, they may not be covered
under this program, and also importantly,
this is a condition of our agreement.
So off-label doses would be in violation
of the CDC program provider agreement,
and that could potentially impact the ability
of the provider to remain a provider in the CDC program.
And lastly, administration fees may not be reimbursable
by payers if the vaccine is used off-label or outside
of FDA and ACIP guidance.
Dr. Cohn, thank you.
>> Great. So in summary, this was just a reminder to people
who are listening to this meeting today
that while we are discussing the potential
for using booster doses in the future, at this time,
we strongly advise against giving individuals an additional
dose outside of the already-recommended
and authorized recommendations for immunocompromised persons.
Dr. Lee, we can toss it back to you.
>> Thank you.
That was a mouthful.
Okay, so I'm going to actually turn it over to our ACIP members
to respond to these questions that Dr. Oliver had put up,
and I'm going to call on Dr. Ault first.
>> I agree with the proposed risk-based approach
for the COVID-19 third dose recommendations.
However, as you have already said a couple of times, Dr. Lee,
when we talked about this last November and December,
we really didn't know that pregnant people were a group
that are increased risk, and have a -- uptake of the vaccine.
Also, when we talked last year, healthcare workers,
female and younger, making pregnancy more of an issue
in that particular group --
so if you ask me what other questions would be important
for ACIP to address, I think that would be one of them.
Over.
>> Thank you.
Dr. Oliver, just jump in as you want to respond
or add some context, but otherwise, I will keep going.
Ms. Bahta?
>> Thank you, and thank you, Dr. Oliver.
This really --
>> Can we -- the slide where the -- will you go back to --
>> Sorry, we hear -- background noise.
Go ahead.
>> -- apologies.
>> -- I just want to -- I want to bring back the issue
of equity, and kind of the lessons learned
in this first round of focus of limited doses.
And I know that that's not the case,
that we probably have ample doses,
but I think that we missed a really, really high risk group.
And a lot of it was based on local decisions that were driven
by ease, rather than by equity.
And if we're going to move in this direction,
somehow I want to see the data.
I want us to make sure that that data is -- that our partners,
especially those that are responsible for distribution,
or for promoting vaccination,
really understand who we are targeting.
And I think that includes younger communities of people
of color, our Latinx communities,
our black communities, our indigenous people communities,
where the rates of hospitalization
and death are so much greater.
And so, again, equity, equity, equity, but we missed it
to a large degree this first round.
And I think we have to rethink it, and we need the data
to understand it and communicate it more deeply.
Thank you.
>> Oliver, I don't know if you want to respond.
>> Thank you.
Taking notes.
>> Okay, thanks.
I'll just keep going.
Actually, if it's okay, I would actually like to sort
of second Ms. Bahta's comment about these risk groups.
I do want to call out --
and apologies for jumping in the queue,
but I think we can re-look at that list.
The approach itself makes sense.
I just want to make sure that there are certain populations
that we focus on in this round.
Number one, when we talk about an age-based recommendation,
we talked about how that, in and of itself,
introduced inequities.
And then, the second would be --
you know, I'll just highlight congregate living facilities,
of which long-term care facilities are one population.
I want to actually emphasize the incarcerated population,
where we know that severe outbreaks have occurred,
and that is an extremely vulnerable population.
That is just one example of sort of a risk-based strategy
that I just want to make sure we are robust in thinking
about how we define that, and I do agree that as much data
as we have available to support
that decision would be extremely helpful.
Next, I'll call on Dr. Poehling.
>> Oh, thank you.
Actually, I want to, one, also agree with the approach,
and want to echo the comments of Ms. Bahta and Dr. Lee
about the importance of looking at race and ethnicity.
Because we know the hospitalization
and death rates are higher for this group.
And so, I do think we need to take some special time to look
and come up with a strategy, where we improve health equity,
and do so in a very clear way.
We are in a very different situation now than we were
in December, January, where there is enough vaccine,
and so we will have a dual opportunity.
One, I firmly agree with the importance
of encouraging vaccine for all that are unvaccinated,
but then also thinking about this third dose for those
who could really benefit from it.
Thank you.
>> Thank you, Dr. Poehling.
We'll move on to Dr. Sanchez.
>> Thanks, Grace.
I agree with the -- and first, I want to thank Sarah, Dr. Oliver,
for really an excellent presentation, as always,
and I agree with -- you know, with the risk-based approach.
Certainly the long-term care facility patients
and older adults, and the healthcare personnel --
I think that Ohio, which did an age-based approach,
actually worked quite well.
But I do have some questions
about the whole issue of booster dosing.
Is it an issue of waning immunity after the second dose,
or first dose of the Janssen product?
Especially since we don't have a good correlate
of antibody protection, so is that an issue,
or is it because of the Delta variant that we've seen?
And so, we need a modification of the current vaccine
to further improve the efficacy, especially against infection.
And the other comment was --
I would have the opening up of society
with less stringent other --
you know, with less-stringent measures to --
beyond vaccination -- how has that affected the increase
of transmission that we're seeing with the Delta variant,
and how does that go into effect -- how to take that into account
in the recent -- what appears
to be the lower vaccine efficacy over time?
Thanks.
>> Dr. Lee, this is Dr. Oliver.
I'm happy to just highlight -- Dr. Sanchez brings up a couple
of good points, and I think we --
our data tried to highlight
that it actually may be very difficult for us
to disentangle time since vaccination and the impact
of the Delta variant, especially in some populations
that we know were vaccinated earlier in the time course.
So if we see waning in the last couple of months,
it could be really difficult.
We'll continue to bring as much data to ACIP as we can,
but agree that those are very linked potentially.
And so that'll need to be addressed and thought
out as you guys think through these booster dose
recommendations moving forward.
>> Thank you.
Dr. Bell?
>> Well, thank you, very much, and first of all,
thanks to the team for really, really wonderful presentation,
you know, the clarity of which I think is just so helpful
in terms of moving forward.
And there are a few things that I wanted to comment on.
The first is, I think one of the other things
that the presentation shows, is that process really does matter,
and I think it's quite important that we're continuing
to highlight what our process is, and how we get to a point
of making recommendations.
The second thing I wanted to say is that I think
that it's really quite encouraging to see the amount
of data that has been accumulated over, you know,
certain period of time, but also to highlight a lot of the gaps
in our knowledge, like we were just talking about,
and like Dr. Sanchez was just talking about, and also some
of the issues about safety.
And so, I think that it's also important for us to continue
to recognize what the data gaps are, and in that regard,
I think the third point that I wanted to make is that I think
when we discuss this issue of boosters, we have to remember
that we're starting at a point that the data
to date doesn't show a remarkable reduction
in the effectiveness of the vaccines,
in terms of preventing hospitalizations and deaths.
And so, when we talk about equity, when we talk
about what our approach is to, you know,
whether we should have a risk-based approach,
or how we should do -- approach boosters, I really think we need
to remember that, really, what we --
the most important thing that we can do with respect
to vaccines is to continue to work as hard as we possibly can
to encourage more people to get the primary series.
And that is, I think, in my opinion, the highest priority.
And so, in that context, I think that while I agree that,
should we decide that it makes sense
to recommend booster doses, that it does make sense to do
that in the context of looking at risk.
But there's a number of very fundamental differences
between our first, the rationale,
or the need for the risk-based approach
when we first took this whole issue
of vaccination recommendations on, and the current situation.
One being, as people have said, we've got lots of vaccine,
and two being, as I was just pointing out, at the moment,
we don't have a lot of evidence of reduced vaccine effectiveness
against important outcomes in most of the population,
based on our current data.
So while I agree that it makes sense to look at sub-populations
as we consider boosters, I think that, you know,
how this all plays out, and what the sequencing might be,
and what the timing of the sequencing might be,
might be quite different than the way we did things
when we were talking about the primary series.
>> Thank you.
All right, are there any other ACIP members who wish
to make a comment or ask a question?
Before we move on -- oh, Dr. Brooks, go ahead.
>> Yes, just briefly, as we look for this risk-based approach,
there might be the need to have some level of simplicity
versus complexity, and by definition,
this lends itself toward complexity.
But if it's too complex, that might be a challenge
in the implementation.
So as we move forward with this, we need to, I believe,
think about that aspect of it, make it just not too difficult
to follow and to implement.
>> Thank you, Dr. Brooks.
Dr. Talbot?
>> Yes, I want to go back to the comments made by the FDA,
and I think these are critical.
Since the announcement was made that boosters, which --
I agree with Dr. Watkin [assumed spelling],
that's not a good word.
Third doses would be given starting September 20th,
and since the south is having a horrible outbreak of Delta,
many, many, many hospitals have already started vaccinating
healthcare workers with third doses and patients.
Now, I know the announcement followed by the White House had
that small caveat in, that it had to be approved by the FDA
and ACIP, but I think since it was given with a date,
many assumed that it was given a blessing by the White House,
and this was the next step.
And so, it makes me a little concerned
that these healthcare providers will now not be covered
by the PREP Act, because many people didn't read the
fine print.
So I think this highlights critically the need
for any vaccine recommendations to go through the normal avenues
and not come from outside of the normal avenues.
That is very frightening to me,
that healthcare providers are trying to do the best job
that they can, and are taking guidance from HHS
and White House, and now have put themselves at risk.
Thank you.
>> Thanks, Dr. Lee.
I do just --
>> Can I --
>> -- I just want to clarify, just so everyone knows.
The -- Dr. Doskalas [assumed spelling], who just spoke,
was from CDC, not FDA.
I just want to clarify that one comment.
>> Thank you.
Dr. Brooks, I see your hand is still raised.
I'm assuming it's left from before.
I know we're nearing the end.
I actually will get to all of the people
who raised their hands.
I just, as an ACIP member, wanted to chime
in on two key points in terms of my thinking about the approach.
So I was struck by the fact that some people try
and make it an either/or situation.
I would say that the strategy in my mind is much broader,
and the strategy right now for where we are in the pandemic --
to me, it makes sense to focus on preventing severe disease,
hospitalization, and death.
Which is why, in my mind,
a strategy that highlights the importance
of vaccinating the unvaccinated,
who are the ones predominantly getting hospitalized right now,
as well as ensuring that those individuals who may continue
to be vulnerable to hospitalization and death,
particularly older adults, are included
in the conversation about boosters.
The other alternative would be a strategy that focuses
on preventing all infection.
I guess my concern is that we are not at the point
in the vaccination program in the U.S. or globally
where that seems to me to be achievable, and so,
I feel that it would be important for us
to focus our efforts on preventing severe disease.
Because variants are going to continue to emerge over time,
and will evade our ability to prevent all infections.
As one my colleagues said before,
it doesn't mean it's a failure of vaccines in any way.
In many ways, I think this vaccine is a huge success,
because it has prevented so many hospitalizations and deaths.
So I just don't want us to lose focus on that as a key strategy
that we need to address
until the global situation actually improves,
and until we can get to a point
where I hope it would be possible for us
to even consider eradicating infections.
I'm just not convinced we're there yet until we can ensure
that those individuals who are not
yet vaccinated are able to receive vaccine.
So that's my sort of thinking
about the strategy that we've employed.
The second -- I just wanted to comment on the equity --
well, the issues that are raised
by the legal considerations from the PREP Act.
I want to acknowledge the importance of
and appreciate the clarity
in which it was presented to us today.
I don't think I had that clarity before.
I do want to raise, as a clinician,
that it does raise some equity issues in my mind,
in that if we -- we have a complicated program
in that there are a number of vaccines,
all in different stages of the process of approval.
And that means that this could introduce significant equity
issues by vaccine products if we are not able to address this
from what makes, to me, to be common sense.
That it should not be a product-specific approach
to boosters, but rather a global approach to boosters,
with available vaccine products.
I say that not -- you know,
recognizing that that does not --
is not concordant with what was just stated, but as a clinician,
it puts us in an impossible decision.
If we have to go product by product in this case,
if we're trying to communicate with the public
about the importance of protection
against severe disease.
And so, I guess I would just ask that our federal colleagues take
that into consideration in interpreting the information
around the PREP Act, and enable us to have flexibility
to ensure the intent of any guidance
or recommendations coming
from this group can be applied appropriately, and not based
on a specific product.
With that, I'm actually now going to --
I don't believe there's any other hands from ACIP members,
so I'm going to turn it over now to our liaison,
Dr. Goldman.
Thank you for waiting patiently.
>> No, thank you so much, and I'll be as brief as possible.
First, Dr. Oliver, as always, amazing presentation.
Great concerns on the practice level regarding boosters,
and what is currently going on in many localities,
where people are getting vaccinated for a third dose
on their own, without any recommendations,
non-immunocompromised, and many localities
and vaccinators are just giving out vaccines to whoever asks.
My concern and my ask for the CDC is clear statements
and guidelines that we can discuss with our patients
as to why it's not a good idea for them to just go ahead
and get themselves vaccinated without good recommendation
or guidance from the CDC in the non-immunocompromised.
And this also applies to many of my colleagues
in the healthcare world, who are going out
and getting themselves a third dose as well,
and we already referenced the PREP Act.
But there's also, as previously noted, a great concern
on equity, as many patients who don't have the means to do
so are not able to get their primary series,
let alone a third dose.
So the concern is over-vaccination of patients
who are doing it without guidance.
I would ask for a clear statement from the CDC,
so that we can properly counsel our patients
as to why they should be waiting for the guidance from the FDA
and the CDC for full approval on a booster dose.
And as far as the questions asked,
I think the risk-based strategy is the right approach,
and I look forward to further discussion
on this on the work group.
Over.
>> Thank you.
Dr. Drees?
>> Thank you.
I also wanted to thank Dr. Oliver
for a really great presentation,
and for clearly outlining all the various issues.
I just wanted to restate two things.
One is the importance
of protecting the healthcare workforce.
As everyone is aware, you know, it's not shortage of PPE
or shortage of testing supplies, or all the other shortages
that happened early in the pandemic
that is putting this strain on our healthcare system now,
but shortage of staff.
The second thing is, you know,
Dr. Oliver really clearly stated the data that we have,
the data that we don't yet have but hope to have,
and probably there are data that we won't have
when we make this decision about a third dose for healthcare.
Many institutions have moved toward making COVID vaccination
a condition of employment,
based on the strong ACIP recommendation, and presumably
if a booster is also recommended,
that would fall under that as well.
And I think for many institutions,
that's been a pretty dramatic move,
and it's really been justified by the fact
that we were following the data.
So I think we just need to really be conscious
of following the data for the booster dose as well,
because just as there are many healthcare workers
who were our early adopters already clamoring
for their third dose, you know, we are still trying
to get first doses
into healthcare workers who remain reluctant.
And if we then say they have
to also get a third dose that's not fully evidence-based,
that makes -- that potentially can make them even
more reluctant.
Thank you.
>> Thank you.
Ms. Arthur?
>> Thank you, Phyllis Arthur with bio.
As we move into the fall with the potential
for a booster dose, and flu vaccine, et cetera,
it would be great if the working group can consider how
to help clinicians think through co-administration,
so that we don't fall behind on flu
and other routine immunizations.
And secondly, I think one of the things
that everyone's struggling
with when you read the media is this conversation
of third dose versus booster dose.
And I would really strongly encourage us to try
to be really clear, as Dr. Oliver was in her presentation,
about what the difference is between a third dose
and a booster, because they're getting interchanged
in the media and in public discussions,
and I think are causing a lot of confusion
about who should get what.
And I know it's hard for us to stay consistent,
but I think we're going to have to try to really be vigilant
on those two words, because again, they're causing confusion
for people for what they're supposed to be getting next.
Thank you.
>> Thank you.
Ms. Stinchfield?
>> Yes, thanks, Dr. Lee, and thank you, Dr. Oliver,
for a great presentation, as always,
and so many wonderful comments recently here.
I'm going to just narrow mine down to my last one
that hasn't been mentioned yet,
which is on the global vaccine availability slide.
Wondering, Dr. Oliver, if you could bring us some data
on a regular basis of the United States' contributions of vaccine
to other parts of the world,
knowing that if there's COVID anywhere,
there's potentially COVID everywhere.
So I do think that should be part of our ACIP deliberation,
is not only just American first doses, but globally.
Thanks.
>> Thank you.
Ms. Howell?
>> Hi, Molly Howell,
representing the Association of Immunization Managers,
the 64 awardees responsible for distributing
and implementing COVID vaccination.
I just wanted to echo comments made previously.
We would appreciate if recommendations could be
as simplistic as possible.
Providers have been dealing with changing expiration dates,
changing storage and handling.
So as much as possible, if there could be very specific minimum
interval and interchangeability between vaccines,
it would be appreciated.
I'm sure, on behalf of our providers,
but then also thinking
about immunization information systems,
and having to create forecasts for booster doses.
I also wanted to echo comments around thinking about equity.
In North Dakota, American Indians represent a large
percent of our population, and their life expectancy is not
as great as the white population in North Dakota.
And they often don't put their elders in long-term care,
but live more in multi-generational households.
So if any of that could also be taken into consideration,
that would be appreciated.
Thanks.
>> Thank you.
Dr. Fryhofer?
>> Sandra Fryhofer,
representing the American Medical Association,
and speaking as a practicing physician,
Dr. Lee mentioned using common sense when giving boosters
and making recommendations.
And understand that when we open a vial of this vaccine,
you have to use it that day.
It has a limited shelf life.
The previous speakers spoke
about the expiration dates that vary.
I'm a general internist, and I have a lot of patients
that are older, that have multiple chronic conditions,
that are high-risk from --
of infections, and were among the first group
that was vaccinated.
They're not on chemotherapy.
They have not had a bone marrow transplant, but I'm sort of --
many physicians are in the position
that they have a vial of vaccine.
They can either -- you know, they're going to have
to throw doses away, and this --
and every time a vaccine dose is thrown away,
I think about someone in the world who needs it.
And it just breaks my heart.
I think some of the comments
that were made today are a bit confusing.
They're going back to the sticks, rather than the carrots,
to get people vaccinated.
It's also sending a mixed message when we're trying --
on the one hand, ACIP gave the thumbs-up today.
FDA has fully approved this vaccine, and we're saying, "Oh,
come get vaccinated," and then we're pushing people back.
When the White House or HHS made
that September 20th availability, it led everyone.
It led physicians.
It led the public to believe that they had access
to information about these vaccines and the need
for boosters that had not yet been publicly released.
And to me, that kind of opened the door to a lot of confusion,
and then when we hear today about, you know,
threatening providers with the PREP Act, and all that --
it's not -- we need to all go in the same direction,
to get everyone vaccinated, to get everyone protected,
and to keep everyone protected,
and not to waste this precious resource.
>> Thank you.
Dr. Gutchen?
>> Thank you, Jeff Gutchen,
Infectious Disease Society of America.
In followup, you know, I think it might be useful
to consider re-setting our expectations for what, you know,
these vaccines can do.
They're remarkably effective vaccines,
and they provide a tremendous benefit in keeping people
out of the hospital, and from dying.
And you know, it's an inactivated vaccine,
and whether it's reasonable to expect
that they'll prevent all infections or even the majority
of infections I think is questionable.
And so, you know, going forward, we need to think,
what are we trying to accomplish with these vaccines?
And I think there's a tension here between waiting
to see evidence of increasing serious outcomes
to make a recommendation for a third dose,
and I do think Dr. Watkin's framing of this
as perhaps more appropriately a three-dose primary series
with more durable protection
than a so-called booster is very good.
But I'm thinking about whether or not we can model,
based on what we know about antibody kinetics
and the outcomes that we are seeing, you know, whether
or not we would expect to see more serious outcomes before
that actually occurs, and allow ACIP to make a proactive,
preemptive recommendation, rather than waiting
for the evidence of severe outcomes
to make the recommendation for a third dose.
Thank you.
>> Thank you.
Dr. Gluckman?
>> Yes, do we know if Pfizer or Moderna
at a third-dose booster will have modified the mRNA vaccine
for greater effectiveness for the Delta variant
or other variants of concern?
>> This is Dr. Oliver.
We will be bringing data around that at --
for upcoming meetings, both looking --
primarily looking at immunogenicity
and neutralizing antibodies by variants of concern.
But we'll be asking the manufacturers
to present at upcoming meetings.
>> Thank you.
>> Thank you.
And I do not see any additional hands raised in this moment.
So I'm going to thank Dr. Oliver for reflecting some depths
of this complex set
of conversation the work group has been having,
and want to thank everyone today for your participation.
It's been so important.
I also just want to emphasize that, you know,
it's clear that all of us who are, you know,
at this meeting today and all of our colleagues
at the federal agencies and the White House are committed
to ensuring that we're able
to protect the health of the public.
And we all have the same goal in mind.
I think what we hear today is, you know, the fact that,
with uncertainty in data, there are many paths forward, and so,
our goal is to try and find a way
to make sure we have a deep understanding,
as much as possible, of all of the issues,
and provide our best possible recommendation to the public.
And we'll do our best, knowing that data are uncertain,
and again, that everybody has the best intent in mind.
So with that, if there are no further --
no objections to adjourning today's meeting,
which I do not see -- I will now be very delighted
to adjourn today's ACIP meeting,
and thank everyone for attending.
Dr. Cohn, is there anything else?
>> No, just thank you, and thank you for those final comments.
I think that is very reflective of how all of us feel,
and finally, just please be on the lookout
for upcoming additional ACIP meetings
to present additional data,
and to deliberate potential use of booster doses.
As you've all said, the data are emerging every day,
and we will pull things together, and bring you all back
to get your input soon.
So just to the public, we will announce meetings
as soon as we have dates.
Thanks.
>> Thank you.
The meeting's adjourned.
Have a nice day.
Bye.
