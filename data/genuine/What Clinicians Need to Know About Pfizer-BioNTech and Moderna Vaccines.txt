I would now like to welcome our presenters.
Our first presenter today is Captain Amanda Cohn.
She is a medical officer in the lead for the vaccine
planning unit as part of the CDC COVID-19 response.
Our second presenter is commander Sarah Mbaeyi.
Our third presenter is Lieutenant Commander Sara
Oliver.
I would like to turn it over.
Please proceed.
>> Good afternoon, everyone.
Today we are going to provide an overview of what
clinicians need to know about the Pfizer-BioNTech and
Moderna.
We will review new information as well as reviewing
information we presented over the last couple of weeks
on either COCA or other partner calls.
Next slide.
So both of these vaccines are mRNA.
The Pfizer-BioNTech vaccine was authorized on December
11th.
It was voted to support authorization of the vaccine
yesterday on December 17th.
We anticipate if they authorize that product as well in
the next couple of days.
Both products demonstrate a vaccine effectiveness of
greater than 90%.
This was demonstrated across age groups and racial and
ethnic groups.
The vaccine safety profile of both products are also
accessible -- or acceptable.
There was an imbalance of Bell's palsy cases for both
products, but this is still within the expected range
and what we continue to monitor.
Local and systemic reaction, particularly after the
second dose, occurred but was also expected and
resolved relatively quickly in a couple of days.
The take-home message about these two vaccine products
is they should not be compared with each other at this
time.
They both appear effective and safe.
Looking at information such as whether or not one
product causes more fever than the other or is more
effective in certain groups than the other, you have to
take into account the populations that were different
for these two vaccine clinical trials as well as the
way of the solicited adverse events and the adverse
events that they solicited for.
While there appears to be small differences in these
two products, if you look just at the vaccinated group,
if you look at the vaccinated compared to the placebo
group for adverse events, they do appear quite
comparable.
Next slide.
I am going to take a moment to explain messenger RNA
vaccines.
These next slides were presented at the meeting by
Moderna yesterday but apply to both vaccines in
general.
MRNA vaccines provide instructions directly to the
immune system of the individual getting vaccinated.
The spike protein is the protein that the messenger RNA
codes for.
This efficiently produces a specific immune a memory
response in a natural context, so this is very similar
to how the immune response would happen if you were
exposed to the virus.
However, there is no like virus in this vaccine, and it
can either interact with nor integrate into the DNA.
Next slide.
This goes into a little bit more detail.
The spike protein encoded mRNA and the lipid
nanoparticles that in case the mRNA are the only
ingredients in these vaccines.
The lipid nanoparticles allows these vaccines to travel
to the lymph system and enter presenting cells.
So the encoded mRNA is then read.
The spike protein is produced and then presented on the
surface of the cell.
Importantly, we know from studies that the company has
done that the mRNA disintegrates or is broken down by
the cell very quickly.
I am next going to review the advisory committee for
immunization practices.
After FDA authorization on December 12, 2020, they
recommended the use of the COVID-19 vaccine in person
16 years of age and older under the emergency use
authorization.
On December 19th, with just tomorrow, the use of the
maternal vaccine in persons 18 years of age and older
if the vaccine is authorized by the FDA.
The big difference between the two vaccine products are
the age group for with the authorization goes down to.
It is 16 verses 18.
The other big difference in these vaccines, while they
are both too dose of vaccine series, the Pfizer product
is 21 days apart and the Moderna product is given 28
days apart.
They also made recommendations about prioritization.
ACIP recommends that when a COVID vaccine is authorized
by the FDA and is recommended by ACIP that healthcare
personnel be offered vaccination in the initial phase.
This is phase 1A.
To let everyone know, ACIP is considering phase 1A and
1B, and we anticipate them being completed by Sunday,
where the next final group would be all adults.
Next slide.
To complement the ACIP recommendations, the CDC has
also published on our website clinical considerations
for the use of the Pfizer-BioNTech vaccine.
These were presented last week and are available at
this link on our website.
These clinical considerations will be updated to
include information on both authorized mRNA products.
We anticipate that the clinical considerations will be
nearly identical at this time for both products other
than the two differences that I've just mentioned.
There may be some other small differences, but we are
trying to align the clinical guidance as closely as
possible, regardless of the product.
That does not mean the products are interchangeable.
These clinical guidance was informed by data submitted
to FDA for the EUA of the vaccine, other data sources,
and we relied heavily on the general best practices
guidelines for immunization as well as expert opinion.
We will continue to update the clinical guidance
documents as we understand these vaccines more.
A couple of key highlights to make from these clinical
considerations is that we want clinical providers to
understand that these vaccines are reactive.
Before a vaccination, you should question recipients
about expected local and systemic postvaccination.
This is particularly true.
It is particularly true for the second dose.
This is including things like redness, pain, and fevers
after vaccination that resolved within 24 to 48 hours.
Unless a person develops a contraindication to
vaccination, they should be encouraged to complete the
series even if they developed postvaccination symptoms
in order to optimize protection against COVID-19.
At this time, we do not have data to support use of a
single dose of vaccine.
Next is that it may be taken for treatment of
postvaccination, but we do not recommend routine
prophylactics due to lack of information on the impact
of its use of antibody responses.
The link for this is included below.
Next slide.
The other really important thing to counsel your
patience and for all of you to understand is that
protection from vaccination is not immediate.
The vaccine is a two dose series and will take one to
two weeks following the second dose to be considered.
Additionally, no vaccine is 100% effective, so given
the current limited information on how well the vaccine
works in the general population, how much it may reduce
disease, severity, or transmission and how long
protection lasts, we are recommending that vaccine
persons continue to follow all current guidance to
protect themselves and others, including all of these
things you see below, which are normal social
distancing guidance.
We do recommend that an individual follow guidance
after exposure to someone with COVID-19, even if
vaccinated, and following workplace or school guidance.
Next slide.
We will talk about this a little bit more in the
question and answer, but we do have in our clinical
guidance and algorithm to support triaging persons
presenting for mRNA vaccines.
The green column indicates conditions in which you may
proceed with vaccination.
The second column is conditions which are considered
caution to vaccination.
The third column is contraindications to vaccination.
This is split up into two rows.
The first row is conditions, so things like
immunocompromised conditions, pregnancy, lactation.
A person may proceed with vaccination, but additional
information should be provided to those individuals.
Additionally, any history of allergy to food, to pets,
to insects or allergies not related to vaccines can
proceed with vaccinations, but we recommend a 30 minute
observation for person with a history of severe
reaction due to any cause.
Precautions include moderate to severe illness as well
as history of severe allergic reactions to another
vaccine or history of severe allergic reactions to any
injectable therapy.
That would require a risk assessment, considered
differing vaccination, and if an individual does get
vaccinated implementing a 30 minute observation.
Finally, there are no conditions which are
contraindications to vaccination.
So we do have an additional focus interim
considerations for management of anaphylaxis, which
includes information on early recognition, medication
and supplies, management of anaphylaxis, and
recommendation to immediately activate EMS if there is
an anaphylactic reaction and patient counseling and
reporting.
Next slide.
These are the recommended medications and supplies that
sites should have available to manage anaphylaxis.
Epinephrine, antihistamines, stethoscope, and timing
device to assess a pulse should be available at all
sites.
There is some additional sites recommendations to
include where feasible.
The most important thing to do is to administer
epinephrine and call 911 if any individual is
experiencing anaphylactic reaction.
I want to highlight that we have multiple COVID-19
vaccine communication resources for healthcare
providers, for medical centers, both how to engage in
effective COVID-19 vaccine recommendations, a strong
recommendation from a healthcare provider.
We know that is one of the most important things to
inform a person's decision to get vaccinated.
Even if you are a healthcare provider who is not
administering vaccine at this time, all of you see
patients every day and can recommend vaccination when
it is the right time for that individual to get
vaccinated.
We also have a toolkit with multiple posters and
stickers and slide presentations to talk to both
healthcare personnel in your institution or medical
practice as well as your patience.
So we do have more toolkits that will be available
soon, including one for long-term care facilities, for
health departments, for community-based organizations,
and for employers.
Next slide.
One other key set of documents we want to point out is
we have developed infection prevention and control of
accommodations for persons with postvaccination
symptoms.
This is really important both for healthcare personnel
as well as long-term care facility residents.
It helps build out a framework for determining, you
know, we do not want to unnecessarily exclude
healthcare personnel who only have postvaccination
signs and symptoms from work.
We also do not want to inadvertently allow healthcare
personnel with another transmissible infection to work.
These are both available on our website as well.
Next slide.
So we will now move to the second part of our session
where I will be asking questions and moderating a panel
discussion with Dr. Mbaeyi and Dr. Oliver.
These questions have been taken from the multiple
questions we've received from healthcare providers,
including during our last COCA call over the last week
to 10 days.
We really want to hear your questions.
It has helped us so much in understanding what clinical
guidance we need to have available to healthcare
providers, so please continue to put questions that you
have in the Q&A as we go through these questions and
have this discussion.
So I will begin with a question that I have asked and
answered a couple of times, but I'm going to ask Dr.
Oliver to talk about this.
I think the answer is evolving.
What do we know currently about the benefits of mRNA
COVID-19 vaccines to prevent transmission?
>> Thank you, Dr. Cohn.
The vaccine manufacturers of the Pfizer biotech has
stated they are doing additional studies to better
understand the impact for you we look forward to being
able to review that data when it's available.
Yesterday information was presented at the meeting for
the Moderna vaccine.
Among people who received one dose of the vaccine,
there was a reduction in the number of participants who
were asymptomatic but had a positive PCR compared to
those participants who received placebo.
The screening was done when the participants came back
into receive their second dose of vaccine.
It's early data, and we still need to know more around
how these mRNA vaccines will prevent transmission, but
overall it is encouraging from the clinical trials.
We look forward to additional information around how
these vaccines may prevent transmission.
Until they have that additional information, and until
there is high vaccination coverage for the general
population, we do want to continue to encourage and
recommend that vaccinated people continue to use all of
the tools available for preventing COVID-19, including
mask use, social distancing, and hand hygiene.
Hygiene even after vaccination.
>> Great.
Thanks so much.
I do think -- I am really looking forward to this
information, and I'm really excited about the small
amount of encouraging data that was presented
yesterday.
So, Dr. Oliver, I will also -- since I have two
cigarettes, I am using doctor.
So Dr. Oliver, should people who have had COVID-19 B
vaccinated, and should they be vaccinated now?
>> Thanks.
COVID-19 vaccination should be offered to persons
regardless of prior COVID-19 infection.
People should wait to get vaccinated until after their
acute illness is resolved and after they've met the
criteria to discontinue isolation.
There is current evidence that reinfection is uncommon
in at least 90 days after initial infection.
Because of that, persons with a recent COVID infection
may defer vaccination until the end of the 90 days if
desired.
>> Great.
I am going to take this question one step further.
What if, for example, I get dose one and then when I am
do for dose number 2, what if, a, I have symptomatic
COVID and I am ill, and what if I have a positive PCR
test showing I have asymptomatic COVID.
>> We really want to protect the healthcare personnel
people who would be providing the vaccine and not
expose them to risk.
There are certain circumstances that are detailed in
the clinical considerations, especially around
quarantining individuals were people residing in
congregate care settings, when they are under
quarantine, may still receive vaccine.
Overall individuals who are positive should wait to
receive vaccine until they have met the criteria and
discontinue isolation.
>> Great.
Thanks so much.
So it's not for concern about us being -- it's not
about concern for vaccine safety forgetting that
vaccine, it's really about maintaining our quarantining
recommendations.
>> Exactly.
>> Okay.
Moving on to what I know is a question that is at the
top of everyone's minds and has been really
challenging.
Dr. Mbaeyi, can you talk a little bit about the
contraindications to components of the Pfizer-BioNTech
and Moderna vaccine?
What does it mean in terms of -- what kinds of things
we do think about in terms of being concerned about
whether or not you have had a severe allergic reaction
to one of those components in either vaccine.
What should people be thinking about in terms of severe
versus less severe allergic reactions and anaphylaxis?
>> Sure, thank you, Dr. Cohn, for that question.
As you mentioned a little bit earlier, there are some
people that should absolutely not get this vaccine.
Those are people that have had a severe allergic
reaction to any component of the vaccine.
I just wanted to point out, one of the components that
Dr. Cohn showed, you know, contains polyethylene
glycol.
That something clinicians are used to using for things
like laxatives or chronic bowel prep.
If someone had an anaphylactic reaction to that
medication, you know, that's a component of the
vaccine.
That's kind of the main one of concern.
But people who have had a reaction to any component of
the vaccine should not get it.
If somebody gets the first dose of the vaccine and
experiences anaphylaxis, they should not get a second
dose of the vaccine.
In terms of, you know, how people can decide, was this
a serious reaction, like anaphylaxis or not, when they
are talking to their patient, you know, some things
like listening.
Did it require use of an EpiPen customer did it require
hospitalization or visit to the emergency room?
Really trying to elicit those symptoms to see how
severe an allergic reaction it might have been.
So there is those people that should not get vaccine
but there's also that group of people who there is
precautions around the vaccine there should really be a
history of little bit more.
Somebody who has had a severe allergic reaction to any
vaccine or any injectable medication at this time we
are recommending those are precautions that are on the
vaccine.
Somebody can still get the vaccine, but there needs to
be that discussion to better understand what happened
and take into account, you know, kind of various
factors to determine whether that person should get the
vaccine.
As Dr. Cohn mentioned, people with things like food
allergies, insect allergies, latex allergies, those
kinds of things, those people we do not have any sort
of contraindication or precaution to people with other
types of allergies.
Having said that, everybody who gets the vaccine we are
recommending an observation.
For anyone with history of anaphylaxis due to any
reason at all, we are recommending a 30 minute
observation.
For everybody else who's never had anaphylaxis in their
life, we are recommending a 15 minute observation.
>> Great.
So I have a daughter who carries an EpiPen.
I've never had to use it before, but she is allergic to
certain Trina's.
You would recommend that she go ahead and get
vaccinated when she is old enough.
She's 18.
Would you recommend that she go ahead and get
vaccinated when she is recommended based on
prioritization but you watch her for 15 minutes to 30
minutes, is that the advice for what we know are many,
many people who are concerned about anaphylaxis but
have not had to use that EpiPen before?
>> Yeah, that's right.
People of other types of allergies who've experienced
allergic reactions but have never had, you know, a
severe reaction such as anaphylaxis, you know, a lot of
people get EpiPen.
They are given that.
Unless someone has had an anaphylactic reaction in the
past to a vaccine or injectable medication, they can
get vaccine, they just need to be observed afterwards.
>> Great.
Thank you.
I apologize.
Those are, unfortunately, my dogs.
Someone rang the doorbell.
Let's move onto the next question.
Can you go into a little bit more detail about what is
needed on-site vaccination clinics?
I know I talked about this a little bit, but do you
have anything else to add to talk about what is
prepared in case there is anaphylaxis.
>> I think the key things they need to do is make sure
they are at the vaccination site, whoever is
administering the vaccines are involved and should be
able to, you know, rapidly recognize the signs and
symptoms of anaphylaxis, to give epinephrine.
Epinephrine is first-line treatment.
There are no contraindications to getting epinephrine
credit if somebody has anaphylaxis, you want to give
that immediately and then call for emergency services,
call for 911.
And so I think those are kind of I think the main
take-home messages.
We did prepare kind of some recommendations of the
minimum that people need to have on site.
I think the minimum, like I mentioned, is epinephrine.
We do recommend that people have antihistamines on
site.
That does not treat anaphylaxis.
That does not treat, you know, respiratory obstruction
and things like that, but it can provide
symptomatically relief for people that need it.
We do recommend some equipment to help monitor vital
signs or assess vital signs.
Blood pressure cuffs, stethoscope, something to time
someone's pulse.
Then there is the other things that, you know, are used
for treatment of anaphylaxis that if you have it or if
you're able to get it, you know, the more you can be
prepared, the better.
I think what I've mentioned are really kind of minimum
requirements.
Again, being able to recognize anaphylaxis, administer
epinephrine appropriately, and call for emergency
services are kind of the ABC for vaccination sites to
do.
>> Great.
Thank you.
Dr. Mbaeyi, I know and some types of settings it can be
really challenging to recognize anaphylaxis.
For example, if an individual who is living in a
long-term care facility setting who may have some
dementia and cannot report symptoms, if you are sort of
on the fence about whether or not that individual is
having an anaphylactic reaction, you are saying you
would go ahead and give epinephrine regardless, right?
And then call 911.
>> Yes.
If anaphylaxis is suspected, epinephrine delays -- you
know, delays in administering can create bad outcomes.
I do want to mention, as you mentioned, it can be hard
and some patients to tell.
Hindsight is always 2020.
I do want to mention that some older adults, especially
those who have certain cardiac issues like
hypertension, they are more at risk for kind of cardiac
side effects from epinephrine itself, so you,
certainly, do not want to give unnecessary doses when
people do not need it.
Like I mentioned, because of how life-threatening
anaphylaxis can be an drafted prompt attention is
necessary, if anaphylaxis is expected, you should
administer it and then call 911.
>> Great.
Thank you.
I guess to close out the question on anaphylaxis, I
just like to make the comment that, you know, we are
not saying that --
anaphylaxis still is rare, but if these reports do end
up turning out to have been real anaphylaxis and it is
occurring at the more than regular rate, we -- usually
anaphylaxis to vaccines is more than one in a million.
It's one in about 1.3 million persons vaccinated.
We are vaccinating a lot of people over the next couple
of months, and if it is lower than that, you know, one
and 100,000 or one in 500,000, the benefits of
vaccination are really important, but we will be doing
whatever we can to understand what is causing
anaphylaxis and supporting continuing vaccination
unless there is a real need to shift.
I will say the cases that have been reported have all
been reported from Pfizer vaccine.
You know, it is still really a handful.
We do not know if this will happen with Moderna
texting, but we are maintaining the same clinical
guidance for both vaccines until we know otherwise.
So moving on to vaccination.
We are going to talk about some special populations.
I know a lot of this information is in that document,
but as you know, the vaccine clinical trials did not
include unknown pregnant women.
Dr. Oliver, can you talk a little bit about whether or
not pregnant persons can get before vaccines and if
there are special considerations for pregnant women?
>> Absolutely.
If a pregnant person is a part of a group that is
recommended to receive it COVID-19 vaccine, such as a
healthcare personnel, they may choose to be vaccinated.
While we think a conversation with a healthcare
provider may be helpful in helping the pregnant
individual make that decision, it is not required prior
to vaccination.
I think from the clinician standpoint, when thinking
through talking with a pregnant patient, providers need
to think through what we know and don't know about
vaccines during pregnancy.
Based on our current knowledge, and leading up to these
recommendations, we really pulled together some of kind
of the country's experts in this technology and in
pregnancy and in pregnant women.
The experts believe that mRNA vaccines are unlikely to
pose a risk for people who are pregnant just based on
the biology of how these vaccines work.
The vaccines are not life.
The mRNA degrades quickly after vaccination.
There has not been any safety threats that have been
identified.
Observational data demonstrate that while the absolute
risk is low, pregnant people with COVID-19 have an
increased risk of severe illness.
by including illness that resulted in an ICU
ventilation or death.
They also may be at increased risk for adverse outcomes
such as preterm birth.
While there is no data on the safety of these vaccines
in pregnant people, studies are ongoing.
So there were some inadvertent pregnancies in the
clinical trials.
In both the Pfizer and Moderna trials, the
manufacturers and FDA and CDC are going to follow it to
see how those pregnancies progress and the outcomes.
There have not been any safety issues identified to
date.
And then the animal studies.
We call those the developmental and reproductive
toxicity studies.
Those are ongoing, and we expect to have those results
very soon.
Hopefully, the studies in pregnant people specifically
are planned and will be beginning soon as well.
The clinician also needs to consider some other factors
when discussing this with pregnant patients, including
the patient risk of exposure to COVID based on their
occupation such as the exposure in a healthcare
setting.
If they are a healthcare personnel and a level of COVID
in the person community.
Risk of COVID to the baby, the benefits of the vaccine
and the known side effects and a lack of data around
mRNA vaccine and during pregnancy, balancing that with
what we do know.
>> Great.
You just reminded me.
I am going to give a plug for the safe, which is the
active safety monitoring system that we are asking
people to get vaccinated to enroll in.
It is a text message-based system where we are
collecting information on people's adverse events, if
they have a significant health impact after
vaccination, we are following up with phone calls to
understand that health impact better.
We are reminding people.
We are asking people to let us know how they are doing
up to two weeks after vaccination and then a couple of
additional time points.
We have really had incredible uptake of persons
enrolling in this first week of vaccination.
I've been so happy because it is really going to give
us the most timely -- it's going to really help inform
how to use these vaccines effectively and safely.
I will also say that this is following individuals who
are being vaccinated who are pregnant, and so if a
patient or if any of you are pregnant and get
vaccinated, we really want to understand vaccine safety
in pregnant individuals, so we already have more
pregnant women enrolled than we had in the clinical
trials or that were vaccinated not knowing they were
pregnant in the clinical trials, so be really excited
about that.
[barking].
Dr. Oliver, can I ask you then about lactating women?
Does the same hold true?
>> Yes, absolutely.
There is no data, again, on the safety of the COVID
vaccines in lactating people or in the effects of mRNA
on a breast-fed infant or on milk production or
excretion.
However, mRNA vaccines are not thought to be a risk to
a breast-feeding infant, so a lactating person who is a
part of a group that's otherwise recommended to receive
COVID-19 vaccine --
for example, in phase 1A, the healthcare personnel may
choose to be vaccinated as well.
>> Great.
Before we leave this topic, can you just give us an
update about other provider organizations and clinical
guidance that they have released as well?
>> Yes.
When CDC was developing these clinical considerations,
we did it in close collaboration with ACOG and AAP.
There is a practice advisory available online and the
pregnancy webpage on the COVID vaccines site,
specifically linking to that practice advisory as well.
So I think recognizing that some of the burden of
walking through the risks and the benefits is going to
fall to these OB/GYN's and providers that people may
turn to for questions.
ACOG has provided that information and support in
addition to what is available from the CDC website.
>> Great.
Thanks.
Now moving to the topic of immuno compromised persons.
We are going to turn back to Dr. Mbaeyi.
I know in the triage slide that persons who are
immunocompromised are not considered a contraindication
for vaccination, but there is a lot of questions.
You know, there's a wide range of immunocompromised
persons and persons receiving medications like
Biologics.
So what are the current -- what is the guidance for
individuals who have -- who are immuno compromised and
around receiving a mRNA COVID vaccine?
>> Yes.
As he mentioned, people who are immune compromise can
receive the vaccine, unless they have any other
contraindications that were already mentioned.
People with stable HIV were included in the clinical
trials.
Other people with other types of immunosuppression were
not included, so we really don't know right now kind of
the benefits and risks of the vaccine for them or the
safety and efficacy, but these people we believe to be
might be at risk of severe COVID disease.
There is really kind of that risk that needs to be
taken into account.
So what we are saying is that, you know, people with
immunosuppression can get the vaccine.
They should just be aware that we don't really have
that much data in the vaccine may not work as well and
they have some diminished immune responses.
It makes it important for them to continue with the
health measures that are recommended for everybody like
social distancing, masking, all of those kind of things
to help keep themselves safe.
>> Great.
Is this similar for persons with autoimmune disease?
I know there is a lot of concerns about autoimmune
disease and these vaccines.
What are the current recommendations are guidance
around that?
>> Yes.
It's a similar recommendation.
We really don't have much data in this particular
group.
People with autoimmune disease, they were eligible to
it be enrolled in the clinical trials, so they were
able to take part in the clinical trials.
There were not any -- you know, there was no data
available specifically in this group, but when FDA
reviewed the data, they did not find any kind of
imbalances between the vaccinated group and the
unvaccinated -- and the placebo group in terms of, you
know, occurrence of symptoms consistent with autoimmune
diseases.
We recommend people with autoimmune diseases or persons
on biologic treatment, they can get the vaccine unless
they have a medical contraindications such as the
anaphylaxis issues we were talking about earlier.
>> Great.
And then final question in this grouping.
So what if -- I know we are saying people who have had
COVID-19 should be vaccinated but they can -- if you
are trying to prioritize, you could defer vaccination
for 90 days in those individuals.
Have the recommendations changed if a person received
convalescent serum when they were treated for COVID-19?
>> Yes, it's a great question.
Again, we don't have data on this in terms of how soon
after somebody gets a treatment or convalescent serum.
The safety, efficacy, all of those parameters.
But we do know some things about the half-life of how
long the antibodies would last in the system.
Based on that information, we are saying that people
who have received convalescent serum or monochrome,
they should delay vaccination for at least 90 days.
This is a precautionary measure until we have
additional information available.
This is to help avoid interference of the antibody
treatment with vaccine -induced immuno responses.
So it's kind of based on what we know about these
therapies but also knowing that people who have been
recently infected with this are unlikely to have
reinfection in those 90 days, so we are saying wait 90
days to get the vaccine if you have had antibodies or
convalescent plasma.
>> Thank you.
A couple of questions about dosing administration of
these vaccines.
As you know, it is next to impossible to make sure that
everybody gets back to get their second dose right at
21 days or right at 28 days.
Can you talk a little bit about what happens if a
person comes in before 21 days or 28 days, depending on
the product or after.
What are the recommendations to manage differences in
time intervals between doses?
>> Sure.
So the Pfizer is recommended at 21 days.
The Moderna is 28 days.
The reason is simply the way the studies were designed.
Pfizer gave there is at 21 days and Moderna did 28
days.
Not based on any specific concerns around how the
vaccines work, but well aware that it is difficult
especially if the products are different to know
exactly when everybody should come back in the second
dose scheduling.
We have had some kind of intervals where things are
okay based on data from the clinical trials.
They said that a four day grace period should be fine.
In addition, there is no maximum interval between the
first dose and a second dose.
If there is a delay in receiving the second dose, they
should receive the second dose as soon as possible
after that kind of 21 or 28 day interval.
You do not have to start the series over again.
At this point, there's no recommendation where we
restart the series or need to repeat doses.
A person receives two doses of these vaccines,
especially in the setting of limited supply.
That is what is recommended right now.
>> Great.
Thank you.
That makes a lot of sense.
We do have lots of systems in place.
You know, electronic systems and at the state and the
health department to support people having reminders to
get back for their second doses.
Hopefully, a lot of people are getting their second
dose is scheduled at this time when they come in.
Certainly, as vaccination expands, I think that is
going to be a challenge.
Hopefully, we will have more data to inform
effectiveness with differences in administration dates.
One more question for you, Dr. Oliver, that we have
also gotten a ton of questions about.
Can influenza or any other vaccine be administered at
the same time as other COVID-19 vaccines?
>> So right now we are recommending that the mRNA
vaccines be given alone with a minimum interval of 14
days before or after administration.
If a vaccine -- if a mRNA vaccine is inadvertently
administered within 14 days, providers do not need to
repeat the dose or restart the series of the mRNA
vaccine.
Again, this is mostly in this time where we are trying
to learn about, you know, monitoring these vaccines.
We just want to have a very clear picture of what is
happening specifically with related to the mRNA
vaccines.
If an individual receives multiple vaccines at the same
time, it can be hard to figure out kind of what's going
on in that picture.
So for right now, we are saying vaccine given alone
with an interval of 14 days before and after with the
knowledge that as this expands and as we learn more, we
will update that recommendation.
>> That's great.
But if a person comes in and cannot remember if they
got their flu vaccine a couple weeks ago, you do not
have to track that down.
You can go ahead and administer it and not have to
repeat it.
The goal is to be 14 days apart.
I really understand and all of our other routine
immunization guidance, we recommend coadministration of
vaccines, because we want to use every opportunity.
I think this vaccine is still under an emergency use
authorization and clinical trials were not done that
included coadministration.
We will shift our guidance when we feel we have the
data to support that, but for right now try to
administer this alone and within 14 days before or
after another vaccine.
So, Dr. Mbaeyi, could you talk a little bit -- I think
this is going to be our last question.
I know myself as long as -- and I am guessing most of
this providers on this call have never actually
administered a vaccine or potentially anything other
than a diagnostic test under an EUA.
Could you talk a little bit about what providers need
to report, but they need to do, and what are the
requirements around administering COVID-19 vaccines
under an EUA?
>> Sure, yes.
It is a great question that I know probably a lot of
people need more information on.
I think, first, all COVID-19 vaccine providers should
really carefully review these requirements that are in
the COVID-19 vaccine provider agreement.
This includes following CDC, AC IP, and manufacturer
recommendations for the storage, handling, and
administration of COVID-19 vaccines.
They also should be familiar with the information in
the EU a sheet for healthcare providers administering
the vaccine.
As we talked about before, be prepared to medically
manage any severe reactions that may occur.
And then all patients must be provided with the fact
sheet for recipients.
They should be given this prior to vaccination.
There is also a vaccination record card or a shop card
that comes in ancillary kit.
That completed vaccination record card should be given
to each patient so that they know what they got, what
vaccine they got, and when they need to contact to get
their second shot.
And then vaccines administered should be documented in
the patient's medical records within 24 hours of
administration.
We suggest vaccine providers should use their -- you
know, make their best efforts to report the
administration data to their jurisdiction either
through their jurisdictions IIS or CDC vaccine
administration management system as soon as it is
practical but ideally no later than 72 hours after
administration.
Providers are also required to report their vaccine
inventory to vaccine finder daily.
They must report to the vaccine adverse event reporting
system for any vaccine administration errors, even if
there was no associated adverse event.
All serious adverse events, regardless of whether they
think it's vaccine related or not, multisystem
inflammatory system in children and adults as well as
cases of COVID-19 that result in hospitalization or
death following vaccination.
In addition to these, any clinically significant
adverse events may also be reported even if the
provider is not sure whether or not vaccination caused
that.
There is also additional requirements in the FDA
conditions of use that are kind of on the FDA website.
Again, like Amanda mentioned, we are also encouraging
providers to ask their vaccinated patients to
participate in the be safe program, which is the
voluntary monitoring system that would help us kind of
understand the safety outside of clinical trials.
So I know that was a lot of information, but that
information is found in the vaccine provider agreement.
That information is also available on our website as
well.
>> Great.
Thank you so much.
I know that a primary reason to report is to make sure
that patients do get the same vaccine, but I will also
tell you that all of this data that is coming in and
being reported by all of you is incredibly helpful as
we assess potential adverse events.
It gives us a denominator that's really quite critical.
We appreciate it.
Dr. Mbaeyi, Dr. Oliver, I also appreciate you doing
this today with us.
I will hand it back over.
>> Thank you.
Next slide, please.
Here are some resources.
Would you like to remark on these?
>> Sure.
We did just put some general information, but this is
with the Pfizer EUA and information about COVID
vaccines from the FDA website.
There will be -- once Moderna EUA is authorized,
similar information will be authorized for the Moderna
product.
I did peruse the FDA website this morning, and the
patient fact sheets have been translated into multiple
languages already, which is incredible.
Always, you know, if you need anything like that
related to the EUA specifically, go to any of these
links on the FDA website.
>> Thank you very much.
I want to thank everyone for joining us today with a
special thank you to our presenters.
Thank you so much for providing our audience with such
critical information.
Today's COCA call will be available on demand a few
hours after the live call.
You can find a video recording of today's call.
Please continue to visit to get more details about this
call and others as we intend to host COCA call to keep
you informed on the latest guidance and updates of
COVID-19.
Be sure to subscribe to receive notifications.
COCA call announcements for other announcements are
sent via e-mail.
In addition to sent visiting our webpage, please
subscribe to COCA to receive notifications about calls
and other COCA calls and services.
Please share the call announcement with your clinical
colleagues.
You can join the mailing list by visiting the COCA
webpage.
Click on get e-mail updates and enter your e-mail
address.
To stay connected to the latest news from COCA, be sure
to like and follow us on Facebook.
Again, thank you for joining us for today's COCA call,
and have a great day.
