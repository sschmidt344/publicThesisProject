read these ones out so ken zeller
question from ken dollars what's the
difference between the first
and second dose does
first dose provide any protection
against infection
so um if you see here where it says
first infection and repeat infection
so the the first dose that you get is
the one that says hello immune system
this is the infectious material this is
what we're looking at
and your body makes a nice immune
response and you normally
clear the virus and um i say normally
that's how infection is supposed to go
your body's supposed to get it under
control immunologically and then you
keep going along with life
however if you get infected again what
happens
is that your immune system goes oh hey
we've seen this before
let's go after it and let's make an even
better response
and what you're doing is you're honing
your memory so every time you see
a specific type of virus or bacteria
your immune system remembers it and it
gets better and it makes
better antibodies and then it helps
clear the virus or the bacteria every
time faster and faster
so in the case of the sardis cov2
vaccines
a lot of us still haven't been infected
and
even for those of us who have the first
vaccine is still great
because for those of us who haven't been
infected it's gonna educate our immune
system and tell them what to be prepared
for and then we're gonna do what's
called this boosting when we get that
second dose
for people who already have been
infected that first dose
is going to act like a booster and then
that second dose is going to act like
another booster so they're going to be
even more
farther ahead in the immune memory
honing if that makes sense
awesome thanks very much for the
question we had also one from our
colleagues in
uh mental health about you know binax
now or some of the antigen testing
if someone gets vaccinated can they get
detected by some of the tests like binax
now or some of the antigen
tests and come back positive after a
vaccine
you know that's a really good question
um i
don't know the binax now rapid antigen
test specificity
is that one is based on protein not
on nucleic acid i so i i would say in
that case
um the the mrna
vaccine it makes those proteins and then
those proteins are going to be very
quickly
uh taken up by your immune system so if
you were to
potentially test somebody in that really
tiny window
and it the the binax now test does
detect spike protein
then you may get a false positive
if you will but otherwise i would say
no you you shouldn't have an issue with
that um
but i would have to actually get a
really concrete answer from you on that
i can look it up and get back to you
that's a good question
if we're trying to manage particular
facilities
is there a percentage of employees at a
particular facility that
you know that would enable safe removal
of
social distancing measures to normalize
workflow
in terms of like percentage of
vaccination you imagine if you have an
ic
you know a facility with 100 people in
it and let's imagine that
you know where would things get where
you could start to
remove those restrictions i i think the
the estimated 70
that scientists are suggesting right now
off of this um
i would have to definitely check the
modeling on that though for sure but
right now uh mayo clinic is suggesting
that 70
of the population so whether you're in
the entire country or where you're at
it's based off of the are
not and the uh virulence of that virus
so um
collectively i think that 70 of the
employees
if i was making an educated guess would
um have to be
vaccinated or have immunity to go ahead
and start altering your workflows
awesome thanks very much uh do you have
a perspective this comes from our
department of elementary and secondary
education of
uh do you know what the status is on the
trials for children
since they're not included in the
industry
yeah so um i i let me i'll remember it
correctly hopefully
but um pfizer actually started their
trials at the end of october and rolling
between the ages of 12 and 17
in their children's trial and then
moderna is actually
slated to start their trial for that
same age group
um i think by the end of this month
but they haven't given any indication
that they're actually starting on that
um right then they may be pushing it
back a little bit more
but the way that this is probably going
to work is that first we're going to do
the 12 and 17 year olds and get safety
and efficacy there and then it will roll
down into probably like 12 to 5 year
olds
so because children have really potent
immune systems
we want to slowly stepwise it down and
make sure that they don't
you know have any adverse effects to the
reaction but yeah
awesome
[Music]
and i think someone could go on neat
there's some background in there but
uh from ann preside from a department of
corrections a great question which
i know is on people's minds um if
someone's been
positive should they still get
vaccinated
yeah um so i think this kind of touched
a little bit on before
but yeah you should um definitely and
the cdc is also saying to go ahead and
do that
and the reason is is because you saw the
infection once
so your immune system is is out there
patrolling and they know what's there
but then this vaccine is going to go
ahead and say
hey let's make you even stronger and
even better and so
having that vaccination is then just
going to hone the memory that you've
already made
so it's it's a good idea to go ahead and
get vaccinated
awesome and a question of do you have
the
perspectives current perspective on
you know the how long the current
injections or
vaccinations will will be effective
what's the duration of the
yeah durable immunity this is a good
question
so these trials are set up to have a two
year follow period
so we'll be assessing immune efficacy
and durability of immunity out to two
years
um right now there's no indication that
this should
wane anytime soon but we just don't have
the data on that if we talk about from
um
our lab based models so in mice we see
that they are maintaining immunity
to these vaccines for a long period of
time so again we just don't have the
data yet but
all indications and and um
concepts would suggest that we will be
able to have
uh some relatively long lasting immunity
might not be
quite like our measles vaccines that we
get as a child and then we're protected
for forever
but we should have some media for a
while
awesome no there's been some and this
comes from anna hugh and our department
of labor industrial relations
there's that recent news about the
potential
mutation of the virus uk
uh does that affect the efficacy of the
current vaccines
um no right now based on where these
mutations are
and um the modeling that they have been
doing
um they have they don't
feel that that that this virus will
evade the vaccine so the vaccine
will still be effective for this new
strain
they don't anticipate it being an issue
katie joe wheeler from our department of
natural resources let me see if
i'm going to ask actually katie joe why
don't you come on
and voice your question because it's a
few lines here and it's probably better
for you to do it
than for me to try and synthesize it
sure
i'm getting questions from folks about
the particulars of if i've had the virus
or
if i have had a vaccination why do i
still need to wear
the mask personally which is a slightly
different question than the one you've
already answered for us dr thomas so
i wondered if you could elaborate on
this concept of i have my own immunity
but i may actually be able to harbor and
transmit the virus to others
yeah yeah so you actually have put the
the
the finger right on the nose um so
there's actually different kinds of
immunity that can be induced
and um one of them that we have is
called sterilizing immunity
and this is the type of immunity where
your body
basically blocks anything from ever
coming
in and affecting you again like it just
isn't going to infect you
however that is very rare
most of the time what we get is
something called protective immunity
and this is what this type of immunity
did these vaccines as well as copen 19
is giving us
and this means that our immune system
can
recognize invaders and clear them
but those invaders can still have the
opportunity to give you an infection
so you might not know it you might have
a low level infection
and your immune system is clearing it
out but you're not feeling sick
because you're that's the vaccine has
essentially made it so you don't have to
get sick
right you don't have to have the massive
inflammation
and coughing and everything because your
vaccine-mediated immunity
basically created the immune response
without having to do that
so while your body's getting rid of this
invader
you could still have the virus in you
and when you go out and you breathe on
somebody
you could potentially infect them even
though you don't feel sick
right so that is why we need to make
sure
we can't take our mass off because even
though you don't feel sick and your
immune system
whether it's from natural immunity or
vaccine-mediated immunity is able to
keep you from getting sick
you can still potentially have the virus
in you and then you can potentially
infect other people
and if they're not vaccinated if they're
those blue people
in the herd immunity infographic then
they're gonna get sick
so it's kind of yeah it's great that
you're not gonna get sick now but
the reason we're doing this is also for
our family and our friends and our
community
so we're just if we can wear our masks
until enough people around us
have immunity and are vaccinated then
that would be
ideal because then we can all take our
mass off without
worrying that we're going to infect
somebody who's not vaccinated or who
doesn't have immunity
was that was that helpful at all
thank you yeah and i'm happy to talk
more um with you
about herd immunity and give some better
examples too if that will help you move
forward
and explain that to people
thanks very much dr thomas we have a
couple others
from cindy dixon in the office of
administration
how many days after the second shot
would a person have the you know full
immunity or full impact of getting a
second booster
yeah so i'm glad we're still on this
slide so if you look on the bottom on
the x-axis
you see that days after antigen exposure
um you can see after the first infection
your immune system normally
what we say is peak working peak doing
its job
is between seven and ten days that's
when everybody's out there
really you know making lots of copies of
things
honing in and making these antibodies
really specific
so after the second shot um if we look
we can see probably about three
so actually this is a really good
opportunity to do this i'm gonna say
this
on your first infection see how it takes
seven days to get to your peak
after your second infection you're at
your peak by three days
and this is what we call recall because
your immune system has seen it it can
act
faster so it moves that peak of the
response earlier
so based on this after the second shot
you would be honing your immunity by day
three
and then we have what's called a
contraption period and so
by 30 days after that second infection
you have
really really nice immunity that is
hanging around and ready to go but
to be honest with you by seven days
after this first shot
you're going to have immunity that will
be able to respond
to the stars cov2virus
i hope that was helpful
department of natural resources which is
do you think that this is going to be
something like an
annual vaccine analogous to flu shots
yeah carol it's a great question um
we won't know that until we have a
better idea
on the durability of the immunity um if
if the durability of the immunity seems
to only last for about a year
then yeah we'll probably do an annual
shot for everyone
but if we see that the durability lasts
longer than a year
then we won't have to um do shots
annually
we might be able to extend them kind of
like um a tetanus
shot right your tetanus vaccine you
don't get that every year you get that
normally i think every seven to ten
years is what they're saying right now
so some of them depending on how long
the immunity lasts
and how long we follow up these trials
for so we can measure all of these
things
that's what helps us dictate how often
you have to get a vaccine
awesome very much dr thomas
i'm going to open it up for the last
opportunity for any more
questions for dr thomas we've obviously
gone
uh through quite a few the myth busting
was fantastic
but are there any more questions from
the team that you want to put in the
chat function
um while everybody's typing i just want
to let you know that in in the slide
deck
um after the thank you there is
additional information
and i've tried to put as much of the
citations in there as i can
for you to be able to go read more and
find more information if you're
interested
and if you have any questions that i can
help clarify
or point you in the direction to i would
be more than happy to
awesome huge thanks dr thomas
today for making the time fantastic
presentation
extraordinarily clear we have actually
there's one last question coming in
which is
is the vaccine safe for pregnant women
yeah sarah this is a really good
question um and i know a lot of people
have been really concerned
but uh as of right now we are still
doing the clinical trials with pregnant
women as enrollees to be able to give
you data
saying yes it is safe and effective
so we don't have data to support the
claim yet but there is
no evidence or information that would
make us believe that it is
unsafe for pregnant women to take the
vaccine
so as of right now um i'll let you know
that i have a friend who is pregnant
and i am uh answering questions for her
and she asked me if i was pregnant would
i take it
and i said yes i would take it but um
again we don't have data to tell you
this is how safe it is
but all of the scientists and the
clinicians feel that based off of what
the vaccine is made of
and the type of immune response that
you're going to have that there is no
harm
to you or your growing baby um
to have the vaccine we have one
mental health which is uh can breast
feeding women take the vaccine
yeah again great question and right now
there is no reason to think that they
can't and i guess this is a good
opportunity these last two questions to
kind of reiterate
these mrna vaccines are really cool
because
they're not they don't contain any
infectious virus
so there's there's nothing that you
could pass on
like infection-wise to the to your baby
either through your breast milk
or um as you're um
sorry i always say incubating as you're
incubating your baby
um so there there's no uh infectious
material
like some of the other vaccines that are
are made from attenuated viruses
so these ones it's just a little copy
that makes a protein so they have no
evidence that would suggest that it
would be bad or cause any problems
but again we're getting the safety and
efficacy data as the trials continue
awesome huge thanks dr thomas we're
covering the knocking down myths but in
doing so
really explaining the the fundamentals
here
uh i know immunology is a challenging
field to communicate
clearly and you did a fantastic job and
just want to extend our personal thanks
know that you spent a lot of time and
energy
to put this together for the cabinet and
leadership team for the state of
missouri
and also letting us record this to share
with others within the state
uh government team so huge thanks and
appreciation
and we'll give you from from the fusion
cell
headquarters you know a round of
applause
thank you now i just want to i just want
to say
that this is a fantastic opportunity to
to
share with you all and i'm really um
honored that i was able to do this so
it's really
it's great practice for me too i think
one of the first things i told drew is
that
sometimes as scientists we don't do a
very good job communicating so
thank you for taking the time and asking
questions and being engaged it's really
great
you
