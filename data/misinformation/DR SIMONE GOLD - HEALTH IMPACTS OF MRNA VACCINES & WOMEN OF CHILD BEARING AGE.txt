Glad to have you on.

Thank you so much. Thank you.

Okay. So thank you so much for inviting me. I come to you tonight with a lot of information about the experimental vaccines worth called the experimental vaccines regarding COVID-19. I think all of this information will be brand new to you. I know that this was all brand new to me over the last few months.

Even as a board certified emergency physician, I do not know a lot of what I'm about to share with you. And I come before you on behalf of America's Frontline Doctors, which is a volunteer physician organization that we started specifically to combat the serious and lifethreatening disinformation campaign that has really taken over America and really the entire globe. It's very, very scary stuff. I've been a doctor for a long time before me. My father is a doctor.

I've never seen anything like this where we have groups of physicians or scientists and government bureaucrat agencies essentially lying to the American people and people across the world. I have many, many examples. One brief example I'll give you is that the National Institute of Health right now has as its policy recommendation for patients with COVID-19, stating that unless you're in the hospital requiring oxygen, there's no actual treatment available for you. That is a complete falsehood, completely false. In most of the world non first world countries, there's plenty of treatment, easily available hydroxy Orcan Ivermectin here in America.

If you can find a doctor to prescribe it, you get those medicines or Bu Destinie. There's many options. And this disinformation is why we came public when we started to speak out around July a little bit sooner, but we got a lot of attention. Starting in July, we were promptly, as the pastor said, deep platformed, and it doesn't bother me so much. I know the information.

It bothers me tremendously on behalf of all of humanity. Right? This is a crime against humanity. There's a physician in the Netherlands who's bringing a lawsuit in The Hague calling it that calling us the crime against humanity. There is a lot of information you haven't heard.

There was a Senate testimony about a month ago. A bunch of doctors went and testified. I believe it was Senator Johnson is the chairman. You can find it on our website, America's Frontline Doctors. Com.

But the doctors testified that the vast majority of death in America would have been would have not ever happen, not ever happen. I start with that because when you understand, you must understand the magnitude of a lie to understand what they're trying to tell you about these experimental vaccines. So we need to just kind of go through that for a little bit in.

Yeah. Okay. So I know some of you heard a little this first sentence, which I said this morning, but the disinformation was apparent since the beginning, right. We call this illness COVID-19, but it's real name should be after the location from where it arose, which is Wuhan, China. And if you remember, it was called the Wuhan virus for a while.

I don't know, a month or so before we discovered the Chinese Communist Party didn't like that name. They said about putting a lot of pressure on media and other, you know, politicians. Let's say to change it. And they started calling it the coronavirus. They called it the coronavirus because it is actually a coronavirus.

But that became very confusing to doctors and scientists because there are seven coronaviruses. This is just number seven. So we used to use the word coronavirus sometimes on our charts when we meant a common cold. Person will come into the Er in my case. And they just had a common cold.

And I would sometimes write coronavirus on the chart as a diagnosis. So it was pretty confusing for doctors and scientists to call it the coronavirus. Right? So they had to change the name again and it became known by acronym Coronavirus Disease 2019. Covid-19 I have to start there because it was never a racist or weird thing to call it their Wuhan virus, right.

There's so many diseases that are named after the location from which they arise. There's Zika and Ebola, there's Middle East respiratory syndrome, Rocky mounted spotted fever, Lyme disease. I mean, the list is endless. German, measles, Spanish blue. This list is endless.

So you need to understand that deception was there from the very beginning.

So that was the first big lie, the next big live. The next big, popular, well known lie was the maligning of this common, ordinary, cheap, safe medication called hydroxychloroquine. Those of you who've traveled abroad who've taken mission trips, for example, or anybody in the military are quite familiar with this drug. Doctors would just give it out like handy. I know that.

I was going to take a holiday to Africa about 20 years ago, and I was a medical student at the time and they just handed me the pills. Here you go. I never asked any questions. It was a big, fat, nothing burger taking hydroxychloroquine. All of a sudden, we started hearing his doctors, even his doctors, that hydroxychloroquine unsafe.

You can't understand what's going on with the lives until you understand what an enormous Li this is. Hydroxychloroquine is over the counter and much of the world. Okay. It's taken in many African Nations. They call it Sunday Sunday medicine, because you take it every Sunday, right?

That's like its name Sunday Sunday. People keep it in the pocket the way Americans might keep a Tylenol in their purse. It's absolutely ordinary stuff. It was over the counter. Really?

In any country which had malaria or any country that had citizens that would visit malaria countries on holiday, it was over the counter, for example, it was over the counter in France. The only reason it wasn't over the counter in America is it just wasn't a consumer demand, right? In America we use hydroxychloroquine for two main reasons that's lupus and rheumatoid arthritis and also for malaria, for people going on holiday. But generally it's lupus and hemato arthritis. And for those illnesses, patients regularly see physicians so they can get a prescription for it.

That's why it was never over the counter here. Not because it was unsafe. It's for an FDA approved for 65 years. We give it to babies, we give it to children, we give it to pregnant women, we give it to nursing mothers, we give it to the elderly, and we give it to the immune compromised. Those last two categories take this medication for decades.

There was never a pretense that it's not safe. That's the drug that you've been hearing about for nine months now, ten months telling you it's unfaith. It's an incredible lie of incredible proportions. Once you understand that, you will be suspicious of everything that follows. So that's where I found myself there.

I was in the emergency Department treating patients as they came in with COVID-19. And once we had the rapid test so I can confirm the diagnosis, my first patient, who I needed to give hydroxy Orkin and zinc to. I did it. And even knowing the kind of a controversy, I really didn't think twice about it. I don't know.

It was fine. I gave it to her. I actually called her the next day. She was so much better. She herself got better within about 12 hours and about 48 hours, she was essentially completely.

Well, this completely matched what I had read in the scientific literature. I knew many doctors were done this. I read many Journal as it is completely consistent. What was really shocking and completely inconsistent was my medical director who calls me the next day and threatens to fire me for doing this treatment. I can't even tell you to.

Even as I describe this moment to you, it's shocking to me. I remember the case, the situation, the conversation, and he's saying he's going to fire me. And I said, Why would you fire me over this? Well, I don't think it works. I said, Well, then don't prescribe it.

You haven't read the science the way I have. I know it works. You'll change your mind in a couple of months when you get a little wiser. But why would you get involved with meat treating a patient, you do your thing. I do my thing that Tom medicine is practice.

We are licensed as individuals. It's actually against the law to have what's called a corporate practice of medicine where Corporation practices for you. It has to be the individual doctors physician. That's why patients go to multiple doctors, right? No.

And really, almost the worst part of the conversation was not even that he was ignorant that the drug worked. But his reasons for saying that he was going to fire me if I did this and the reason which he put in writing because he wasn't so smart. He said it was because the biggest payer at that hospital, which is a large insurance company, that everyone here has heard of that's back on the West Coast, mainly didn't want us to prescribe it. They were blocking it. So that payer insurance company was pressuring the hospital that their doctors shouldn't do it.

It had nothing to do with, even if he thought it was good about for the patient. It all had to do with money and payment, which was honestly, I still can't believe I'm relating the story. It was really unbelievable. So he said, I could never do that again if they're all good luck with that. So it kept happening.

It happened about four or five times. And I kind of knew that my days at that particular hospital really were going to be numbered, right? How long is this going to last? So I started looking online for other physicians like myself. I knew it couldn't be the only one.

And I found the most amazing group of doctors really just brilliant, intelligent, compassionate kind. And we got together and we called ourselves the America's Frontline doctors. And what I felt needed to happen was we needed to break this disinformation cycle to which the Americans were all being subjected to and people across the world as well. So I set up to do something called the White Coat Summit, which was an entire day of education. We brought doctors, and we brought social media influencers of young people know them as YouTubers.

So we brought a whole bunch of YouTubers and a whole bunch of doctors. We brought to Washington. We did 7 hours of education, and we laid out all the facts, all the facts, you know, very dispassionate. Here's the facts on hydroxy Coric. When here's the facts on lockdowns.

Here's the facts on mass. Here's the facts on the schools and kids transmission. Here's the facts for the elderly. Here's the facts on other treatments other than hydroxychloroquine. And we did that in the middle of that day.

We took a break and we walked over to the Supreme Court. And that was the video that got 20 million views. It gets 20 million views. Not because I can sing like Beyonce, but because human beings recognize truth. We have something inside of us, right?

I really emphasize that point because you can't get to 20 million views. Nobody plans such a thing. It's only people say, oh, my gosh, you got listen to this. You got to listen to this. You recognize the truth, you recognize the truth.

So I guess after a while, big tech caught up with the fact that this was like breaking the Internet. And so within an hour, all of the all of the platforms censored simultaneously. So it's essentially a monopoly. So we're talking YouTube, Instagram, LinkedIn, Facebook, Twitter, all of us all went down immediately. The President had retweeted us his present son and retweeted us.

And from that moment on everything really kind of changed. I did get fired from both of my hospitals. It is a scary experience to get fired, especially when you've worked. As long as I have to be a board certified emergency position. That's what I do.

I'm the mom. I have kids. It's not a comfortable feeling to be fired. You don't know what the future holds on the other side of this, which is now several months. It's really been a blessing, right?

Because we doctors have been able to come forward and speak freely and help other doctors have been put in this situation. There are several of my peers, several doctors in the America's Frontline doctors group that have faced tremendous personal pushback. There's a fellow right now in Oregon who refused to force the mask, right? So he won't wear and he won't force his staff toward if you want to wear, you could wear it. But the state, he was public about it.

So the state of Oregon actually yanked his medical license. And when he first told me this, I thought I thought this can't be possible because you may not know, but I'm you know, I'm also an attorney, and it was impossible to conceive of an event like that happening without due process. I mean, the whole thing about law, if anybody's been involved in law at all, it's all about process. You've got to go through the process. You can't just pull someone's license.

You have to have hearings and phone calls and paper files and all that. And I really just thought he missed his deadlines, but it was true. They actually just summarily pulled his license. It's unbelievable. So we're going to help him win.

We've already filed lawsuits and all that. But what I'm saying is it comes with some degree personal cost. But if you ask him, he'll tell you that he's so much happier that he did this right. He said this.

He felt that he couldn't bow the tyranny. So I just want to courage anybody in their own personal life when you face that little tyranny on a daily basis. This is Florida, but I hail from California, and you can't go anywhere without a mask. Except I do. I go without a mask as much as I possibly can.

And you have to take moments like that and push up against tyranny. And it's not just for you, right? It strengthens your sense of freedom for yourself. And it makes you stronger. It's all such a role model.

That strength for other people. So if you feel, yeah.

And I say that because a lot of us who are very good hearted people, we don't really have the strength sometimes to fight on our own behalf will then tell yourself you're doing it for the other person who needs to see you without the math so they can feel empowered.

So I want to run through some information. And the goal is to teach you about what's coming in terms of these experimental vaccines. And I'm going to start with a few minutes, maybe five minutes on just kind of reviewing the lies about what's going on with Kobe General, and then we'll turn to that and sit tight because it's a lot of interesting stuff.

First, when I first started this, I really just wanted to help patients. I couldn't believe that patients were being denied this this drug. And I could sense that we were not going to be able to fix this from a government kind of policy position because the doctors themselves had drunk the Kool aid and not been willing to prescribe this drug. And I tried very hard to get the policy changed so that Hydroxycut could become over the counter in our country, just like it is in much of the world.

That would have been the best solution for everybody, because it would have taking the decision making out of the hands of the government.

You could have decided for yourself if you needed this medicine and the advantage of having that pill in your possession meant that the majority of people would have stopped living in fear. So that was the best solution. But we were unsuccessful in getting that. So I did the next best thing, America's frontline doctors, not. I just a group of us and we made getting hydroxychloroquine available for the entire nation by going to our website.

Then you can consult with a telemedicine doctor and whether you have Coby, you don't have Coby, you just worried about getting COVID, you can get yourself a prescription and they mail it to you. That was the first thing we did. And I felt so strongly about it just because that's that's a practical way that you can try to lift the fear. But I learned pretty early that the big fight was the fear. The big fight wasn't the virus.

It was the fear that was my response to the fear was to give people a practical solution. Now the fear has led to people. They really just want to go back to normal life. So they're either kind of consumed with fear or consumers just being weary of the whole situation. That is what I think is leading to people making what is really a fundamentally irrational decision to rush headlong towards an experimental medication.

They just kind of want to get their lives back where we've been told. Oh, get the vaccine, you'll get your life back. I have to give you the bad news. That is definitely not what's going to happen. Whether you take a shot at you, don't take a shot, it's not going to happen.

Dr. Fauci has gone public already with saying and as many others, Surgeon General, many others have said it was in Business Journal just today. Business Insider. I think just today, this so called vaccine experimental biological agent actually doesn't stop transmission. You're going to have to keep going with the masks and the social distancing, it actually changes nothing.

Once you hear that, you really have to question why you would put yourself in that situation. So that's a starting point. Let's talk about some enduring covid 19 myth. First of all, I'm glad that I can't be deplatformed here.

Let's just talk basics about the numbers. Okay. What is the chance that you'll survive covet if you should get in? Okay. So this is a very educated audience.

So if you're under age 20, according to the CDC, which is not known for its honesty, the survival rate is 99 point 99%. Why are we talking about anything in that group? There's nothing to talk about for ages 20 to 49, the survival rate is 99.98%. 50 to 69. Their survival rate is 99.

5%. I always kind of pause there because a lot of people in their 50s, they start to get worried and they think, oh, my gosh, I'm in such a high risk group. It's not really that true, right? This is with no treatment. Your survival is not.

And if you're over 70, the survival rate approaches. It really with no treatment. Now the dirty little secret. It's even better than that, right. If you take early treatment, this is essentially a either a symptomatic or very mildly symptomatic or completely recoverable.

The people who die from COVID-19 are people who are kind of destined to die in this period anyway, which is which is tragic. But as people of faith, you understand that a life and death go hand in hand. So my father had an expression. It was that pneumonia is an old man's best friend, and that means that pneumonia is often the way we exit this world. So if you are at kind of the end point of your life, COVID-19 can take you out.

That's a fact. So can a common cold. I've seen it. I once had a patient in the IC who died essentially from a nose bleed. It kind of escalated brief, so anything can take you out if you frail.

And COVID-19 is in that category, overwhelmingly, the death of COVID-19 are in nursing home patients. And I have to mention that because if there is truly the intent to quote, unquote save lives, people would not have thrown away or frail elderly. The politicians that are telling you to do this thing over here had no problem throwing away the lives of the very spill elderly over here.

I don't know how many. If anybody in this room was watching the corner virus task force meetings as closely as I was, but I was watching them every day that I wasn't at work. And I remember watching Governor Cuomo, and he was saying that he had to protect the elderly, had to protect the elderly, had to protect elderly. I thought that was great. I thought that was great.

And then one day literally out of the blue because I was watching it every day. He made this rule. The patients from nursing homes who went to the hospital with COVID-19 but were survived and were ready to be discharged from the hospital, could be sent back to their nursing home. And the nursing home was not allowed to ask if they were Cobot positive a COBIT negative. In other words, they could completely intermingle with the other patients.

Now to remind you that big Navy ship that was stationed off of New York City and the Jacob Javits Center were virtually empty. Now, what's amazing about that? As an emergency physician, I know all the time we have bed problems, don't have a bed here. You don't have a beat there. But it was a complete lie to say that there was no room for these patients who they would lose their beds in the nursing them.

There were thousands and thousands of empty beds between Jacob Javits and the Navy ships. And I remember watching this and thinking, that is unbelievable. He's like an executioner. It was incredible. So I wouldn't believe anything that somebody like that has said tragic.

It was really tragic. He'll have to answer. He'll have to answer. Yeah. Yeah.

So I start with all of that because you have to understand that the magnitude of the lies is just so enormous. Are you all familiar with the land? It the controversy with that. This is a good one. Okay, alright.

I digress here, but it's too good to leave out. So the land, it is probably the world's most famous medical Journal. Alright, New England Journal Medicine is probably second most famous. Jama, third most famous. So sometime around April, I think the land have published this study that concluded that hydroxychloroquine wasn't safe this through the world into a tizzy.

Based on this article, the who stopped hydroxy Corrine trials across the world. The European Union stopped allowing hydroxychloroquine. That was the reason that the headlines trashed. The President is calling it snake oil. They had the cover of the land.

It's saying it was bad. Now the landed study that said it was bad had like 90,000 people in it. And it took place on five continents. And it just didn't really make sense. There was a group of independent doctors who looked at this data and said there's no way you have 900 patients enrolled in a trial across five continents and nobody ever heard of this thing.

It was incredible. So these independent doctors got together and they kind of forced it and they forced the issue. And the land set ended up retracting the study, which is once in a generation or once in a lifetime sort of event. You can't be published in the Lancet by accident. There's many, many layers to it.

It just simply can't happen. It was complete fraud that was published, but the damage was done because all across the world hydroxy Corrine trials have been halted and it was very badly maligned. That's where we're coming from. Why do we know that that was fraud. They've admitted they were fraud.

If you go right now to the Internet, you can type in the Lancet study on hydroxychloroquine and it'll pop up retracted. Okay, now why do I say so? That was like level number one of the corruption was the scientist them cells are being corrupted. Level number two, that was the media. The media lying.

How do we know they're lying and not just misinformed or I'll inform themselves? Well, because when it was retracted, they buried the story of its being retracted. You have to really struggle to find that information that's very dishonest. And then there's corruption relate the state level and the federal level. But we'll save that for another day.

So let's talk about these what I call. I think it's most properly called experimental biological agents. You might hear me use that phrase. Definitely. You should not be calling this a COVID-19 vaccine.

The reason is whatever you call it, it's experimental. It's not been approved as a vaccine. It's currently in its investigational stage. It's been approved by I don't want to misspeak which the FBI some is the one who would approve it, but it's in an investigational stage only AstraZeneca Pfizer Moderna and Johnson Johnson, that's very important. Legally, if you were to be injured by something and it's an experimental stage is adjudicator under particular standard.

So what are the potential problems with this experimental biological agent? The first most obvious is that this is brand new technology. The first two that are coming to market use something called mRNA technology, which has never, ever been used before for vaccines. This is when you hear a lot of the more kind of concerning and flamboyant issues. It's because people are very worried that this is brand new mRNA technology.

I don't really go down that path. But what I can say is I don't really want to be the first person to take brand new things when it comes to medicine. Right? You don't have to be a genius to say that. So that's problem number one, problem number two, is there's been a tremendous failure.

A previous Corona virus vaccines. This is not well known, but there are multiple coronavirus viruses out there. For example, in 2002, there was an epidemic, a much smaller one, but an epidemic of SARS CoV one. What we're in right now is SARS CoV two. Sars CoV one and SARS CoV two.

By the way, you may have heard of called the novel Corona virus are what we're in right now. I never understood that because this coronavirus is identical to SARS CoV one. That's, in fact, that's why it has the name SARS code to you. There's seven the same. So prior coronavirus vaccine attempts have been made, they have failed.

They can't do it safely in human beings. And I'm going to talk more about that later. But just note that we've not been able to successfully overcome the human bodily hurdles that making a vaccine against the coronavirus has put up number three. There is no independently published animal studies. One of the companies say they do have animal studies, but they haven't published any data on it.

There's been a complete rush to put this to market, and you simply cannot do this safely without published data on animal studies, because animals often will die at the end. And unless we know that, we don't know if it's safe to give to humans. Okay. Problem number four is known complications. One of the most commonly known complications of vaccines is something called big science words coming up, guys, antibody dependent enhancement.

It's also sometimes called immune enhancement, and it's sometimes called pathogenic priming. What this is is instead of really causing immunity, it causes a person to overreact in a negative way if they should ultimately be exposed to the virus. The thing called antibody dependent enhancement or pathogenic priming, although you haven't heard of is it well known to scientists, I like to say it has its own Wikipedia page. This is not fringe. This exists and this is real.

The biggest problem with antibody dependent enhancement. We see this with prior Corona virus vaccine. So when they were doing the studies with Stars Cove one vaccine back in 2005, they came up with a vaccine and they gave it to the ferrets and it was too dosed like the ones today. And the ferrets did fine after the first dose, they did fine after the second dose. Later, they exposed them to the coronavirus SARS CoV, one in the wild and the ferrets died.

That's why stars could one vaccine never came to market. Antibody dependent enhancement. You can find all the information I'm discussing on America's Frontline doctors, dot com vaccine information. Also, I'll get to at the end at the Stop Medical discrimination. Org site.

It has it there as well. Everything is well footnoted in reference. So known complications include antibody dependent enhancement and also some of the things you've seen in the news, like neurologic problems like transverse myelitis Bell's palsy, Gian Beret, et cetera. Those are known complications with vaccines that already exists. There's also a lot of issues with unknown vaccinations.

I think what's going wrong on the other side is a complete lack of respect for what you don't know. We don't know what we don't know until you discover it. I mean, these are the things parents teach their children. They don't know enough, right? So what are the potential unknowns?

Well, something that I learned this year, actually in the last few months, which I was shocked because I never saw this anywhere in the newspaper. And I'd like to show of hands from anybody here who's heard of this before. I mentioning it. Has anybody here heard of potential fertility problems with this vaccine? That's amazing, you guys, I did not know this myself until about maybe two months ago, so I had to look into it.

And by the way the American frontline doctors put together ten doctors working for more than a month to put together all this research. So there's a question if this vaccine a biological agent, I should say, affects this thing called the syncitia trophy blast, which is a layer on the placenta. Now, it does seem to do that when you're sick with COVID-19. The problem is that these mRNA vaccines kind of mimic having COVID-19 indefinitely. So while covid 19 could be bad for the placenta and the baby, if you get it, like in the middle of a pregnancy, eventually COVID-19 goes away and you go about your life and then you're good.

There's a question if this type of experimental agent does that same negative effect to the syncitia trophal blast layer of the placenta and it would do it indefinitely. This is not a conspiracy. As a scientist, I'm telling you, we don't know. We don't know scientists better than me, right? There's two guys in Europe that were for executives that complained about this and filed a petition with the European equivalent of the FDA saying, you've got to not approve this as an emergency experimental vaccine because we haven't answered the question on the antibody dependent enhancement, and we haven't answered the question on the placenta.

It hasn't been answered that it's dangerous to release this. And you have to put that together with what is the risk of even having this problem? Certainly in younger women, right? Women under 50. The survival we said per the CDC is 99.

98%. For that reason, America's frontline doctor feels very strongly that you cannot even offer this to women of childbearing age. And we'll get to our official recommendations at the end. But we put that information under the category of what we don't know. We simply don't know.

We don't know what the effect is permanently on the placenta. Another fact that is very concerning is that Pharmaceuticals who manufacture these experimental biological agents are immune from all liability. So you probably this group probably knows that. But I'm not saying that they have a negative motive. I think mostly they have a profit motive.

I'm not saying they're trying to hurt people or kill people. What I am saying is that if you know that you could be sued and pay out millions of dollars every single time something goes wrong, you're really, really careful. Okay? You're a little less careful if you know you're going to be shielded from that liability and they're completely shielded. So when people ask me, I'm going to take the vaccine.

What? I recommend my children take the vaccine. I said it's really irrational to take a brand new, untested, untried technology from a company that's completely shielded from immunity. When, on the other hand, I've got a drug that's 65 years old. He's been given billions of times completely safe for all age groups right now.

Those are the safety concerns with this experimental biological agent. What are the concerns regarding the effectiveness. Now with super shocking is that there's no proof that this biological agent actually stops the transmission amongst people. I mean, it's like a joke, right? This is like a joke.

It's like the punch line through a joke. Let's take a vaccine. By the way, it doesn't actually stop transmission. I mean, I don't even know what to say to that. I discovered that quite recently and I couldn't believe it.

And that's, by the way, that's not in dispute. Now that I'm telling you that the surgeon general gave an interview 20 days ago last two weeks and six days ago on Monday to Good Morning America stating that and it's been well documented. Now he's not known of its stuff transmission. I think what's going to happen, it's kind of putting people into sort of an asymptomatic carry a kind of state. In other words, people are turning positive.

You might have started to see some new stories. Now people taking the vaccine, and now they're testing positive for COVID-19. It's kind of funny. Like, are they going to test positive forever? What does that mean?

They've been telling us this bill of goods that there's this asymptomatic transmission, and that seems to be moot. But if you're gonna have tens or hundreds of millions running around just kind of positive, low level. What does that mean? Why are we doing that? Another problem with doing that is I think they're going to gain the numbers, right?

All these people, let's say you give the vaccine to 100 million people. And now all 100 million people have, quote, unquote testing positive for covid 19. They're going to tell us that the cases have risen and we can never relax. Yeah, it's unbelievable. It's unbelievable.

There's been no proof that this is actually reducing mortality, certainly from the levels of non LEAs ality that we're seeing. It would be hard to demonstrate that there's any real advantage. Right. Odds of dying from this illness already incredibly low. The third question about effectiveness, we simply don't know, even if it was effective and not dangerous, we don't know how long it lasts.

In other words, are you going to the ask to take the vaccine once in a lifetime? Are you going to be asked to take this vaccine yearly, like influenza? We don't know. Those questions are not answered. So I and also, I keep referencing the fact that we need to call this by its proper name.

Never talk about this without the word experimental. That's critical.

One of the problems that we doctors are concerned about about this antibody dependent enhancement potential, which, again, I'm not saying exist or doesn't exist. I'm saying it hasn't been answered is if you're going to run around and give this vaccine to a whole bunch of healthy people, you have to be really, really sure taking a vaccine is very different than taking a drug for a disease. If you have a disease, you're certainly willing to take on more risk, right to get rid of the disease. But vaccines are typically given to healthy people.

Now, what's going to happen if you give this vaccine to 100 million people that are otherwise healthy and they do have this antibody dependent enhancement reaction because we haven't ruled it out.

They do get exposed to the virus in the wild and of them drop. What if, for example, you've given that vaccine to all of your health care workers and he's given that vaccine to all of your military and all of your police officers? I find this shocking as a public policy matter that we would even consider giving anything to our healthy first responders and frontline people who defend our country. It's it's so shocking in its risk. You see me, I'm struggling for the words.

It's so shocking to accept that kind of risk. And again, I want to be not misquoted. I'm not saying this is definitely going to happen, but I'm saying based on prior stars, prior stars, Corona virus vaccines, there is a definite concern for antibody dependent enhancement. This particular virus has very low lethality. Should you give it to healthy people?

Not knowing the answer to that question is far too risky, in my opinion, from a national security perspective, you know, the more you dig into the step, the more upsetting it gets. So I gave this talk only once before, about two weeks ago, and I approached the black community. I'd like to just talk straight and openly. I was well aware as a physician that African Americans and other black and Brown minority persons had a natural antipathy towards vaccines, and I wanted to give them the science behind it.

So I ended up digging deeply into that issue.

So let me share some things that I knew some of these things, but I did not know most of these things prior to this year. Many of you in the room, I'm sure I've heard of the Tuskegee experiment. We all know that. Okay. But there's a lot more than that.

I was curious as to why the antipathy was so strong. So let me give you some examples of where vaccines have gone wrong for black and Brown people. So with the Rubella vaccine, race and ethnicity were shown to affect the antibody responses, like at a higher level that compared to Europeans with the Measles virus. I think many people in this room, they also had that same experience with pertussis was also the same with the in Wheat. They also had the same problem with the Measles.

Hamas influenza also had the same difference in their response, and the hepatitis vaccine also had a similar different response amongst races. Specifically, white boys were 64% less like the tape autism diagnosis relative to non white boys when they gave a hepatitis vaccine to babies. Now, literally, as a physician, I did not know this right here. We have examples well documented in the scientific literature of six different vaccines that were affecting people differently based on their races. Now, why is this important?

Because when you read the language that the government is putting out about how to prioritize the vaccine, the experimental biological agent, they are making an overt and covert attempt to push this heavily on black and Brown. I'm going to give you some specific language because it is just shocking. Just bear with me one moment.

All right.

Okay. The CDC is telling the public at large that getting an experimental vaccine is a good thing, but it is Additionally telling black people to getting the vaccine is racial justice, and it's an advantage. Now, this is from the center for Health Security. Org interim Framework for COVID-19 Vaccine Allocation and Distribution in the US. This is the government's words is that getting the vaccine early is social justice, racial justice.

And I just have to say, as a scientist, I found a bizarre that we're talking about racial justice. Either something worked scientifically or it doesn't. There might be racial differences in terms of dosages. We've seen that now in the prior six. But how is it racial justice to sign up first for an experimental biological agent that we don't know on the I believe it's the same document.

Yes. In the exact same document, they say the ultimate safety of an approved vaccine is not knowable until it has been administered to millions of people. It is possible that certain adverse effects may occur more frequently in certain population subgroups, which may not be apparent until millions are vaccinated. Pharmacal, vigilance, track and trace systems will provide critical information that will inform adjustments to the allocation that literally is in the same document as let's give it to black folks. First, you can't even make this stuff up.

So they also said that so it was our words. The most disenfranchised members of society are to be vaccinated. First, there were, quote, racial and ethnic minorities, tribal incarcerated, rural disabilities underinsured people who work in school settings and nurses. And we must prioritize Blacks and Latinos to reflect fairness and justice. Now, I just find it so incredibly offensive.

We know exactly who falls from COVID-19. It's nursing home patients. It's people with two, six comorbidities per person is average. People over 75 are living in nursing homes. This is who should get the vaccine first, if you believe the vaccine is safe and effective, that's it.

And I feel very offended on this because, you know, the people who they're gonna target first, honestly, are my friends, which are all the black nurses that I work with in the ears because I've spent my whole career in the inner city. And so they're all being told, you got to line up. You got to take this. And I'm thinking to myself, you're about 45 year old, 50 year old. You know, you're in good health.

You're working every day. Why should you be prioritized? There's no actual increased risk to the health care worker. It's a risk. We know who it is.

It's the 80 year old woman who's living in a nursing home or a man who's living in a nursing home. We've got bad heart, bad lungs, diabetes, especially obesity is a big deal. Those people are at high risk. Okay? It's not your 45 year old nurse.

It's not your 35 year old cop. Okay. And any other discussion I find very disingenuous. Now, in case you didn't believe that, you went further into these documents and you find the language that they talk about targeting the black community by understanding their, quote, unquote vaccine. Hesitancy based on these prior issues with prior vaccines in Tuscany.

But they have, like, actual policies. They say this is from HHS. Gov strategy for distributing COVID-19 vaccine. They say we have to focus on on targeting key populations and communities to ensure maximum vaccine acceptance. And they talk about and they quote the Bill and Melinda Gates Foundation about how to manipulate the media and silence opposition to it.

And then they put very famous, handsome, you know, celebrity thing. They're going to take the vaccine, Obama being one of them. And it's very clear. It's just very, very clear what's going on. So I say to as a scientist, do you want to be first, if you want to be first, to volunteer yourself for track and trace system, enrolling yourself into a medical trial?

I don't think I explain that clearly. Let me back up for 1 second. If you take the vaccine, you're being enrolled in a pharmacovigilance tracking system. It means you've enrolled yourself in a medical trial, which is fine if you are to be a good hearted individual, very altruistic. And you want to enroll yourself into a medical trial.

Fantastic. I can tell you, as a physician, very, very few people do that. Okay. But if you want to do that, that's fine. But most people are not aware that that's what they're doing.

This pharmacovigilance tracking system tracks me for two years. It's set up by the Department of Defense. It was handed off to Oracle and Google to put the data together. How is it that people want to sign up for this system on the experimental and how is giving it to black people? Fair racial justice?

I don't know. Maybe someone smarter than me can figure that out. I'm I also I also put in once I started reading these documents about what I thought was just pure racism in these documents, it kind of made it clear to me why we were hearing so much about racial issues with COVID-19 and my experience as an Er doctor, I didn't see any real racial issues at all. We saw white people, Latino people, black people people got it. Basically, if you were old and frail and you got it, you're sick.

But I never really saw racial difference. And that's not true. There are other things, obviously, that have racial differences. So I remember thinking this is weird. Aoc would get forward and say, oh, well, is really bad against black people.

This is terrible and discrimination and all that. Here's what I want to say to that. It's true that there are many areas where black people were disproportionately affect it by covid 19. So the example I like to use was in New Orleans, Louisiana, where Blacks made up 31% of the population, but they made up 70% of the people admitted to the hospital with covid 19. So on the left, they were saying this was because of racism.

But when you look at the data, there does not yet appear and I think never will appear to be an independent race to be an independent risk factor. Right. We know what makes people really sick. It's diabetes and obesity primarily and then other serious medical problems. Now also living in a very crowded area, working in a very crowded area.

The reason I don't think this is ever going to be shown to be a race problem. Race problem is things that you can just know by common sense. One is it's been all over the world, all races. Okay, we can just start with that. Second is in areas of the world where people are have those high individual risk factors like diabetes or obesity, other illnesses and the group risk factors such as living and working in type quarters.

It's not black people that get it at a worse rate. It's those people in those situations. So in Louisiana it was black people. But in the UK it was Middle Eastern and East Asian. Now there's the people living in those crowded, dense areas that had diabetes.

Those are the people. It didn't matter what the race was. That just mattered if you have those individual group risk factors. And of course, the irony of saying that this is really a racial problem is looking at the continent of Africa. For those of you who don't know, it, the one consonant that's been spared is Africa except South Africa.

But the rest of Africa is, you know, the death rates, you know, in Africa are extraordinarily low. For those of you who don't know this or haven't followed me yet on Twitter at America's frontline doctors, there's a lot of videos. One of my favorites is a talk we gave on SubSaharan Africa because people just don't know this. So in America, the death rates are in like 800 range per million. In India, the death rates are around.

I might be slightly off on the numbers around 70 per million. So it's 10% because they have a very Liberal hydroxychloroquine policy. In Africa, SubSaharan Africa, the poorest places in the world, no social distancing, no mass, no ICUs. They have a death rate of 1% of the Western Nations 1% 1%. Right now.

I believe it's due to widely available hydroxy course, when I don't see if you can explain it for any other reason. But even if there's another reason, you certainly can't say that this affects black people worth I see.

So I would just not be signing up for this immediately if I was a mom or again, I think of my friends, the nurses, if I was a nurse and I was a mom, I'd like, you know what? I'll just wait. Let me just wait a little bit. Let's just see. So we doctors.

When we got together about this, we decided to really come out and say what we thought our opinion was, and a lot of people have told us not to do that, but we felt it was really important. You have you have the CDC, the NIH and the FDA all not helping you. So we came up with our recommendations about the vaccine, and they're pretty strong. Ultimately, America's frontline doctor stands as follows, if you're under age 20, the experimental vaccine is prohibited, in our opinion, absolutely prohibited. We simply don't know enough about effects on fertility.

And we do know this virus essentially does not affect young people. Essentially irrelevant from age 20 to 50. If you're healthy, we strongly discouraged. There was a little debate in our group if we would come down and strongly discourage in this group or prohibited. I fell in the prohibited category, but the majority of us said to strongly discourage for age 20 to 50.

We strongly discourage the vaccine age 20 to 15 because there was an exceedingly low risk of death from covet. There's unknown risk from the experimental vaccine is causing autoimmune disease. There's unknown risk of this pathogenic priming antibody dependent enhancement, and there is an unknown risk of lifelong infertility. So age 20 to 50. We think it is strongly discouraged from age 50 to 70.

If you're healthy. We also say it's strongly discouraged for the same reasons as a very low risk from covid 19. There's an unknown risk of autoimmune disease, unknown risk of pathogenic priming, unknown effect on the placenta from age 50 to 70. And you do have serious comorbid conditions. We say it is discouraged.

We say that because we feel the experimental vaccine is higher risk than early or Propyl active treatment with long established medications such as hydroxychloroquine or Ivermectin from age 70 and above. If you're healthy, we tell people it's just your own personal risk assessment. We believe in experimental vaccine is less ideal, then old establish medicines. But we say leave it up to the person over age 70 with series comorbid conditions such as nursing homes. We also call it to personal risk assessment.

We again stand with hydrochloric and Ivermectin being safer in this population, but we don't think it's irrational to take it. If you're over 70 living in an arson, we don't think that that's irrational. We're not trying to say all vaccines are unsafe in all circumstances. We don't believe anybody at any age should be pressured. And we are concerned about persons over 70 who don't have advocates being pressured into this.

We already know, actually in many cases like that. But we also don't want people to be overly worried that we're saying it's definitely unsafe. We're not saying it's definitely unsafe. We're saying we don't know. And at least if you're over 70 with several medical conditions, you do have some you have some risk of dying from this thing.

So it's not fundamentally irrational to take it if you should decide to take it, but certainly under age 50, we fall strongly discouraged. I myself would I tell everybody I would never let a woman of childbearing age take this. I would fight too, for nail under no circumstances until this placenta question is answered. I always like to leave people with a bit of a call to action.

We intend from America's Frontline Doctors to fight the urge that's sweeping the globe to mandate people taking an experimental biological agent. This is a big fight we have in our hands. It's not really the government first that we're concerned about. We're very concerned about private businesses, mandating, this employers, schools, travel, Airlines in particular. You can imagine if all the Airlines got together the CEOs and said, you know what?

We're just going to mandate this and all the six biggest ones got together and said that it's just like the masks, right? You can't avoid their mandate. This is a very big problem. So America's Frontline Doctors is tackling this. We intend to talk to the decision makers in the airline industry.

One of our tools in that battle will be to go and armed with at least 1 million signatures of human beings who are going to say no, we are not going to do business with anybody and we're not going to comply with anyone who's going to mandate this. Everyone, whether you want to take the vaccine, you want your mom to take the vaccine, that's your choice. But I think everyone hearing this can agree. We don't need the CEOs, the big companies forcing experimental biological agents on anyone.

What I need you to see now, though, before we get to that point is that we are going to be at their mercy. If we don't get ahead of them, we must get ahead of that bad decision that they seem headed towards making. Quantis Airlines has already said that they're going to do this. We need to go to these Airlines. We have a plan, but part of that plan is at least a million signatures.

You must go to stop medical discrimination. Org and sign the petition. You also must share that petition with everyone. Do not be shy. Okay, this is your life.

Are you going to be able to travel and it's not just your personal. Can I travel for fun? But can you advocate? Can you go to Washington, DC and advocate if you can't get on a plane? Alright, this is really important.

Stop Medical discrimination. Org. It is your obligation. I've done my part. My doctors have done their part.

You must do your part. People come up to me all the time. What can I do? This is such a small thing. Not only do you sign it, you, each of you should take it on yourself to say, I'm gonna make sure I get 1000 signatures because I'm gonna send you to this Facebook group in that Facebook group.

In this Twitter, everyone, everyone everywhere must stop Medical discrimination. Org Critical critical.

If you are part of a Union, you should be bringing this to the Union as a humanitarian or human rights issue. Your Union should advocate you. Now, this may sound strange to people because they think the unions on the other side, and maybe they are. But the Union hasn't even heard the fact. If you're part of a Union, you should stand up and say, I don't want this forced on me.

If you know a pilot pilot Union, teachers Union, nurses Union. Very important phrase this as a human rights issue. This is not anti vaccination. I'm always reminded. Please tell people where I stand on vaccine issue.

I personally have been vaccinated for everything. I personally make sure my kids have been vaccinated for everything. This is a human rights issue that we cannot mandate. Human beings take experimental agents. And the third call to action is always use the word experiment.

When you talk about this, always the socialist. When the language was right, they change language. Remember, I said to you, this was the Wuhan virus. Then it became the coronavirus. Then it became COVID-19.

This is a battle for words. The words to remember is not that scene. The word shop member is experimental. Every conversation you have in people. It's experimental.

Now, if you need backup for everything I've said, all of this is on our website, America's Frontline, doctors dot. Com says big letter vaccine information. It's also on Stop Medical discrimination. Org. You've got a 35 page paper with 70 references.

Everything is clean and clear, so you don't have to know all this yourself. It's all there for you. So the call to action. Stop medical discrimination. Org sign it.

Share it. Go to your Union.

And third, experimental teach everyone this is experimental. If you do podcast, if you talk to people, if you know any outlet you have.

