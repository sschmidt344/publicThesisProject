Hello, and welcome to another top meeting of the Corona Investigative Committee, which was founded in July 2020 in order to investigate the Corona virus situation and the consequences of the lockdown. Today we're talking to Roger Hodkinson from Canada, and they're very interested in learning what he has to say about the current situation.

Roger, as I said, the first time I heard you talk was about the PCR test, and now the second time I heard you talk about I shouldn't call this vaccinations, but the shocks, the jobs and you're saying something really important is about to happen or is happening already?

Well, I'm very concerned about the vaccination of children, which is currently underway because of certain scientific issues that result in my blowing the whistle, that this could be a very serious complication of vaccinations. But before I mentioned that, Rhina, may I give a brief summary of my credentials?

Of course. I'm sorry about that. I didn't mean to be impolite. Of course we have no, we have to know about your background. Of course.

Sorry, I'm not saying that because I found it a bit competently doing that. I'm a pathologist by training. My basic medical degrees were from Cambridge University in England, and I did my pathology training in Vancouver, British Columbia, following which I've had leadership roles in many areas of pathology, both provincially and nationally. I mean, the assistant professor in the University of Alberta doing a lot of resident teaching. I've been the President of the Pro Eventual Association of Pathologists. I've been the chairman of a Royal College committee in Ottawa that sets the annual examination for pathologists to make sure that they're safe when they're released onto the general public.

So I've done a lot of stuff. I've run a big commercial lab, automated lab that cracks out all the results for your GPS. And I'm currently the interim CEO for a biotechnology company in North Carolina that's heavily involved in DNA sequencing, about which I know a fair amount. So those are my basic credentials. But I'm more proud of another credential because I was the honorary chairman of a major NGO in Canada that was tackling a big tobacco over a couple of decades and achieving significant success in the political realm of how to constrain very predatory marketing of big tobacco, in particular, how they focus on children.

Hello.

And welcome to another top meeting of the Corona Investigative Committee, which was founded in July 2020 in order to investigate the Corona virus situation and the consequences of the lockdown. Today we're talking to Roger Hodkinson from Canada, and they're very interested in learning what he has to say about the current situation.

Roger, as I said, the first time I heard you talk was about the PCR test, and now the second time I heard you talk about I shouldn't call this vaccinations, but the shocks, the jobs and you're saying something really important is about to happen or is happening already?

Well, I'm very concerned about the vaccination of children, which is currently underway because of certain scientific issues that results in my blowing the whistle, that this could be a very serious complication of vaccinations. But before I mentioned that Rina, may I give a brief summary of my credentials?

Of course. I'm sorry about that. I didn't mean to be impolite. Of course we have to. We have to know about your background, of course.

Sorry. I'm not saying that because I found it a bit topotentially doing that. I'm a pathologist by training. My basic medical degrees were from Cambridge University in England, and I did my pathology training in Vancouver, British Columbia, following which I've had leadership roles in many areas of pathology, both provincially and nationally. I mean, the assistant professor in the University of Alberta doing a lot of resident teaching. I've been the President of the Pro Eventual Association of Pathologists. I've been the chairman of a Royal College committee in Ottawa that sets the annual examination for pathologists to make sure that they're safe when they're released onto the general public.

So I've done a lot of stuff. I've run a big commercial lab, automated lab that cracks out all the results for your GPS. And I'm currently the interim CEO for a biotechnology company in North Carolina that's heavily involved in DNA sequencing, about which I know a fair amount. So those are my basic credentials that I'm more proud of. Another credential because I was the honorary chairman of a major NGO in Canada that was tackling a bit tobacco over a couple of decades and achieving significant success in the political realm of how to consume train very predatory marketing of big tobacco, in particular, how they focus on children so that, you might say, is a segue into children and covet.

Here are my concerns in detail. Unfortunately, the FISA submission in Japan has just been translated, and it is a great concern because they wanted to see the distribution of the body in the body of these lipid nanoparticles in the vaccine. And they found much to their surprise and everyone else's surprise that there was a huge concentration of these lipid particles. We're not talking about the virus here or the mRNA. We're talking strictly about the localization of the particles concentration in the ovary. Now this was in RA.

All right. And obviously you can't do these experiments in humans. But it points out that there is a substantial concern that the mRNA vaccine could in females, results in sterility. And it's the old story of you don't know what you don't know and the reason why clinical trials for vaccines typically go on for four or five years because you cannot. Last time I checked, pregnancy takes nine months, and so you obviously cannot check for fertility issues if you're doing a trial for only a few months.

But that's not the end of it on the other side of the corn. And you might say the spike protein that's being produced intentionally by this vaccine in some people will escape into the circulation and create these thrombotic events that we're all very familiar with. But also and that's because of the ace two receptor coating the inside of every blood vessel in the body. So the specific receptor for the spike protein, the ace two receptor, is very wide distributed in the body. But here's the point.

It has the highest expression in the human body in the placenta and the tests and the small intestine as well, by the way. But for the purpose of this argument to have such a high expression of the specific receptor of the spike protein in the testis is obviously additional grounds for concern for male infertility. So I'm pulling those two strands together to say, look, children don't need this vaccine. They're not dying of the condition. Even if they get it, they brush it off. So on the one hand, they certainly don't need it.

But and on the other hand, administering it to them without need. In the context of these significant potential fertility issues. That is, as I have stated, state sanctioned child abuse, the consequences could be just unbelievably tormenting. I hope I'm wrong. That's sole purpose of clinical trials to find the unexpected. So I sincerely hope I am wrong. But until it's proven to be wrong, vaccination of children should stop now today in his tracks because it is so enormously risky that Roger is precisely what Professor Lud Montoni.

Who we interviewed a few days ago, was asking us to do. He said he was almost desperately trying to find a way to legally force the companies and the governments to discontinue with this probably extremely dangerous practice because we know nothing. There's three questions that you usually ask. Is it necessary the Socalled vaccination? We don't think it's necessary because there's herd immunity already. Plus, there's alternative treatments that are not dangerous. The second question, of course, that's the two basic questions that you try to find out about during the clinical trials.

Is it effective? And the third question, is it dangerous now you're pointing you're pointing out that the limpid particles can cause serious damage. I don't think anybody has pointed this out to us before, but all of the doctors who we're in touch with are saying even though there's no clinical study yet, but this is the information we're getting are saying between 30 and 50% of the people who get vaccinated who get the shots, and it doesn't matter which one. If you check the de dimers afterwards, yes, they're up.

And that means there's some problem with blood clotting. And that's what most of the other doctors who we talked to were most concerned about. But this is an additional thing that points in the direction of there may be a serious problem with sterilization, both of women and men.

But it goes even deeper than that. There are two groups within MIT major institution. I'm not sure if you've been following that in the journals, but there's a vigorous debate going on now within MIT with two opposing groups. One group believes that the MRA can get into permanent DNA by reverse transcripts, and the other group doesn't believe that that's possible. Now, the reason that is also a supreme importance is that that is transgender generation that would then be passed off. Now, we don't know right now the outcome of that debate, but it's serious people with their reputations on the line and it's MIT.

It's not some rinky dink Plex. So you've got to take these potential threats very seriously before you start continue vaccinating children. But let's talk a little bit about the ace to receptor and the vascular attack right now. What many people don't realize I'm a pathologist. So I've looked at thousands of scrapings of the endometrium and so on. I can assure you that the most lush, the most fragile tissue in the entire human body is called the lining of the uterus. The endometrium. It's intended to be lush, soft and welcoming because that's the destination for Virgil Ovum.

That tissue that endometrium, as we call it, is exquisitely vulnerable to vascular attack because it is so fragile. The blood vessels are incredibly thin, and it doesn't take much imagination to appreciate that any vascular attack quite a far from the thrown by in the brains and the legs and other places, the Endo metering is exquisitely vulnerable to a vascular attack. And not only that, but the ace two receptor in the endometrium increases. Its expression increases with now we've heard about women getting their periods perimenopausal postmenopausal, women suddenly getting their periods.

Well, here's the probable explanation because of that targeted attack on the lining of the uterus by the spike protein that in some people gets out into the general circulation in much higher concentration than in other people.

My.

Goal with this point to the transmission from vaccinated to unvaccinated because there's been rumors about that women getting their periods kind of unexpectedly out of order.

It's a very brave physician who slots of thousands of women and says it's all in your head because it needs to be investigated and shown to be implausible. But there again, it's very interesting, of course, in some of the submissions to the FDA, I think it was Pfizer's submission. They were talking about the need to potentially report these events, but separate from the voting system directly to the trial coordinator. Here's some disturbing partial hypothesis for that that needs to be investigated. During the SARS epidemic, it was discovered that the SARS virus itself located heavily in sweat glands.

Now, if there is expression, the spike protein in sweat glands, if in fact, it locates in the sweat glands, we don't know. But the SARS studies would suggest that it certainly should be looked at in the context of what's now being called contagious vaccine Osis. It's got a name if, in fact, the the spy protein location, sweat glands. It needs to be excluded that it's not getting aerosolized in sweat and inhaled by bystander. That's how that will work.

Now, I get it because I had a hard time. We spoke to a few people, including our own chief advisor, chief scientific adviser, Professor Riga, camera. And she says, until I have real evidence, I can't go forward with this and tell you anything about it. But what you're saying right now makes a lot of sense.

But there's a problem, and it's called dose and and entry this process. Let's assume for a moment that indeed spy protein is being aerosolized from sweat. The multiple steps involved together to a bystander results in a progressive reduction in dose that an individual with the experience, and it would have to get entry into the body through the upper Strater tract, where the receptor for the spike protein, the virus gets in through the same receptor. And here we're talking about the spike protein itself getting attached to the ace two reception in the upper retract.

Okay, so let's assume that happened. It wouldn't typically get beyond that barrier into the body. And even if it did, it would be in very, very low concentration. So it's only a partial hypothesis, but it could be very easily disproven. Would you like me to tell you how? Okay. So it's very simple, actually. And it should be done just to show that it doesn't happen. You put someone in a hermetically sealed room for two weeks to show that they're not coming down with covert, and you're taking samples of their Putin, the nose, that urine, the sweat for two weeks, and you show those samples are all kept aside in this room.

And then that doesn't inject him or herself with the vaccine. And then you stay in that room for another two weeks and your sampling again, the air, the sweat, the urine, and so on to see if you can find a spy protein. It's really very simple to do. And that would put to rest the theory of contagious vaccine Osis. And it's not being done to my knowledge. And it's a very simple thing to do.

I.

Remember reading in that I think it was from Pfizer in their report. What they're calling. I think they're calling this secondary adverse reactions, right? They're expecting or they're afraid of something like this might happen quite now.

I'm assuming that that submission wasn't Doctored, the original one. Right. But assuming it wasn't Doctored, they were in visiting the possibility of unvaccinated people being affected by vaccinated view.

Yeah, that's what I think. I mean, that's the only thing that makes sense as far as I'm goiter.

And, you know, it's very clever, actually, that they were thinking that far ahead. They were probably aware that the evidence from the SARS epidemic about localization in wetlands.

And is this something that's often noticed with other vaccinations like measles or something?

Does that happen no.

It'S never been reported. And that's to be distinguished, of course, from what's the word for it? There's another scare tactic out there. There's a type of vaccination in animals where you make something intentionally infectious. So it's passed on between generations to create immunity in actual way, there's a special name for that. It just escapes me. But, no, we're not dealing with that process here. I mean, it's not related to those animal vaccines at all. Progressive vaccination. I think it might be called. At any rate, it's unrelated.

But the big point I'm making is don't Slough off thousands of women as nuts if you've not done the experiment. And if Visa was thinking of it as a potential consequence.

Yeah, well, the producers of the vaccines, I think in this case, they claim that the efficacy of their vaccine is 95%. But there's something not quite right with that, because there's two different ways of looking at this one is the relative risk reduction. That's what they're using. And the other is the absolute risk reduction. And if you look at that, then you all the way down to zero. 85% efficacy. Well, you think what do you make of that?

Well, to be honest with you, Rina, I've not been following those statistics. They are complicated for my non mathematical mind to get my head around. I'm afraid statistics whenever my strong point. But let me make a point about statistics. If I may, statistics do not apply to individuals. You may be it right. And if you're it it was a very different complexion on the event, does it not? And so whenever you hear these numbers, people get immune to zeros. They don't know what zero is, meaning the statistics are too complicated to understand.

So I try to dumb it down with an analogy that people do understand. If you could imagine. Let's say, for example, your granny and I'm your doctor and I walk in to see you one day and I say, hey, Drag, I hate to tell you this, but it's true. You do have COVID, and you've got about a four times increase risk of dying of cobot. Then you had with the flu that you had last year. You remember when you had the flu last year? You survived it very nicely, didn't you?

But it's four times more risky. This one and Danny would say, hey, Doc, that sounds pretty serious to me. What are we going to do about it? On the other hand, I could walk in and say this. I say, hey, Granny, you know what? It's true. You've got covert. Yeah, but listen, it's nothing to really worry about. You remember when you get the flu, you had a 99% chance of surviving, and now you've got a chance of surviving. And Randy would say, hey, Doc, that sounds pretty good to me.

Can I go home now? That's how statistics are being morphed constantly to drive fear instead of to minimize fear. And it's a slight of hand constantly. The only numbers that we can possibly rely upon or death. And even the death are being morphed, certainly in the States, because you get paid more if the covid test is positive. So we got so little to to go on. We don't know the prevalence o COVID-19 infection in a population wide, those antibodies studies are still being contested. We don't know the prevalence of it.

First of all, Secondly, we don't know if people are dying with cover or due to covet, and that all course is predicated on the PCR test of a little strand of RNA being found in your nose. And and it being called a case, which, of course, it's no such thing. I like to tell people to put it in the vernacular. I like to tell people, you know what in your snot. You've got lots of books, lots of viruses. And so what if you've got a little tiny strand of one called COVID-19 and you're feeling perfectly well?

So what it's called snot?

It's precisely what Dr. Vodar keeps telling us and our viewers is he doesn't understand. And we don't either. Why all of a sudden viruses are made into this extremely dangerous? Well, now it's a pandemic, but we've been living with viruses all for hundreds of thousands of years now, and we've been our immune system has been perfectly capable of dealing with these viruses. And what he explains is even if you get a shot against one of the viruses, then another one will probably take its place. So it doesn't really change much.

That's how he tries to explain it, because most of the viruses that are around and he doesn't know of any that's different is viruses that we can cope with. Unless, of course, our immune system is not intact anymore. So that's what he says. That's what we should concentrate on strengthen our immune system by not eating junk food by exercising, you know, the usual that's a rocket scientist.

And this, yeah, vitamin D is obviously very important. But, you know, this sounds awfully. Tell us to say this, but it's just evolution in action. We may be weeding out the people with the poorer immune systems, which is the way evolution works. We don't want to concentrate and listen, this isn't a eugenics. I'm not trying to kill people off here.

I know.

I'm just saying that end point of this, from an evolutionary perspective, is building a healthier human race, one that's more able to reject these viruses that will come along constantly. And of course, that brings up the whole mutant scare to as Mike Eden said, the percentage of the genome that's being mutated is no more than 3%. And so our immune system, miraculous as it is, we'll pick up the 97% commonality of the rest of the mutants and be very effective at attacking these mutants. It's nothing to be scared of.

And I also like to say, if one of these mutants happens to be provably, more transmissible. So what? That's a good thing. It increases natural transmission the way we've done it with the flu and every other viral epidemic. Natural transmission is a much better way of creating immunity than some artificial vaccine. It also happens to be immediately available and cheap.

I think that's not quite the way Cut Bit Kowski put it, but almost he said the exact same thing. He says everything that the governments have done is counterproductive, because if they had let the virus spread, the whole thing would have been over. May have last April of last year.

Absolutely, absolutely, absolutely correct. This is a pseudo pandemic. I called it a hoax elsewhere. The virus is real. It's been cultured in sequence and all that good stuff. But the reaction to it is politics playing medicine, and that's a very dangerous game. They should stick to their knitting and that real medicine, real science drive the bus. But instead they're basically trying to to cover their backside constantly, having been shown categorically inescapably obvious that what they were doing wasn't working. Then you don't do the same thing over and over and over again for an entire year and expect the outcome to be different.

Einstein, I think, has something to say about that.

And in fact, we don't even know if the dead people labeled as covets death were really like killed by the virus. I mean, we know that there were a lot of co morbidities, and so we don't even know. I was wondering, have you looked as a pathologist at COVID the people and people who died from the vaccination after the vaccination?

I've not personally been involved in any autopsies or reviewing the histology. No, I've not. But what you bring up is a medical concept that we don't understand in 2021, and it's called frailty. Old people are frail. It's understood all their systems are frail, their heart, their lungs deliver, their kittens, etc. Etc. And we can measure that. But we can't measure T cell immunity. We can measure immunoglobulins, but that's a minor positive story. Truly, the T cells that you're involving in getting rid of viruses. And we can't measure that easily at all.

So the presumption is, of course, that as you get older and all these organ systems fail that your immune system is also failing very silently. You're not aware of it until you know the what's it called the dead man's friend. Pneumonia comes along and takes you away. But the point I'm making is that you have these people with multisystem disease as they're on the Casper death a month or two away from death, the handling, metastatic cancer, serious heart disease, renal failure, severe diabetes, etc. Etc. And it's affecting all their organs simultaneously.

And they're on the cost of death. Along comes a little brush on the cheek, a little infection with covert. And that's enough to start the death for that doesn't mean that you died due to Covet. It meant that it was the last straw that broke the camels back. And it's totally inappropriate to label that death as due to Covet. Yeah, we don't understand reality, how these systems interact in those final months before death very complex. We don't understand it. But what we do know is if you take a macro example, you isolate someone with Alzheimer's and they'll die faster, just as a gross example of how a little thing can cause death, and we don't understand it.

But it's a grossest distortion to pad the statistics by saying that someone died due to COVID simply because they had a positive PCR tests that we all know is utterly useless and they were dying of something else. It's very interesting. Is it not that the statistics show that death and heart disease and can dropped dramatically? Well, let me assure everyone listening. As a pathologist, I can tell you with categorical certainty, lockdowns do not cure cancer.

No, on the contrary, this is what we heard there's, like one pathologist. Now professor emeritus. His name is Pusher from Hamburg University, and he performed over a hundred, maybe close to 200 autopsies postmortems and the end results. In the meantime, he's changed his mind. In the meantime, he's gotten vaccinated. We don't know what happened, but back then this is about a year ago, he said, all of the all of the people who he performed autopsies on we're we're past their average life expectancy and they all had comorbidities.

Almost no one died off or due to COVID same result from studies I think that were performed in the meantime, both in Bergamo, which supposedly was one of the hot spots, and in New York City, 94% of the people who allegedly died off Covet or due to Covet died of completely other reasons. I talked to Virologist in Sweden. His name is Bean Hummus Cold, and he told me 85% of the people who allegedly died of Covet died of completely other causes. So there is your concept of France, probably because that is what most of these people have in common.

I mean, of course, this is an especially vulnerable group of people, and they do deserve special protection, but it doesn't. This does not make it plausible that you have to shut down the entire society. It makes absolutely no sense. On the contrary, all of this, as Kosky pointed out to us.

Was counterproductive well, as better, Charie has said. And if I could paraphrase his statement, Lock down to the biggest mistake ever made in public health ever ever made. But let me just extend that argument if I may ride to post vaccination, because I think it's very important that people realize here that these dramatic events that are clearly pose vaccination deaths, cerebral Venus thrombosis, the vein thrombosis in the legs, Pullman, embolism, etc. These are the grossest, most obvious, clear cut examples that get recorded. This attack is principally mediated by a vascular attack.

Whichever organ you're talking about the test is is a slightly different story, but the ones that we're hearing about the drone boss right now, some boss don't have to be complete. Yes, if it's a complete block of a vein or an archery, you get the classic sentence. But if you were getting just little cloths in tributaries of certain veins in the head, you could get a terrible headache that simply sloughed off as a terrible headache. But it happened three days after the vaccination and should be recorded.

But many people, this is why that bear system is so unreliable, because it's only recording but terribly obvious. There could be many, many complications that are partial expressions of thrombosis that are simply being Slough off as ordinary life complaints.

As it happens. There are so many adverse events in the meantime that even the mainstream media weren't able to sweep them under the rug anymore. It's entered the mainstream media, at least in the United States, Fox News, Tucker Carlson and he reported the other day. And this is the the official numbers, the official figures, on average, 30 people a day die after vaccination. Now, of course, there's no causation proven, but this should be examined, I think, because as you rightly pointed out, only a very minute group or only very few of the real adverse events are reported.

Some people say it's probably around 1%, maybe a little more, but if it is around 1%, we're not talking about 30. We're talking about 3000 people dying a day, and that is in line with what we here in Germany, heard through our whistleblower tool from people who work at the nursing home. That's what we hear from Israel and all the other countries. So that's enough reason, I think, to be completely alarmed. And now that they're going after the children with the additional information that you're giving us, I mean, there's absolutely no doubt in my mind that anyone who continues with this from here on will have to be held liable, both civilly and criminally.

That's why notices of liability can be profoundly effective at the local level to actually hand the teacher of your child or the principal, or even more important, the Superintendent of the school board, a notice of liability. You cannot deny knowing that this could happen. And if it does happen, you are hereby put on notice that you are comfortable by allowing this to happen on your watch. But I wanted to say one other thing about the best system, right? Isn't it pathetic that we're having to rely upon retrospective, you might say random reports, lay reports, etc.

Etc. If a government is going to introduce an experimental vaccine on a mass scale for something that is essentially a trivial disease, then they should be obligated to er put in place before starting a clear randomized sampling of people who been vaccinated to determine what the true incidence of complications were they've not done that. They are very comparable in not setting up a monitoring system before the experimental vaccine was introduced, which should have been a very obvious precaution risk staff in order to monitor what they're doing.

And by the same token, I would extend that argument to the therapy side of things. If, on the one hand, you are saying this is such a serious emergency that we have to have an experimental vaccine, which I disagree with, obviously. But if you're saying that, on the one hand, you cannot simultaneously say to all physicians, you cannot prescribe agents that you believe may be protective or curative. If they are safe. Safe agents already FDA approved. You cannot deny physicians access to safe medications. If you're introducing a if you're calling something an emergency, which is not, it should be expected that if it's an emerge true emergency that warrants an emergency vaccine program that individual physicians should be allowed to use agents that are known to be safe.

Yeah, that is extremely fun, specifically prohibited.

Yeah, that is extremely puzzling that we have. And we had doctors come on television in the United States, here in Germany as well, but more so in the United States and explain about alternative medication. I remet him being one of them. That seems to have shown very positive results without any adverse effects. It's extremely puzzling. How then? Well, I guess it was the governments all over the world and the who, of course, how they try to I don't know how to put this, but defamation is not the right word, but how they try to explain to the general public that the only solution is vaccinations.

But from all the hearings that we have conducted, from all the interviews we have done, the evidence now tells us that right from the start of this, what we now call a plant pandemic right from the start, the ultimate goal was to get people vaccinated. The steps in between the math mandates, the social distancing, the lockdowns. We believe now that they were used in order to make people to get them accustomed and to make them obedient so that ultimately they would, in fact, welcome the vaccinations.

Why do I say this? Well, from what we've learned from a couple of people who used to work for the who, there was enormous pressure on the who in late January of 2020 to declare a public health emergency of international concern. Enormous pressure. They had a first emergency meeting, and they couldn't agree on declaring this public health emergency of international concern because there were no cases. But they agreed that they would have another as second emergency meeting. Two weeks later, two weeks later, there was the declaration of Public Health Emergency of international Concern, which is the only basis on which drugs or, in this case, vaccines that have not been tested can be used.

They can get this emergency use authorization in the United States and here in Europe was the conditional use approval. What had changed over the course of these two weeks. Only one thing Drustin had introduced his tests had given it to the who they had used his PCR tests, and they had come up with thousands of cases. We now know from talking to people like Dr. Mike, Even, former vice President of Pfizer, that this is, in all likelihood, thousands of false positives. Apart from the fact, as you have already pointed out, that PCR tests cannot tell you anything about infections, let alone if there's no symptoms.

Apart from that fact, the way that his test was set up at 45 cycles of Amplifications. I mean, the Frankfurt Public Health Agency says that they're not going to even look at anything that comes in. And that was tested beyond 24 cycles of amplification even tells us at 35 cycles of of Amplifications, you're likely to end up with, I think, 97% false positive. So this is 45 cycles of amplification. That's how they that's how they arrived at the conclusion that we have something like a pandemic, which they don't really care about.

But they wanted this public health emergency of international concern face.

But I don't think it was just that to write. I mean, you had that idiot and using the word advisors, it's actually complimentary that idiot at Imperial College London, one for in the theoretical physicist who was pretending to be an epidemiologist. He got hold of those numbers in Milan. And that's what that's really what he plugged into his computer. And that was also something that really got attention of everyone internationally. That Armageddon Armageddon was coming. I do disagree with you. I think I don't think there's any pandemic here.

What I do believe is there was an artificial release in that living wood. And on a very dead issues, it was on a plane to Milan faster than you could spit because of the dependence of Milan on cheap Chinese Labor for the leather industry. And a Milan, of course, has the highest concentration of elderly people in the whole of Europe. And so they were sitting Ducks. Right? And it kind of morphed from that. And then and then at the disclosure here, disclosure. I'm a Trump. Okay, I'm a fervent.

Trumper. I'm a disciple of Trump. I think he's the savior of democracy. However, he was dead wrong on all aspects of covert. You can't stop it with a travel ban. It was never a Tino virus. It's actually got Fouche sticky fingers all over it. It's a made in USA virus. And he thought, macho, macho Trump. We can wrestle this thing to the ground. We just got to make it lucrative enough. So what company wouldn't grab your hand off if you say, look, I'm going to give you a few billion here as a gift for you to Warp speed, a vaccine that you can sell for billions more when you finally market it.

And I'm going to give you total indemnity. Obviously, they're going to have your hand torn off. Right. And so he was comfortable in instituting this Wolf speed Maxine program that all the work had already been done, attempted to be done with SARS vaccines and the whole delivery system of mRNA. I mean, that had all be thoroughly worked out. It was just a matter of using a different strand of mRNA inside the capsule that had already been defined there. It was ready to go. So I don't think you have to be a conspiracy theorist to figure out that to think that somehow this was some Machiavellian.

Plus, I think it's the culmination of straightforward political idiocy. You know, they're so desperately afraid of being reelected and getting their pensions that they'll put mass on everyone and threaten them if they don't. Because, you know, my reelection and pension depends upon you. Stupid lot following orders.

That does make a lot of sense, actually, because if you look at politicians, that's what they're like.

That's what everybody knows they're like in the meaning the number one ruling politics is never apologize. You don't apologize, you morph the game. And so it's more from masks to vaccination to vaccine passports and so on. It's like the game of wakame. You bang down one and ten more pop up that you've got to get distracted in which one you're going to attack next. No, it's been a very, very clever political game. And the essence of what's going on politically is this essentially what they've done is this they said the same privately.

Yeah. We created this problem, didn't we? Yeah. Okay. We accept that. But you stupid buggers you're the people going to get us off the hook, submitting your bodies to experimental vaccines. You know, we created the problem. And now you're going to get us off the hook because you're so stupid that you're going to take the vaccine. We know that. And so they get off the hook by using us as guinea pigs in this biggest medical experiment the world's ever seen.

But then again, the experiment is not looking so good. I mean, since we're expecting quite a few of side effects. So I think what I don't really understand is they could have said, okay, we vaccinate the people most at risk, like the elderly and all that and then maybe stop. So they could have had an excuse to get out because these people now vaccinated and now, but they're now pouring it out onto the children and to everyone and to the pregnant women and all that and that's creating such a high amount of risk.

I mean, it's outrageous. So I don't really understand why they continue playing the game. And also with regards to maybe taking precautionary measures, like, for instance, setting up, like, additional hospitals for the sick and people that we might expect, like in the fall with these these Stoken storms and all that. But instead, in Berlin, for instance, they now turn tearing apart some sort of like a talk hospital that they created for, like, €24 million or something like that. I mean, why all that for me? That doesn't make any sense.

They could have gotten out easier without that risk.

I think the logical continuation of that is sadly, an expression of that more global process called wok ism where the state wants to take away all personal responsibility and assume that responsibility for you to protect you from risk of all sorts, anywhere it raises, it side the head. We will protect you from risk. Trust us. And of course, the great unwashed out there with their iphones and water bottles and selfies, you know. Oh, that's fine. Hey, I can just continue my hedonistic swirl down the drain and live speech.

Thank you very much. Yeah. Yeah, we trust you. Thanks. Bye. And of course, here I'll extend my theory. Love Rino, because I want a soapbox now. And that all started. Of course, in our universities, if I had to put my finger, my finger on one particular thing that is causing all of society's ills of which the reaction to covet is merely one tiny example. It's the selfperpetuating elitism in universities that only hires their own socialist minded faculty because then subliminally you influence the students going through who end up as journalists, in politicians and teachers.

So they go out and they teach and they teach the kids the same thing. The kids then go back to universe, go to University to get reinforced in this mentality and it's become a self perpetuating elite. The universities are a business. It's called bumped in seats. It's nothing to do with teaching, and it's a self perpetuating process. And if there's going to be any hope for democracy, there has to be a brutal attack on the ability of universities to manage themselves because they're inflicting on society, their particular political persuasion.

And they're doing it very efficiently over a period of 20 years. And it's going to be very hard to turn back. But I think that what's under the end. Currently the essential feature of why it's so easy to persuade people to do things is because they want government to do things. They've been told to expect that government will work after me from cradle to grave. They'll protect me when I'm crossing the road. They'll protect me from everything. Thank you very much. And we're like lands to the slaughter, saluting in their general direction.

And one of those things is vaccination. They said it's safe. Four words, four letters, one word safe. It's very I'm going to take it. I trust government.

That's precisely the problem. It's our system of education is the complete shambles. We had a number of psychologists because we couldn't believe how most of the general public are simply going along cheerfully towards the slaughterhouse. We couldn't believe this because ten years ago, some of the people who have been planning for this were actually completely certain that this would happen, that they would be able to, I don't know, manipulate the masses in such a way that they would act this way. And now they are acting in this way.

And one of the professor of they call it educational. He's a philosopher. He's an educational philosopher. And he said the same thing that you're saying for the last 30 years or so, he says system of education has morphed into something completely. It's now standing on its head. It used to be geared in such a way as to educate people who would be able to ask questions, who would be able to discuss different opinions. And now we're down to don't ask any questions. Just follow orders and don't deal with other opinions.

Just follow our opinion.

But it follows the socialist Communist place. Or to first, you infiltrate the institutions, and they've done that with remarkable stealth and efficiency.

Yeah, unfortunately. But now we're on to them, Roger. Now we're on to them. This changes the whole ball game. Well, this was both a pleasure and an honor. Roger, I want to cut you short, though. Is there something that we should be discussing that you think is important so that the rest of the world should know it?

Yes. The short version. Don't believe anything. You're told it's all a pack of lies. Nothing works. Nothing could work. Nothing did work, and nothing will work. We rely upon you, the common sense general public, to act in ways that are so much more effective than government's intervention in all of this. And you are a solution. Your guts are telling you the right thing. This is all nonsense. And it we will survive.

It excellent. This could have come from Lord Assumption. I think he's in complete agreement. And I am, too, by the way. Thank you so much, Roger. This was really good.

Really, really good.

We'll be at it's.

Nice to get to know you. Thank you very much.

