Why are thousands of doctors and scientists worldwide being censored? Why is it not allowed for medical experts to speak out about the COVID-19 vaccine and about effective treatments for covid 19 we are in an age of unprecedented censorship. Freedom of speech has completely disappeared on planet Earth. Literally thousands upon thousands of documentaries, interviews, programs from doctors and scientists have been removed from the Internet. There are websites have been taken down without any warning. What is going on? Why is there such an aggressive push for a vaccine for covid 19?

Why is literally every successful treatment for COVID-19 being banned from so many countries? There is something going on. Hi, I'm David Sorenson from Stop World Control.

Com.

Today I have a guest in our studio door, Carry Made. She is a medical expert who has done research for decades, and she has found some extremely disturbing things about the upcoming vaccine for covid 19. Dr. Carry Made has been the medical director of two large clinics. She has a vast medical experience, and we are honored to have her here. I want to encourage you to watch this video to the end so you can hear what she has to say. This may well be the most important video you will ever watch in your life.

I am very excited to be here, and I feel it's very urgent that we get this information out to everyone.

I.

Started researching vaccines, probably in my early 20s, been very interested in them, but never before have I seen the technology being used on this proposed covid 19 vaccine. Never before. First of all, this vaccine will be using a modified RNA or modified DNA in the vaccine. So why is this important? It's important to know, because it could potentially alter our DNA, our genome. And what's the big deal about DNA or RNA? Well, our genome. Well, the genome is what makes us human, what separates us from the rest of the animals and plants in the world.

It's the blueprint for what creates us, how it reproduced, how we function, how we repair, how we evolve. So one little change, one little protein inserted, one taken out, one change can actually create the congenital defect or hereditary disorder. So a little change is grant. So something that can alter that could really be devastating on us humans. Right. So they're proposing uses technology. And part of this is called transfection. Transfection is the same technology being used to make a genetically modified organism, such as a tomato or corn and the grocery store.

And we all know that Monsanto is pretty well known for making genetically modified organisms, and they're not as healthy as the organic, the wild type that you see out of nature. So if this is the same technology being used on the plant, well, what would happen to us humans, potentially, we would not be as healthy. Okay. And I want to remind everyone that this is the first time that it would be used on humans large scale. We would be the experiment. We would be the lab rats.

We don't have long term study. So this is very, very important to know. Let me just go and show you or tell you about one of the front runners for this vaccine that is modern. Modern has been given about $1 billion from the US government for research and development. It's backed by the Bill and Melinda Gates Foundation. So they have a lot of money backing them. I wanted to let you know they're kind of the new kids on the block. They really have not been around for that long.

They have never developed a human vaccine nor a human medicine ever. This is their first run at it. Also just to know for you to know that they have gone from fast track their vaccine light years. So they went from a lab experiment to phase two, which is using only 45 human subjects in 63 days, two months. That's crazy. We should have years behind that. And I'm going to remind you that this is the first time they've ever developed a vaccine. They're early studies so far showed that their phase two, which is using 45 human subjects when they did introduce this vaccine into the human subjects, 100% of the high dose vaccine group, 100% got systemic side effects in the Logo vaccine group got systemic side effects.

So already routine. Initially, side effects, no long term. We don't know. So on, modana one of the ways that they could apply. This would be a proposal would be going to use a bandage called a microneedle platform. Microneedle platform would be a bandage that you could get in the mail like Amazon or Ups. It's advantage. You would apply on your hand here and then you take the sticker off and then voila you have a vaccine, you do it yourself. So how are they doing this? The bandage has tiny little micro needles on it, and it's designed after a snake Fang or a Viper Fang.

So it's like a bite from a snake. But many of them, and they say you really won't feel it, but it goes into your skin and the little tiny micro needles will be injected. So what's in a micro needle? It'll be either the DNA or the RNA vaccine. Number two, it will be something called Luciferase. Now, this is very important to know they patented an enzyme called luciferase. Okay, so this is called Luciferase claim because it gives a bioluminescence a light. Okay. And it's not something you can see your feel.

But if you have a special device, like a smartphone app with a special application, you can scan over it and it will light up. It will show a pattern, a digital code, a barcode, a tattoo. We're going to be branded. Each person will have their own ID. This reminds me of World War II. You know, it's something to think about. Being branded like a product in the store. So that will be in there. And that will hold proof that you're being vaccinated. They want to make sure that you're scanned and that you've gotten the vaccine.

So we'll be branded. What could that be used for? There's lots of technologies out there, but it's something that we need to be concerned about. So there's two things. We have a brand new experimental DNA or RNA vaccine that could potentially alter our genome. And number two, we're going to be tattooed or branded with an ID. And then number three, this is all in a hydrogel. Hydrogel is a technology that was invented by DARPA Department of Advanced Research Project Agency. Now, this is a small part of the Pentagon or the Department of Defense.

They make the Sci-Fi inventions that you might hear about. So this is one of their inventions. You can look up on YouTube, hydrogel, the company Profuse and DARPA, and you'll see some clips of some of the technology of this. So this is a special technology because it goes under the skin. The body doesn't reject it, and it has nanotechnology, which are microscopic robotic organisms. So these microscopic organisms that are robotic will be in your body. Okay, they can assemble, disassemble and reassemble and to do innumerable things into the body.

So the idea of this would be it's a way for to gather information from your body so you could get your blood pressure, your blood sugar, your heart rate, which sounds good. Okay, gather that information. However, it also has a potential to be used for other things. It can gather how many steps you've taken if you follow it, if you're swimming, if you're running, if you're menstruating, how your mental cycle goes, if you're having sex, if you're sleeping, it actually has the potential to know your emotions.

Okay, all of this data 24 hours a day, seven days a week, 365 days a year is being accumulated. And where is it going while they claim it goes to a smart app like your phone, the Icloud, or any smart device. But who's getting this information? Who is using it? What are they using it for? That has not been answered. So the other important thing to know is they're gathering all this information about us, and we're putting that out. So we're being connected to artificial intelligence.

You have to know this is not just a vaccine. We're being connected to artificial intelligence. So just like a phone, you have your smartphone, you can send a text, you can send an email, but the phone or someone else can send something back to you to your phone. That means something can send something back to our body, messages or information. What could happen from that? I could imagine that you could be affected with your mood or your behavior, your memory. That could really cause a lot of problems, a lot of confusion.

And who's in charge of this the Department of Defense, Bill and Melinda Gates, who's doing this? We don't have answers yet, but this is something real to know this is being proposed. And I don't know if you've heard of something called ID 2020, but it's also the idea that everybody will have a unique Identifier. And from that Identifier, everything will happen. We will not need credit cards. We won't need cash. Well, this is the beginning of the unique Identifier is branding this tattoo. This means the end of cash, the end of credit cards.

This is the beginning of all of this. The loss of autonomy, the loss of independence, the loss of Privacy. We have to really know what these people are intending to do. So the hydrogel. Also, the companies are claiming that the hydrogen has a potential to be an on demand drug delivery system. Okay. And I'm not saying it's coming in this vaccine, but I'm saying this is the same technology. You need to know this. So an on demand drug delivery. That means that true light application, that a drug could be delivered into your body.

Well, that's a little concerning, because I know if I take a medicine, I have a tablet and a bottle that has a label. I see the tablet. It has a unique Identifier on the tablet, and I take it, and I know when I take it, I'm in control. But what if something, it has a light source. And I'm not quite sure what they mean by that. But that is what they're talking about. Can activate something in your body. What if you don't know it's been activated?

What if there is a problem with it? I mean, could you imagine the implications of this? What if a bunch of people are riding out of control? Could something be stimulated in you to sedate you? I can imagine in the wrong hands could be very dangerous. Is that part of the reason of our military being involved? I'm just giving you some ideas to be critical fingers and to know what they're proposing in these vaccines and to research these things for yourself, you really have to know how it's not just a vaccine you're giving up.

They're manipulating our DNA, our genome. And, you know, they say it's temporary, but I'm telling you that when you manipulate the genome with transfection, you can make it permanent. It is a possibility. And they won't know that until they do it to all of us. Do you want to take that chance?

One other element that is extremely concerning about this vaccine is that it is being pushed by the number one vaccine dealer in the world. Who is Bill Gates? This is a man who has literally zero medical education. I want to ask you a question. If you are ill, you go to a doctor, you go to somebody who was trained to treat you properly, someone who can accurately diagnose you and who can propose the best treatment on your way to recovery. Would you ever go to a person who has literally zero medical training?

None of us would ever do that be Gate, however, is the person who is the number one voice in the world's controlling entire governments, health organizations in many countries. He is the number one financer of the World Health Organization. He dictates what they do and what they don't do. This is a man who has literally zero medical education. Yet he is e the number one voice in the world, directing humanity as a whole in extremely dangerous medical decisions in the medical direction. He is the one who finances the vaccine companies.

He's the one who spoke with President Trump. And you can hear the clip in a few seconds where he literally said to President Trump, you should not investigate the risks or the damages of vaccines.

And the second time I saw him was the March after that March 2017 in the White House. In both of those two meetings, he asked me if vaccines weren't a bad thing because he was considering a Commission to look into ill effects of vaccine ill effects of vaccine, ill effects of vaccines and somebody. His name is Robert Kennedy Jr. Was advising him that vaccines were causing bad things. And I said, no, that's a dead end. That'd be bad thing. Don't do that. Don't do that. Don't do that.

The Gate is known for a devastating destruction that he has caused worldwide. With his succeeds. Robert F. Kennedy Jr. Is a close relative to late John F. Kennedy, who was assassinated because because he was investigating the corruption of the CIA. Robert Kennedy has the same passion for truth and to fight corruption. He investigated the vaccine industry of Blue Gates, and he made the reports that shows how he has made millions of women in fertile without him knowing it, he has caused paralysis, autist death in hundreds of thousands of children.

He has been kicked out of India for doing that. There is literally a petition at the White House with more than 6000 signatures from people who demand an investigation against Bill Gates for crimes against humanity. This is the man zero medical education. He knows nothing about treating sick people. Yet he is the number one Hacen dealer. Why is he doing that? He said literally, that getting into the vaccine business was his best business investment he ever did. He doubled his fortune from $50 billion to over a hundred billion dollars by dealing vaccines.

Besides that, he also owns most of the media or he bribes them. There is this well known German journalist, Rude Rota. He was an editor for one of the largest newspapers in all of Europe. He came out a couple of years ago with shocking confession. He said for 25 years had been a journalist. In all those years, I was taught to lie, betray and never tell the truth to the public. And he says I was drived by American billionaires, by the CIA, by secret societies and by the German secret Service.

Well, I've been a journalist for about 25 years and I was educated to lie, to betray and not to tell the truth to the public. It is not right what I have done in the past, to manipulate people, to make propaganda. And it is not right what my colleagues do and have done in the past because they are bribed to betray the people, not only in Germany, all over Europe, we live in a banana Republic and not in a Democratic country where we have press freedom, where we have human rights.

I was supported by the Central Intelligence Agency, by the CIA and fed up with it. I don't want to do it anymore. And so I've just written a book not to earn money. No, it will cause a lot of trouble for me to give the people in this country, Germany and Europe and all over the world just to give them a glimpse of a view what goes up behind the closed doors.

Why is the support in relation to vaccines? Recently there was a secret meeting by the top vaccine safety specialist from the World Health Organization in Geneva, Switzerland. This meeting was secret. It was not supposed to leak out. Someone with a conscience leaked out the footage of that meeting because those top vaccine safety specialists from around the world admitted to each other. They're severe. They're deep concerns about the many long term health damages caused by vaccines and the many deaths that it causes. And they literally say one of the chief scientists from the World Health Organization says we have no good safety systems in many countries.

And we have no answers when people have questions about deaths occurring due to vaccines because we're not able to give clear cut answers when people ask questions about the debts that have occurred due to particular vaccine and the death that have occurred due to particular vaccine.

And therefore, it seems to me that it is not to unexpected if they multiply the incidents of adverse reactions. If they multiply the incidents of adverse reactions that are associated with the antigen but may not have been detected through lack of statistical power. In the original studies.

You are correct the major health concern which we are seeing accusations of long, long term effects, long term, long term effects.

We have a very wobbly health professional frontline that is starting to question vaccines and the safety of vaccines when in medical school, you're lucky if you have a half day on vaccines, never mind keeping up to date with all this.

Regular vaccines are known to be very dangerous and have severe side effects. The media hides that from you from the public at all costs. Recently there was a hearing of Mark Zuckerberg, the CEO of Facebook, by the American government Senator pointed out to him recently, the US government has paid over $4 billion to people whose lives have been destroyed by vaccines. Why is Facebook then hiding information about vaccine damage from its users?

In April, I wrote you that I was disappointed that Facebook would consider restricting free speech rights to communicate the risk associated with vaccinations. In recognition the uncertainties the risk of vaccinations. The federal government has created a vaccination trust fund that has paid out over $4 billion to compensate those who have been injured by vaccinations. There's no more clear or persuasive statement that the risk associated with vaccinations, then the existence and the payment record that fund from time to time, medical research has established case and context of specific risks associated with vaccinations.

Shouldn't somebody have the opportunity to express an opinion different from yours? I mean, over $4 billion has been paid out by the fund. Over four thousands of people. Don't you think people should be able to have information to make an informed choice, Congressman?

I do. And that's why we don't stop people from posting on their page. Something that's wrong, something that's wrong, something that's wrong, something that's wrong. Someone is typing in into the search results into the search box, something that might lead to antivax content. We don't recommend antivax searches to them. We don't recommend antivax searches to them. We don't recommend antivax searches to them harmed by this policy are.

In fact, parents with disabled children. And I don't think we or you should be so quick to turn our backs on them. If you look at the statistics, I think you're making bad mistake.

A serious form of autism causes people to no longer be able to think clearly. They cannot speak properly. They can behave properly. They are mentally handicapped. A study was performed by the CDC to investigate the link between vaccines and severe autism. They found that, indeed, vaccinations cause autism. What happened? They threw all the evidence in a dust bin that they put in the middle of the room. They destroyed the evidence, and they released a scientific paper in the Renown magazine, Pediatric, where they said, no vaccines do not cause autism.

The chief scientist of that investigation of the study, William Thompson. He came out and he said, I am guilty. We have hidden the truth from the public.

You and I don't know each other very well. You have a son with autism, and I have great shame.

Now there's a whistleblower from the CDC who's going to come out and say that the CDC had committed fraud on the MMR study and that they knew that vaccines were actually causing autism.

My oldest son, Ian, was walking and running after the vaccine. He was no longer able to do that.

So I call a clinic, and I said, I think my child has adverse reaction to those shots. And then can the headband constant finding against anything that he could find right now.

I'm sitting in a very pretty position in terms of providing you a lot of information.

The relative risk of receiving an autism diagnosis was astronomically.

Wow. The CDC had known all along. There was this MMR. Autism is.

In CDC's judgment. The best cover policy is to continue vaccination unchanged.

You who run our health agencies in this country, you have an obligation to make sure that these studies are complete, thorough so that we have all the facts.

Oh, my God. I cannot believe I we did what we did.

But we did a mission of crucial data, destruction of documents, misleading the Congress grievous harm to innocent children.

Everything I've been telling my patience for the last ten years and has been based on a lie and cover up.

Parents should be able to count on federal agencies to tell them the truth.

In 1978, the prevalence of autism was about one in 15,000 children. If we assume that things are going to continue as they have, we can predict that by 2032, 80% of the boys born will end up on the autism spectrum, half the children, 80% of your life. It's a vast number of children who are being diagnosed with autism every day. This is going to be a complete catastrophe. If we just let it happen.

There is crime at the highest level of the health organizations to hide this information. Media hides this information. The documentary fact shows the tremendous destruction that vaccines have caused worldwide. People express that their inexpressible heartbreak, that vaccines have caused their children who can no longer walk, can no longer speak, can no longer think their eyes are all over the place. This documentary has been banned, has been oppressed, has been censored in every possible way. That's why I have invited Dr. Carry to speak out about vaccines because the COVID-19 vaccine will have all the dangers of regular vaccines, plus all the risks of the new technologies that are introduced without safety testing.

Bill Gates literally said in an interview with BBC that they are skipping the usual safety testing period because they have no time. What do you mean? They have no time? That's absolutely insane. And he literally said that at least 700,000 people will suffer from side effects. And these side effects include cancer, autoimmune diseases, paralysis, death, all sorts of severe side effects. I will play the clip where you can hear Bill Gates speak about the skipping of the safety testing and the thing that will get us back to the world that we had before.

Corn of irth is the vaccine and getting that out to all 7 billion people. And being effective for older people whose immune system is weak is a huge challenge. If you really amp up the vaccine to do that, then you can run into safety issues. Then you can run into safety issues. Then you can run into safety issues. So we're going to have to take something that usually takes five or six years and get it done in 18 months. But there will be a trade off. We'll have less safety testing will have less safety testing will have less safety testing, then we typically would have.

A one end. From what you're saying, it may be that there needs to be some compromise in some of the safety measures that would normally be expected to create a vaccine, because time is so crucial.

Well, of course, if you want to wait and see if a side effect shows up two years later, if you want to wait and see if a side effect shows up two years later, if you want to wait and see if a side effect shows up two years later, that takes two years.

In the next clip, you can hear Bill Gates say that he is injecting genetically modified organisms, right to the vein of little kids.

Something to worry about with medicines that is, might some of them have side effects? Do we need safety testing? I mean, we're taking things that are genetically modified organisms and we're injecting them in little kids arms. We just shoot them right into the vein, genetically modified organisms and we're injecting them in little kids arms. We just shoot them right into the veins. Yeah. I think maybe we should have a safety system where we do trials and has things out. Yeah. I think maybe we should have a safety system.

Yeah.

I think maybe we should have a safety system and look at his expression.

How he enjoys if he looks at the side and smiles.

Genetically modified organisms and we're interacting them in little kids arms, we just shoot him right into the main.

So here maybe we should have some safety testing, which means they do not have it yet. At the moment, he said that which means that for decades he has been injected genetically modified organisms into millions of people, which can alter that Diana, which causes tremendous destruction to their bodies. And he just says so, yeah.

Maybe we should have because we're not able to give care, cut answers when people ask questions about the debts that have a guard due to particular vaccine.

And the major health concern, which we are seeing are accusations of longterm, longterm events.

We have a very wobbly health professional frontline that is starting to question vaccines and the safety of vaccines.

This is going to be a complete catastrophe if we just let it happen.

There's, however, something else that's going on with this, which is extremely, extremely dangerous. The health Ranger Mike Adams from Natural News. He is a scientist who has been investigating this for many years. He made a video years ago in which he said, literally, they will cause a coronavirus pandemic and then introduce a vaccine that will kill millions of people because they want to reduce the world's population.

They will be cold in a kill switch vaccination program. And the way it will work is likely something like this. First, there will be a planned outbreak, a release of engineered by a weapon. We saw a practice run for this with the measles outbreak at Disney World a few years ago, which was used to push SB Two seven, seven. The vaccine mandate in California. Now this will be done on a global scale. An engineered bio weapon will be released. There will be calls for massive government funding of the vaccine industry to come up with a vaccine.

And miraculously, they will have a vaccine developed in record time. Everyone will be required to line up and take this vaccine shot. Except the shot itself will be formulated to kill people. The kill switch for humanity is a hard kill. Laws will be passed demanding that everyone line up to be injected. People who are not vaccinated will be disallowed from participating in public transportation won't be allowed to board an airplane. You will be denied a bank account or banking services. And in this injection, they will, of course, feed more bio engineered weapons.

There will be viral strains in there with long latency that are programmed to activate. Perhaps months later. Once the payload begins to express itself, you will start to see people dying all in the streets across all the cities around the world. Once that begins, the media will push a second round of vaccines. That second round of vaccines will be a shorter duration kill switch that will kill people within weeks, not months, perhaps days. In certain cases, if you line up to be injected, you will find yourself very likely dead before very long.

And this is the whole point. Vaccines have become weaponized. They are a kill switch vector for humanity. Remember, the globalists don't want humans to be around. At least not most of us. They want to depopulate the planet by vaccines have been increasingly weaponized.

The Catholic bishops was my cutters out of his mind. Was he insane? Why is he saying that I'll go back to Dr. Kerry, and she will explain a few things about the background of Brigades, his mission and the general agenda of the world's deep population back to you carry.

So you might ask, why is this happening in this new proposed vaccine? Why are all these new technologies? Well, whenever I'm not sure if something I always say, follow the money. And when you're looking at the backers of these companies that are trying to be the forefront runners for the vaccine manufacturing, when you're looking at the research and development, when you're looking at who is behind the big health organizations like the World Health Organization, the National Institute of Health, the CDC center for Disease Control, you find the same names.

One of the major backers is available in a Gates Foundation. Another one you're going to see a lot is our military, the Department of Defense and DARPA. Okay, that's another part of the Pentagon. So you're seeing this over and over and over again. Okay, so we know there's entities military, but let's look at the people, the Bill and Melinda Gates, that are so outspoken because why would they really be so interested in vaccines? Because they're part of the software technology. They're Technic people. They have no background in health or science or epidemiology.

Well, if you look at and they're the ones backing and financing millions and millions of dollars into these companies, so they have a vested interest so they can make money because you make money off of vaccines. That's one thing. But looking at the family history, you see that Bill Gates family has been very much involved with eugenics that is population control of the world. And he does believe that there are too many people in the world and that to make a healthy world. We need to depopulate.

Okay, well, who is he to say who stays and who goes? And he is on video stating that by new vaccines, the technology of new vaccines, we can depopulate. He believe by now.

The world today has 6.8 billion people that's headed up to about 9 billion. Now, if we do a really great job on new vaccines, health care, reproductive health services, we could lower that by perhaps ten or.

Okay, who is he to decide who stayed and who goes again. So this is very concerning. We need to look at the motivations behind someone pushing this. Is that their motivation. Another thing to know is the Bill and Melinda Gates Foundation and the DARPA, again, that Pentagon agency. They actually have been funding something called gene drive research or gene extinction technology. And it's just like you might believe it is it's about extinction or species extinction. They propose to use this, and they have funded many millions of dollars to this to exterminate a species from the planet.

They are proposing to do this with the mosquitoes and Africa and other things and plants again, did anyone talk about this but these two agencies, so if they can go ahead and exterminate a species from the planet that could extrapolate to humans, what if there's a species were race? They don't like that's a potential. And how do they do this? They do it by neurogenesis mutating a gene through. Again, this word called transfection transfection is a way to manipulate the DNA. And then you can mutate a gene that's actually the same technology they're using in this new vaccine.

They're for covid 19 guys, we have to know the motivation behind these vaccines. What is the intent? Why are they rushing it? Also, you need to know that with the vaccines, if we get hurt, if people are killed, if people are paralyzed, if they get cancer, not one person has recourse. We cannot sue. We don't have a voice because they passed in the United States to mandate to protect the vaccine manufacturers and anyone who administers them from all liability, all liability. So first of all, there's 1986 vaccine act looked that up that already exempted them from any liability then just to really cover their tracks in February of 2020.

Alex's Are, when the United States went ahead and passed an Emergency Prepared Is Act, which included complete zero liability for all the vaccine manufacturers once again. So there's two mandates. And also through the Emergency Preparedness Act, they can force vaccinations on a population if there is no known treatment for the infection. So this goes into the next thing of there is a treatment. There have been doctor stepping forward. We do know of different treatments. In fact, Hydroxy Clark, when you might have heard about that, but it's being banned from certain protocols.

Doctors, including my state, Georgia, where I'm licensed the pharmacies. Now can you turn down our prescriptions for hydroxy clorin at their leisure? We never heard this before. Why is a doctor being prevented from prescribing a treatment that we know that can help with this virus and even prevent it? I don't know. I'm thinking maybe it's the money. Maybe it's an agenda for the vaccines, because what is the other reason? Doctors, American frontline doctors. They went up and they were talking about their experiences. They had such success with the hydroxychloroquine.

They went in front of Congress or they had a public hearing and then they were silenced. Their website went down. One of the doctors was fired, another one who has been slandered. There were repercussions for speaking out.

So for everybody who tuned in yesterday, I understand it went to over 20 million views on YouTube, Google or YouTube, Facebook and Twitter. And then they deleted us and canceled us. They deleted us and cancelled it. We're tired of seeing patients die in front of us. And we're even more upset to see the Spider web of fear that is enveloping the American public. When there's a treatment, there's a cure, when there's a treatment, then there's a cure. Sure, people have been afraid to say that. But what else do you call it?

If you give somebody the medication early and it aborts the disease process and it aborts the disease process. We're coming after you, big tech. We're coming after you. We won't be silent. The First Amendment is first for a reason. Okay. You want silence? If we come back every day, we'll come back every day. There's thousands of us. And by the way, the tide of evidence for hydroxy core wood being safe. And the solution for Americans is the tsunami. The tide of evidence for hydroxyproline safe and the solution for Americans.

It's a tsunami.

The drug has been shown in endemic areas where they use it all the time. There's no covet, almost zero. Who's the number one person for infectious disease in the world. And has he weighed in on this? He has his name's DiDio re. He's treated 4000 people with this drug and have fabulous results. Hydroxy clerical works withholding it from patients is shameful. We're here to bring you that news. Hydroxy Chlorian works.

I'm Dr. Stella Manuel I'm a pediatrician and an emergency room physician. Houston, Texas I come from a different perspective. I'm from Cameron originally, and I went to medical school in Nigeria. We took hydroxyl Queen. We too came Queen, flower Queen and all the Queens. So I'm kind of used to these medications. So when they started saying it was not, it was dangerous hours like work because we give it to babies, pregnant women, elderly people. Everybody takes it. Hydroxyproline works. I have treated over 350 patients, asthmatics, diabetics, all people 92 year or 70 something.

80 something. We've not had one death. America, you don't need to be afraid. Covin has a cure. You don't need to be afraid. Covid has prevention.

It is important that people realize there's a concerted effort to keep the safety and efficacy of hydroxy core on away from the American people. And we need to speak up. All of us do thank you.

The only way you, as the American people will get this drug is if you demand it, you're going to have to write to your congressman, your governor's tweet President Trump, you've got to demand it. If you demand it, you'll get it and you can save your life and many others do it.

Thank you so much. Yes, let's do that. Let's all tweet the present demand hydroxychloroquine. What is our hashtag Hydro work and work? Hashtag hydroxy. Corin works right to the President.

In the Netherlands, there are 1700 think about that number for 1 second, 1700 medical doctors and medical professionals, backed up by tens of thousands of people from a public who wrote a letter to the government with two messages. First of all, they said it is extremely concerning that doctors and scientists are being silenced, shamed and blamed for speaking out about the existing, effective, safe, cheap and widely available treatments against covert 19. And they say, why are governments banning these effective, cheap and safe treatments while pushing and actually rushing towards an unsafe, untested vaccine?

Governments are now already giving billions of dollars and euros and all sorts of currency to this vaccine developers. The amounts of money are crazy and it's your money you works for. It is being used to kill you, to control you to oppress you. In Spain, 600 medical doctors came forward and they said in the national press conference, the whole Corona pandemic is one political plan. It has been planned with the political purpose. In Germany, over 1500 medical doctors, scientists and top professionals came out in a national press conference and they said the following.

We see the doctors in a a few really out that the official story with covering Teen is true. In fact, we have a lot of evidence that it is a fake story all over the world to speak to all my medical colleagues. We see the evidence and we see.

Well.

That'S now the question is we have the medical evidence that this is a scam, that this is not true. Simply not true. And we need to ask ourselves, why, why?

Why?

Why?

Okay.

And we need to ask ourselves who got the profit out of this. If you look behind the curtains, you see. Ok, this medical story with covered. 19. We have the medical facts. It's scam. It's fake. So we need to ask who gets the benefit out of this and who has got the power to create this fake? Well, and the target this are you, you the citizens, you and the economy. It's about the economy. So Cook 19, seems to be just the cover story.

In the Netherlands, there was a doctor, Rob Elands, a general Positioner. He saw every single Corona patient recover in four days using hydroxychloroquine in combination with the sink. He was corrected. He had to stop healing those people immediately or he would lose his medical license. He then made a video in which he explained he made a list of all the existing effective treatments for covid 19. It had tens of thousands of views in a couple of hours. Youtube removed it. They do not want you and humanity to know that there are indeed existing, safe, effective treatments for Coat 19 Dr.

David Brownstein from Michigan. He treated over 120 Krona patients. Some were dying, some literally. We're on the edge of death.

One of our patients couldn't breathe. He was lying in bed, couldn't grab a glass of water because it was too weak. As soon as he started nebulizing hydrogen peroxide in iodine, he made a dramatic recovery. He made a dramatic recovery.

Doctor Richard Droplets from Texas. He has been responsible for establishing quality health care for the whole state of Texas. This is a man who is recognized as a quality medical expert. He has been treating over 500 connotations since the beginning of the pandemic with a very cheap and very simple asthma medicine that has been around for decades.

Let me tell you what I've heard from patients when I started using this. They tell me I feel better during the first treatment, and so their chest pain goes away, their shortness of breath goes away, their fever breaks. I'll give you an example. I have a patient who has two kinds of cancer. She calls me after five days of being flat on her back in her house and the bed can't get out of bed. Fever won't break for five days, she says. I heard you on the radio and would you please help me?

It's on a Friday. She says my granddaughter tested positive today.

And I think I have it.

And I said, I'm sure you do with all the symptoms you're describing. She is currently fighting two forms of Lymphoma. She's on chemotherapy right now. She just had radiation a month before for the Lymphoma. She should die according to what you hear from the CDC and World Health Organization. But I gave her that treatment that night. In the morning, her fever had broke. She had her first good night's sleep over the weekend. She recovers on Monday, she works an eight hour day. She's symptom free. She has her two consecutive negative tests that's secure.

She's symptom free. She has her two consecutive negative tests that's secure. Let's see here.

Okay.

Can you see the name of the drug again?

You destinies. Is it Dean inhaler it's an inhaler.

These are just a few examples. There are treatments. There are cures that they are being suppressed. They are being hidden from you. The media is working together as one to lie to all of humanity because they all want this single thing, vaccinate all of humanity, something that will be so disastrous. It is impossible to express this in our English vocabulary. Dr. Kaimada expressed a few things. She will say a final word of warning at the end of this video. But I want to encourage you to sign up at the website.

Stop Word control. Com because you will receive so much more information, so much more revelations, so much more empowering truth that will enable you to defend your life, defend your family, defend your nation. We are in a critical time in history. What is happening now is unprecedented on the website. Stop World control.

Com.

You can find an article with dozens of facts that show without a shadow of a doubt that this pandemic has been planned. It was organized and it's being orchestrated. There have been events to practice for it. It has been written out in scenarios. This is crazy. You can all find it and see it with your own eyes on Stop World control. Com I encourage you to become a voice of freedom, to become a voice of truth. So many people discover this kind of truth and then they just sit down and are discouraged or fearful or angry, or they choose for denial.

That doesn't help anyone. You have the power to transform your world. We together. If we stand up as one. If we start sharing this truth, sharing this video sharing the website Top Road Control sharing every reliable quality resources that can awaken humanity. Then we can become a raging roar that is unstoppable. And no billionaire can fight against humanity when it rises up in a fullness of who they truly are. So I encourage you. Go to the website. Stop World Control. There's a download link where you can download Flyers and memes and posters so you can spread this website around.

Okay, so everyone please hear our words and hear the message. Right now we are facing something that could change humanity going from humanity 1.0 to humanity. Two point and it might sound really meat. We could have maybe some ability, superhuman abilities if we start connecting to this. 2.0. This artificial intelligence. But I'm here to tell you that I don't think it would be like you seen the Sci-Fi movies. I think it would be something that would take away autonomy or freedom our ability to be sovereign human souls.

So please think about this and do your critical research and your own critical thinking. And then we need to unify our voices around the world, and we need to stand up for our rights or human rights and with our voice together. We have power because the people that are in charge of our health right now and power the position are not out in our best interest. We are not going by scientific methodology good, sound science. Why is that? Why are they introducing technologies that they're not talking about on the major media?

What are they hiding? So we need to join together and have one voice and be unified.

