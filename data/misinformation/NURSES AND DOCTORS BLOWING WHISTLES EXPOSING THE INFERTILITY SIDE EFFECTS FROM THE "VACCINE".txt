Over 700,000 people now have contracted COVID after getting the vaccine. So for one, what's the point of getting the vaccine? And two, maybe the vaccine was making you sick. I have a friend that just got the second vaccine, those unfortunately, some people you just can't talk to and he was sick all weekend, like sicker than a dog from the vaccine. So it's like it's going to get you sick or you're going to get Covin anyways. Why take the risk? You know, I mean, there was also some leaks.

There was also some leaked documents, too, from one of the vaccine companies about how the vaccine that was causing the blood clots. There's actually some leak documents. I don't have to go back and find them. But there are some leak documents that actually leaked out of the CDC confirming the blood clot research that they found, and they were trying to hide it until these documents were leaked onto the internet. But what I'm getting to is there's a lot they're not telling us, and it's for a good reason.

They don't want all this out, but they still want us to get the vaccine.

It's even worse. It's even worse than the way you're saying, you guys, she is exposing the fact that people are getting contact faxed. So what's happening is that people husbands who haven't been vaccinated are getting effects from their wives who have been vaccinated. Women are having crazy menstrual cycles. I think this other nurse talks. She says that one of the, like a ten year old girl is having two periods in a month. It's just insane with what's happened happening. So again, sorry.

How would this transfer clarify a little bit? Would this be like, are they transferring it sexually? Is that getting to the man?

You know what? He refused.

Serious.

Well, that's something that's important. But the dude woke up. What they said is the dude fell asleep next to her and then woke up with bruises all over himself. And apparently one of these doctors is saying, now, one of these doctors are saying that this dude, sorry, guys, we're getting a little graphic here, but this is serious stuff. It's important people reproductive systems are being fucked with.

You talked about the worms. Rather they're parasites, or rather they're AI. How do we know they're not in the vaccine? They're microscopic. And once they're in there, who knows what the hell they're doing?

They keep saying they keep talking about this chip. Bill Gates is so excited, he's foaming at the mouth to get this chip in everybody. He's all he wants to do. This son of a bitch.

Let's listen to this and see what she ation of people women who have come in contact with and men. I have men too, who have come in contact with people who have had this back. And I'm saying it this way. So I don't take my video down, have suddenly become covered in strange bruises. Women have had as young as ten years old, ten year old starting their periods early, eleven year olds getting two periods in a month suddenly from being around, people who have had this done to them.

People getting this.

This is science fiction insanity.

If this Vere migraines disrupted sleep patterns, people having clothed the size of their fists, people that were in menopause for years suddenly having severe periods with grapefruit size blood clots. This is happening to all kinds of people. Men that are their spouse had the vaccine and they go to bed at night and sleep next to their spouse. Wake up covered in bruises, countless testimonies. If you go to my website, truth. Unmasked. Org and click on, stay away. And then it says warning. You can see a video of a doctor and his name is there.

He's explaining this process to you and another woman who's giving you this warning.

Even if they're just around that something is happening with their periods. We're having women miss their periods were having women have the most excruciating periods of their life to the point where they're bleeding so profusely that it is completely out of character. Okay, women who are in menopause have gotten their period back. And in women's health care doctors, I'm not a doctor. So you know, I'm a holistic reproductive practitioner, Dula, etc. But in this community, something that's well known is that if a woman bleeds and she is postmenopausal that it is cancer.

So something is going.

What the fuck on?

Please send this message to every woman that, you know, this is an outside. Okay, this isn't about conspiracy theories. This is about standing up for the health of humanity. And I am willing to stand up here on my soapbox and beg for women's rights and talk about this day and night. I will stand up for you because something is happening behind the scenes and they're coming after women's health. Also, I read another article that it is significantly dropping men's sperm counts. Okay, being in the fertility community, something that I've been reading is that men have gone to get the sperm test tested after receiving this and something is going on because their sperm count is lowering significantly.

Sorry, I'm sorry, everybody, we have to laugh about things because this is so insane. It goes forever. We're not going to listen to all of them. There are so many of these. But go ahead.

I was just going to say it sounds like this has Bill Gates written all over it. I mean, everything we just heard, what is it all have in common? It all has to do with depopulation being able to continue the population. It's all about population control. It has Bill Gates written all over it.

I mean, it's children of men. What is that stupid show on Amazon Prime utopia Utopia. It's about Bill Gates character who basically makes it so women are infertile. That's what he sees.

So many people between the ages of 18 and 26 that are getting this vaccine, and they have no idea the whole future out of them. They have no idea what it's doing to their body.

And mostly young women, mostly young women. They believe it. They believe that it's all real. They believe in the mask, they believe in the mandates. They believe they believe that there's some crazy virus killing everybody when it's all a fucking lie. That's my opinion. But it's just really a damn shame. And this is where the doctor exposes everything and kind of talks in depth about what it is and what he says is specifically this. He talks about how basically what this whole thing is is all it's trying to do because they don't have there's no evidence of an actual protein of covet that's been argued for the tooth and nail for the last two weeks now, people have been trying to expose this as a thing that's like they haven't been able to produce an isolated version of Covet.

They've asked for it for several times. The CDC can't even produce this anyway. So the doctor says that they're not able to even assess that it's COVID. It's something that they think is COVID. That's a protein they call it a spike protein, which is what we see, the spike protein. And that's what this thing does. That's what the stupid vaccine does. That's a vaccine. It does. It creates a spike protein in you so that your body produces the antibodies. What happens in what they're unable to know yet, because we don't know because there haven't been enough test done is that it may continue to create more and more of the spike protein, and it may never stop.

And so it's going to continue. So our body will continuously make the antibodies grow. And it's this never ending cycle. And that's what he says right here.

Oh, that's very different than once we're referring to here. As Tiffany said, there might be some shedding going on because people in contact with people who have been vaccinated, but they haven't been vaccinated themselves are developing symptoms. So how can we possibly explain that?

Thank you, Maureen and Tiffany. Well, first of all, when studies are done on injections that are thought to be vaccines, we sometimes need 710 or even 15 years to really understand what the injection 15 years does to the body and what it does.

15 years, one year, same ordinate to four months.

We got this.

The fuck. Everybody I talked to thinks that this thing is oh, it's fine. They shotgun it. They see what is the word. They fast tracked it, and they made it all the necessary precautions and everything. They didn't do this for money.

We'll play in simple. Every single vaccine that's ever been created has to go through at least a six month period of what I like to call guinea pig trials. If they did, the guinea pig trials, we wouldn't have the vaccines yet. So guess what. You're the guinea pigs.

Yeah, well, they actually did. A lot of people have said that they did many guinea pigs, and they all fucking died. That's really what happened. All the animals that were tested in this, which were predominantly guinea pigs in this, and they all died from it.

And the guinea pig turns green, explodes, falls off the table, and they Mark it down as a success.

Oh, look, the legs are still moving. It's a success.

And so there's automatically this assumption that when the authorities say these injections are safe, that we actually have adequate data and adequate observational data to understand whether or not these injections are safe. The bottom line is we don't have enough data to understand safety. The other thing is that we are made to believe in the public eye that this is a vaccine against a viral infection. So the entire world is thinking that this is a vaccine to protect us against SARS Kobe to viral infection. And when you have a vaccine that's supposed to be effective as a vaccine, you're supposed to have antibody immunity against the SARS CoV two virus.

And that's never been evaluated with these injections to whether or not we have antibody immunity to a SARS CoV two virus.

So a lot of these people that are dying from the vaccine could literally be dying from what they're calling is COVID because it's supposed to have this protein in it. But they're just being killed because they don't have any immunity to it. That's my speculation. I'm not a doctor. That's my speculation. I'm not giving advice. I personally will not never take this vaccine. They will have to kill me before I will take any of this bullshit.

Exactly.

Instead, this is the point I wanted to make.

It we have is the genetic information of what is believed to be a piece of the SARS CoV two virus.

So it's not even confirmed that it's an actual piece of the virus. That's the point that I want to drive home. Anyway, this is incredibly informative stuff. I'm going to do an edit of all these videos and put them on the channel. Please subscribe to the channel. Subscribe to the Sex Freedom Channel. And anyway, we'll move on from this because this stuff is scary. It's freaky. And my sister said it's anecdotal so that's fine. I mean, it is anecdotal if you look at it, they're just a bunch of people, but there's a lot of them saying this.

And according to that one nurse, she's just saying literally that so many people are coming to her clinic, and a lot of people are reporting this. Several one of the nurses was saying that she was telling she was saying, oh, you had the vaccine. Sorry. You can't come to my fucking clinic. They're telling people who've had the vaccines, they don't want them there because it's it's giving people contractual. They're having contractual. Anyway, I don't recommend taking this thing. This thing is an experimental gene therapy. It's not a vaccine.

They had so many people. I have exposed us as not being a vaccine, and I'm not an anti VACR. I've had vaccines for everything else when I was a kid, and when I worked in a hospital, I worked in a hospital in my early 20s. I got all of those vaccines reach done. And I'm not an actor. I'm not an anti vaxxer at all. We just know that this is obviously not a vaccine, and that's my opinion anyway. All right.

I'm in the same boat. I got vaccines. I wasn't worried about it. I used to think the government was actually looking out for my well being in safety. But when you combine everything wrong with Covet and you combine them with everything going wrong with the vaccine, and you combine the forced Musling of human beings that going on for way more than an hour, way more than a year. And every time Fauci's asked, he just keeps backing it up. We'll be dumb. In 2021, I will be be due by 2022.

By the way, you get a vaccine, you get two vaccines, you're still going to have to wear a mask. You still got the social distance, the new normal. You compile that with the election. That was just rigged.

