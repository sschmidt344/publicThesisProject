I'm going to cover a lot of information in this video. But the two topics that I want to focus on are this magnetism phenomenon, the EMF readings, that type of thing. And then this flood of reports that the vaccine appears to be targeting the reproductive system, particularly in women. And like I always say, in my thesis, which is the theme of all of my videos and channels and podcasts. The one thing, the mysteries of the universe, that there are no mysteries. That word mystery, an anomaly comes from a lack of information.

It seems magical. It all seems mysterious. Oh, it's a phenomenon. What? It doesn't make sense. Magnetism, EMF readings, reproductive system problems. None of this makes any sense. The thrombosis, the lack of platelets, all of that. Well, it does. It makes perfect sense. You guys know what we've talked about with these Nano technologies over the last several years that we would expect to see this transhumanist movement, this nanoparticulate movement. We would expect to see these things as it unfolds, but even not even going into the fringe of that sort of talk.

But just a mainstream medical publication. The peerreviewed articles, the inventors of the technologies. I want to show you the documents, the actual clinical studies, the actual patents, and the inventors of the technologies telling, explaining it to you out of their own mouth so you can see with your own eyes. This is not my opinion. I'm going to play the clips of the doctors explaining this data. It's not mysterious. The reason it seems so like disconnected. There's. This communication gap in the mainstream is all because of the censorship they have censored this information.

And that, too, has been proven by the Facebook whistleblower that just came out with Project Veritas. The documents literally said that even if the information was true, they were to censor it, any content that would discourage people from taking part in human experimentation, all of the Bible prophecy aside, all of the conspiracy theories aside, all of our suppositions aside, the one thing we know for a fact is that we do not know because there have been no long term studies. We don't know what the consequences of this gene therapy will be.

Nine years down the road, five years down the road, three years down the road. But I'm going to play the clips here of what the doctors say the consequences will be from the data they have so far. It's terrifying. So for these non medical professionals, these people, like Mark Zuckerberg or Twitter, Jack or Bill Gates, you know, making medical decisions for all of humanity by saying, don't show them any side effects, don't show them any claims of death, don't show them any reason that might discourage them from taking part in this human experiment, even if they're true, even if the evidence is true, censor it.

Don't show them that right there. You know, everything has to have a warning label on it. Now I can't even buy a pillow without a warning label on it. A cigarette pack has to have a warning label on it. Every drug has to have a list of all the side effects. You take a drug to quit smoking, and it's like this might give you seizures, kill you, make you suicidal. I do all this, but, hey, it might help you quit smoking. They have to list these side effects.

And yet these people are going against our own medical laws, saying, do not tell people about the side effects, even if they're don't tell them about the side effects. Also, they have forbidden us to get a second opinion. They've assigned us a Fouche. They've assigned us a medical care provider that the whole world, you know, has to listen to. Or Tedros with the World Health Organization, who is not a medical doctor. They said this is where you get your medical advice. And if you want a second opinion, they say, no.

Absolutely not. They literally banned these doctors from speaking from giving anybody a second opinion. Aside from what Pouchy says, or Tedros, who is not even a medical professional, they have been censoring all of the frontline doctors from giving their medical advice, which is what they are trained to do. Okay, so I want to show you some of these doctors and what they're saying. I wanna start with Dr. Robert Malone. He is the actual inventor of the messenger RNA vaccine technology. So this is no small thing.

I'm also gonna show you the top scientist from Pfizer.

I'm.

Gonna show you some incredibly, incredibly, not just talented, but esteemed in the field. These are the inventors of the technology, and they have dire warnings for humanity. This is so monumental. Please share this. I know they won't allow it on a lot of social media. That's why I'm posting this only on my Patreon a bit. Shoot and rumble the alternate platforms, but please share this with your family. If they are thinking about getting the vaccine or if they've gotten it, but they've only gotten one dose, or even if they've gotten both doses.

But they haven't gone into the booster program yet because come flu season, when they roll out the next part of the Si off to bring us to the next level. In this, it has to be layered in through multiple injections because the amount of nanoparticles in this. Well, I'll let the doctors tell you in comparison, it's mind blowing. Please share this with your loved ones. If you love them, tell them. Even if it means they'll reject you and hurt you or be rude to you or whatever, take it.

Make the personal sacrifice and tell them anyway, we have to do all that we can do because the long term consequences of this. You know what? I'm not even going to say it up front because it'll sound crazy. Let me let them lay out this case and then I'll come in with commentary at the end. I just want to show you a handful of terms before I start playing the clips so that we're all on the same page. When they are talking about these lipid delivery systems, they are talking about Nano particles.

These are mRNA lipid nanoparticles. You can see this is CDC. Gov. Nihat. Pouchy. Gov these are all from PubMed, all official websites. This is real. When you hear them talk about these lipid delivery systems, these are one type of nanoparticle. Likewise, when you hear the terms transfection or Magneto affection, these are delivering mechanisms using magnetic fields to concentrate particles and to cause them to target nucleic acid. So we're talking about DNA and RNA. So there's a reason why this is gene therapy. This is not a vaccine.

This is gene therapy. The whole thing they're using to sell it to us is they're saying that if we get all modify you, then you can create your own vaccine instead of us putting a vaccine in you, you can create your own vaccine. And Bill Gates, he sold the idea of you being your own pharmacy. They're not going to stop with just producing these proteins that they want to implant all over our body. They want to be able to through frequency, send another signal, another computer program, another RNA program to that same mechanism that they're inserting now and then you can produce whatever chemical they want you to produce.

They say what they say, what Bill Gates say. You can make your own aspirin or whatever. So you can see with this pollen Magneto affection for genetic modification. That's what I'm talking about is this is the GMO technology that they've always used to make all of these GMO crops and everything for us. This isn't anything fringe. You can go back and read these articles back in 2011 and before. So this isn't a new technology. It's new for them to use it in humans. I mean, we know they've been spraying it over us in chemtrails and all kinds of stuff for a long time.

But this is the first time that openly they've duped all of humanity into saying will take part in transhumanism. Go ahead and inject us with this super magnetic nanoparticle delivery system and genetically modify us. And of course, the term hydrogel, because when people see this on the vaccine insert on the ingredients, it doesn't sound like anything nanoparticles or anything. So it's just hydrogel. It's like something used in vaccines. Well, it's not. Hydrogel is another term for these nanotechnology biosensors, which here you can go hydrogel Dano particles now composites.

Blah blah, blah, blah, blah, hydrogel biosensor. Again, you can see this is NIH. Gov this is PubMed. These are real nanotechnology biosensors, which is especially interesting in light of Bill Gates cryptocurrency body activity data system that it includes biosensors. You have to have the bio sensors in the body that detects your vital signs and all of this stuff. So it was filed. Interestingly enough, right before the COVID pandemic and the publication date was March of 2020, which is right when we started our lockdowns and stuff and people started working from home, which is what this eventually is.

This is the abstract for the part of the Mark of the Beast system. How you'll get your paycheck because they're going to change us all over to digital currency. They're going to do away with all the paper money. Who that dirty paper money, the spreads disease. And they're going to transfer us all over into this digital system that they have been planning forever. I mean, that's what ID 2020. They told us. They told us everybody will have a digital ID starting in 2020, 2020 and Agenda 21 by 2021.

This is Agenda 21. This is what they hope to do. We'll start seeing roadblocks at the end of this year. They'll start sectioning off. You won't be able to cross state lines if you don't have your vaccine passport or your digital ID permission slip and all that. So they told us exactly how they were going to roll this out on the timeline. They had to roll it out, and that's exactly what we're seeing. But anyway, I just wanted you to keep this in mind when we're talking about them inserting nanotechnology biosensors in us because you can see the silver tongues.

Devils are giving us a load of other excuses why they're putting this in us. The hydrogel biosensor technology was developed with the aim of serving as an early identification system for infectious disease outbreaks such as during pandemics and biological attacks. It's sensitive enough to identify signs of illness a few days before symptoms appear. So that's just one of the things we've heard. But anyway, those are terms that I wanted to kind of explain upfront and to show everybody up front that they're real because I'll be playing close from the mainstream media and they're like, this is faceless conspiracy there's.

This is not real. This is silliness, and these people are crazy. That's ridiculous, that there would be anything magnetic in a vaccine. Well, except right here. Pubmed NIH. Gov talks all about magnetic Nano particles as the delivery system and these DNA and RNA vaccines. So they're outright lying to us.

If the data is anything like what you present, then the interpretation is quite clear and absolutely startling. So I will just say, I believe that what you pointed to is accurate and alarming is an understatement. I would invite people to look at it for themselves. I would invite people to show it to others, and most importantly, I would invite them to pay very close attention to what is said in response. You will get a lot of pushback when you show this article to people, but that pushback is not substantive in my experience.

It's emotional where I think the term for a lot of the blowback is gas lighting they'll look at it for about 30 seconds and say, I don't believe this. And it's the cognitive dissonance. It's the people who took the blue pill and are living in the matrix and everything is good. And this can't possibly be true. And they immediately write it off. But they can't cite anything that is wrong with it. They can't argue any of the points, and they'll delve into at home attacks.

Do you want to outline the basics, like the bullet point, the top ten bullet points that people ought to be aware of that you're calling attention to in your article.

It's so hard, because it's just this unbelievable story. And let me just tell you how how however it works. Okay. Sure. So it got started when my carpet cleaner came and he was wearing a mask and I said, hey, we're all vaccinating and take it off. And he said, I just I got the Pfizer vaccine, and I had a heart attack two minutes later. And so he spent the night in the hospital, and he says he's kind of recovering from it. And I said, how are you doing now?

And he said, still feeling bad about it. And he mentioned also that his wife also her hand, she hold a glass like this, and her hand would be shaking like this, and the water would be coming out. And she was perfect before. So I have two people. We have very few people in my house because of code. So the fish guy, the carpet cleaner and the house cleaner. So to have not just one person but him and his wife, that is like lightning striking twice in the same place.

And so if it was really a safe vaccine, then what I just saw was impossible. So that's kind of what triggered me off on this. And then I had been on this Canadian physicians call with Doctor Byron Brittle, and he showed this chart. And he said, normally, when you vaccinate someone, the vaccine in goes in the shoulder and it stays in the shoulder in the shoulder area. And what happens is the antibodies are generated and they attacked this antigen in the shoulder, and it wipes it out.

And we're good. But what Byron Brittle did is he did a FOIA request to the Japanese government to look at the biodistribution data. And what he discovered is that it doesn't stay in the shoulder where we all thought it should stay. It goes throughout your entire body. It goes to your brain, into your heart.

So that's two problems. One problem is it isn't where it's supposed to be ideal.

Where we thought it was. We thought it was for and the other previous vaccine.

The other problem, and this is your area of expertise. Is that what these vaccines do is they encode spike protein alone, so that the immune system will learn to recognize spike protein. And we'll catch it quickly when one is confronted with covet. But the spike protein itself, we now know, is very dangerous. And cytotoxic. Is that a fair description?

More than fair. And I alerted the FDA about this risk. Months and months and months ago.

The FDA knew about the biodistribution. And one of the scary things is that the biodistribution like peaks in your ovaries.

And so just to nail the point home, they did know they did. Now I did send in manuscripts. So in their determination, was it's a formless spike protein that they didn't think that that was sufficient documentation of the risk that spike was biologically active, right.

Okay. Do not believe the spike was biologically. Octoo was the big mistake.

We now know the spike protein is very dangerous.

Here it is biology.

We also know. So if it was very dangerous, but it did what the brochure on these vaccine says it should do, which is Lodge in the member brain of the cells that are doing the transcribing, it would be a lot less destructive. Right.

I think that's fair. And you're right. It's not just the documentation about the vaccine. It's the prior literature that was put out by the people that developed it that developed these clones. So they were aware that there was a risk of spike being biologically active in having adverse events if it did not stay stuck to the cells that were transfected, that got the RNA and made it. And they used a genetic engineering method of putting a transmembrane domain on it to ensure that it stayed anchored and stayed put.

And they did limited nonclinical studies to say, Looks like it stays stuck. We engineered it to stay stuck.

They did.

And they published that. Here's the thing special engineered is that that's generally not good enough in a non clinical data package. So before we get a product released to use and humans in the normal situation where we're not in a rush, we have some really rigorous tests that have to be done in animals and revealing that spike gets cleaved off of express cells and becomes free is something that absolutely should have been known and understood well before this ever gotten put into humans. So I'll just leave it at that.

All right.

Well, that's the smoking.

And by the way, we have no problems at all with mRNA vaccines. It's just this particular vaccine because of the spike protein, and because it leaves off the cell and it goes throughout your body and your brain, your heart, anywhere that you can have these symptoms that are so varied, whether it's a 16 year old who can't talk or see 48 hours after injection or someone who's had shakes or someone who's my carpet cleaner, Tim, if he's disabled now, he's lost $30,000 in terms of his cost.

And he's going in for an epidural because he's in such pain. And these satisfies the victims of this vaccine. They're not being able to tell their story at the press because Tim says, I try to tell my story and the press ignores him. And we have these these groups that aren't able to get attention aren't able to get attention.

A large group of people who believe that they have suffered negative consequences was removed from Facebook.

So there's very clearly an effort to 2000 users just wiped off the planet.

Right.

If this is a perfectly safe.

The Censoring has been going on for well over a year. It's well documented. It's unequivocal. And they were in my argument is that by implementing ing Censoring, what we're doing is making it so that signals can't be detected, people's voices can't be heard.

Okay, let me break in for just a second. I just wanted to point out when he said signals can't be detected. He's not just being wordy to sound intellectual signals is the term that they use, like an animal trials. How he was saying earlier that they would have known that the spike protein didn't cleave, that it was free radical, that it would move throughout the body. They would have known that had they done animal trials, they would have seen the signal in clinical trials. And these intense studies that usually take a decade or so for a vaccine, signals are the next clue for the thing that you have to investigate as you troubleshoot along to develop a product that is safe.

So in the context of censorship, what they are saying is that this is a human experiment. You know, this is an experimental that's the only approval they got is an EUA, that's for emergency use because it is still experimental. So we are to be gathering data. All this is an experiment. This is a human experiment, and we are to be gathering data and looking for signals. So by them, Censoring, this isn't anything to do with propaganda in the scientific sense. They're saying that we can't conduct studies medical studies because they won't let people report their side effects.

They won't let them give us the signals, so we know what to look for and how to make it better and all of that. So this has nothing to do with the Facebook and censorship, in the sense that we talk a lot about propaganda. This is about medical malpractice. This is about fraudulent medical reports, which we've talked about in past videos that Fouche and Berks and others have been accused of falsifying data in the past during their HIV research. So this is a really big deal.

What they're saying here, this censorship that is not allowing the signals in the human trials to be reported is tantamount to genocide, essentially.

And my argument is that by implementing Censoring, what we're doing is making it so that signals can't be detected, people's voices can't be heard. And I'm of the opinion that we have to have free and open discussion, and we have to have full disclosure of risks. And when you censor that you cannot have that.

Ah, it changes everybody's mindset into believing it's safe and effective. And when you have that you don't report these adverse events as being associated with that is because he they want me to fly in the pan. You don't think it's possible, right. So when a doctor sees a miscarriage and says, I've never seen a baby like this in my entire career where it's so bloody and the brain is split in half and so forth, she's never seen anything like it. And the woman was vaccinated a month ago, and she's 25 weeks pregnant.

When you have that sort of thing, the doctor says, Well, it can't be the vaccine because the vaccine is safe. And so they say, Well, it must be a genetic defect, and they report it as a genetic defect, and they don't even report it into the VAR system. So we never see any of these safety signals because everybody is trained to think that it's safe. It couldn't have been a vaccine.

So that's this group thing problem. And I think it is a real problem.

Okay. So they discussed the problem already about this particular protein and that it does not leave. They had expected it to cleave to the cell, and it does not. And there's no off switch. And then it's just floods your body and then your antibodies go crazy. And this is what they call these autoimmune disorders. I know, because I have one. It took five doctors to diagnose it. They say it's psoriasis, but they never did diagnose it. They just finally gave up and said, Psoriasis, because that's a skin rash and gave me the steroid injections or whatever to stop my body from fighting it basically, which is a bad thing because you want to expel it.

But the weird thing about it that they couldn't figure out or hadn't seen at that point. But my doctor, who admitted me to the ICU, he said, I've seen the weirdest increase in this over the last year, was trying to figure it out. He was a really good doctor, but they don't teach this stuff in the manuals, you know. But the thing that was happening on my skin was geometric. So it would come up round. And then it would turn into a square, a perfect square.

But every single time, 100% of the time, it wasn't a rash like poison Ivy or something where it's just dots, like round. It would appear as a pinpoint around dot on the skin. And then as it emerged, it would turn into a square, a perfect square. And then the square would turn into a Hexagon, every single one of them as they came out. And I didn't have any of the Morgellons symptoms with the carbon nanotubes actually coming out of the skin. But I had the geometry of it.

And as most people know, as in carbon nanotubes, when they self assemble, this is the geometry that they naturally self assemble into these six sided Hexagon shapes that link together. And back then, I didn't know either. I was just amazed by the fact that it was geometric. What could this possibly be on my skin? That isn't like what you would see in a normal rash. It was producing geometric shapes. And even then, when they did finally just slap a label on it to get rid of me, I asked them, what is psoriasis?

What causes psoriasis? And they said, Well, nobody really knows what causes psoriasis. It's just your body is very it has too much of an immune system. So it's just constantly fighting its own cells. And I'm like, that doesn't make sense. That sounds like my body is fighting something. And you just don't know what it is. And they were like, well, nobody knows. Just different things trigger it. And it just comes in cycles and shut up and go away. Here's some pregnant zone or here's some steroids, so your body will stop fighting the Nano infection or whatever.

Okay, thanks for all your big Pharma wisdom. Here's just $35,000. Now give me my tubas. Those of you who know what more gallons diseases and understand what these Nano technologies are and have dealt with these nanotechnology infections before. You know what I'm talking about. And that was one of the things because the doctors didn't know. That's why it took five. They put me in ICU because of my lungs. So I was asking them how kind of skin disorder affect my lungs like this. This isn't making sense.

Is diagnosis isn't making sense. What do you mean, psoriasis? And it's doing this to my lungs as well. And they explained it like, well, there's inflammation. You know how psoriatic arthritis, because it also attacks the joints and settles in the joints. And it attacks so many different organs. And they did that sort of thing. And I'm bringing this up for a reason. Keep this in mind. But what about my lungs? It was similar to what people are reporting from the spike protein, the actual COVID disease.

They put me in ICU because I could not draw breath. I could not get breath. It was like I couldn't get air in. It was the weirdest thing. I didn't have pneumonia. I didn't have anything. And when they took the X rays, they saw these types of structures which scared them in my lungs. So there would be a spot and there would be these tentacles coming off of it. So their initial thought when I was in the ICU that it must be cancer. And this isn't my video to talk about my journey with natural medicine and all of this.

You guys know this picture here is a clip from Stanford University about these self assembling particles. This, like in a petri dish using the introduction of these electromagnetic fields, and it causes them. This is a video, and I showed it in my past videos on these subjects. But I don't want to get too far off in the weeds are too advanced for people who are just they've been oblivious. All they know is what the mainstream media has told them. I don't want to scare them off by jumping into the deep end into these Nano technologies and stuff that we discussed for years and years and years.

It'd be like showing up for the final exam and you never went to four years of College. So I'll just leave it at that. But the reason that I brought it up here just to touch base on it is to kind of get an Avenue of thought going, a side rail of thought going as we go through this information. That the first problem is the spike protein itself. Not just that it doesn't leave and it goes everywhere. But that one of the major challenges with all of the different vaccine companies was to stabilize the spike protein.

The AstraZeneca trial overseas, they used part of a protein from the HIV virus and had to halt their vaccine trial because people started testing positive for HIV, which is a subject for a whole other video where you could go down the rabbit hole about pouches. That's what he made his career on 35 years falsifying data of studying the HIV virus, patenting protein and protein encapsulations that make people asymptomatic because it will be receivable without rejection by the body and all of that type of thing. And knowing what we know now, in hindsight, it makes you wonder, why did they try to put part of an HIV protein knowing that AIDS acquired immune deficiency is the opposite of what we've been talking about here that introducing this other nanotechnology causes autoimmune disease, which means overactive immune system.

And then they're using protein fragments that suppress the immune system. So that's a whole other video. But going with the official story, AstraZeneca and the Australian trial said that they used it to stabilize the spike protein. Here's a little bit of the science article. Spike plays a central role in the stars cope to infecting cells folding and reconfiguring. Remember that folding and reconfiguring as it goes through the process of attaching to a receptor protein so the virus confuse the molecular clamp approach. Blah blah, blah, blah blah.

Exposes parts of the spike hidden in its post fusion form and may generate a more robust antibody response. See, they're messing around molecularly with molecular nanotechnologies, messing around with causing the spy protein to fold and reconfigure how they think they want it. The point I wanted to make right here. This is the takeaway. Folding and reconfiguring of these proteins is what they're messing around with, to quote, unquote stabilize. And then they go through all of this feel about how they do that. How can they keep this spike protein from changing shape?

And so they use all these different techniques. The UQ team found that a small 80 amino acid fragment of an HIV protein could provide stability. So when you are purposely producing partial proteins, malformed proteins, that's probably on disease. You guys, that's mad cow disease. These are proteins in the body that don't fold, right? They're misfolded proteins because of these tiny mutations. So we know already that the spike protein is not acting the way they expected it to. It's not cleaning to the cell walls. It's doing things that they didn't expect.

And now we know that the whole deal with using the spike protein was messing around with how it folds and forms. And we have no long term studies. And this is what we're talking about, what I was saying about essentially a genocide, that mad cow disease, prion disease is incurable, causes trouble walking, abnormal behavior. You guys know what mad cow he is, but this is the thing. The time between infection and the onset of symptoms is generally four to five years. So when you hear some of the prognosis, but these doctors are going to give, like, crazy sounding stuff like, of the vaccinated, people could possibly die in four to five years.

Like the inventor of this mRNA vaccine technology said at the beginning of this video. That is the problem. When people hear things like that, they just shut down. They're like, that's impossible. The boob tube told us that it's safe, but you try to talk to them and say, what do you mean? How could they say that? That you have to be able to logic. They can't tell you that it's safe because it hasn't been tested four to five years. How could they possibly tell you that these misfolded proteins are going to affect you this way or that way, five years from now, that they could kill you four years from now?

Like there's no long term studies. So it's impossible that you could have that information. How can you believe people that ball face lie to you that it is impossible. They could even have that data. It does not exist. But they shut down. So I'm just showing you some of these possibilities. I'm not saying this is what it is. I'm just trying to put this in context. So as I place some more clips from these various doctors and experts that hopefully you could keep an open mind enough.

Or, you know, the people that you're trying to Minister to, to wake up, that they can stay open mind enough to just stick around and hear us out to the end of the video, just hear us out. You listen to everything they say on their stupid commercials, and they don't have any science or data to back it up. No long term studies. And you do everything they say. Just give us your ear for a couple of hours. I'm talking doctors and scientists give them your okay, so let's get back to the second red flag.

Aside from the protein altogether.

Let'S talk about the nanotechnology delivery system Byram brittle did a freedom of action request of the Japanese government for the Fizer data, and he got a biodistribution chart. And I'm pretty sure I linked to the original data in my paper. This is a graph, and people have double checked and triple checked this.

It's a summary grab vacation.

Some regrets.

I did review the primary data, and I concur that the primary data is consistent with the graph that you have nicely summarized.

Right. And so what you see from this graph is that when you inject in the shoulder.

Do you want to walk through to teach the listener how it shows that it shows what you're just saying.

Some people will just listen to what we're looking at. A graph of different lines of concentration of spike protein on various issues now.

Yes, it's the lipid nanoparticle.

It's live in nanoparticle, which is the delivery mechanism.

It is well, for people at home, it's the box. It's the box in which the mRNA for the drug.

The mRNA is what causes the manufacturer of the spike protein. But if you find the lipid nanoparticles that tells you that your drug got to this location, right.

It's the delivery box. Effectively, it's the FedEx delivery box that has the mRNA.

And so you're exactly right. This is the lipid component that does the delivery.

Okay. I'm sure that that was clear to a lot of people, but there was quite a bit of back and forth right there. First he said spike protein, and then they were talking about the messenger RNA and the lipid Nano particles. This chart is just about the lipid Nano particles. This is the delivery system. This only detects and tracks the lipid Nano particles and where they headed in what concentrations. And you'll see, as we go forward, it sure seems like they're programmed to target very specific parts of the body.

Now they will give them the benefit of the doubt and say that these may be unforeseen attractions to these areas, but from we predicted this. So this very thing about the reproductive system. We did several entire videos on the reproductive system. If you go over to my website, Extreme Reality check. Com, scroll down just a little ways. You'll see this COVID-19 and vaccine warnings over a year ago, we put up these videos, and this one talks a lot about the infertility and sterilization and the spontaneous abortion drugs that they used overseas in third world countries.

This one here the new whistleblower. Let me see. Let me go over to the yeah, here new whistleblowers, sterility RH negative blood lines. The final solution. Yeah. That one is on my YouTube page two. They didn't delete that one yet. For some reason. 38 minutes over there. We talked specifically about this. Like I said, it's such a mystery to everybody else to see these quote, side effects. It's still my opinion, obviously, that these are intended effects.

Okay, so good. So what we've got here are different lines that tell you over time, from a quarter of an hour to 48 hours where you find what the concentration in various tissues are. And you've got some strong signals here. You've got it in whole blood. Not surprisingly, over the first 4 hours. In other words, it's moving around. It's circulating.

That end of itself is unusual. Should be. So the forgive me just to get a little more precise. We've administered by needle into the deltoid of this complex, and you're just tracking the lipid part of it. Now, there's also an RNA part of it. But as you say, it quickly moves into the blood plasma is the self refraction that's the yellow mustard line and the Gray line is whole blood. So that includes the cellular part of blood. Okay, carry on.

Okay. And then we get lines that rise. So all of these things decline as basically this diffuses through the body, which actually actually is not what you would hope. You would hope it would stay in the arm, but it's basically diffusing through the body. So concentrations are dropping as it gets more and more evenly distributed. And then concentrations are rising conspicuously in two places. As we close in on 48 hours, one of them is in the ovaries, where it goes sky high.

That's really frightened anybody has looked at the status, says what?

Yeah, that is a very frightening.

And the cognitive dissonance between what the CDC says is that this is safe for pregnant women.

Right.

This is perfectly safe. And it's on the CDC website. It's unbelievable.

At some level, it's not safe for women at all. This right.

I entreat before we interpret the data.

Let's make sure your listeners understand it okay.

So the ovaries show a high concentration for whatever reason, it's ending up in the ovaries of referentially. Yes, the lipid is ending up there, and then the other place that we have a signal, which I think suggests someone something we need to worry farther down the road. You tell me, Robert, if I'm on the right track here or not, but the fact that it shows up concentrating in bone marrow bad news, actually, that suggests that you could end up with I'm not saying this is going to happen, but I'm saying we need to look for something like leukemia is showing up here because of their creation in bone marrow.

I know from other work that it also seems to show up, preferentially in lymph nodes, which raises the question of whether or not Lymphomas might be created. In any case, these are possible long term effects that we have no way of knowing that don't arrive because these things have not been interected into people for more than a year.

So we have two adverse events, signals that are starting to become a parent. My friends at the FDA tell me that are relevant to what you're saying. You're focusing on bone marrow. So typically a plastic anemia leukemia, lymphoma those kinds of things. If there is going to be a signal, we might see it six months, three years, nine years. Hard to tell, because this is a progression of cancer that often requires multiple mutations. So let's just park that is it is a risk that should be monitored.

What was it you said somebody is beginning to see a signal of something, but I didn't get what it was.

Yeah. So I was going to get into that.

Okay.

There's two signals that are starting to we don't have time to go into the nuance of how come it takes so long for them to figure out what's going on. But one of them is thrown beside ipedia that's not having the platelets are manufactured in the bone marrow, which are right now we're focusing on bone marrow signals.

Okay. Before I forget thrombocytopenia. Now remember that Florida doctor who died right after he took the Pfizer vaccine and, oh, they investigated and they said his natural causes. So here we have the coroner's report, right? Because the mainstream media says, oh, these people aren't dying of the vaccine. It's just coincidence he died of natural causes. Okay, here's the coroner's report for the Florida doctor who died right after receiving the vaccine. Michael's death in January was investigated by the Florida Department of Health and federal Centers for Disease Control and Prevention.

Samples from an autopsy were sent to the CDC. The investigative team concluded that Michael died from complications of immune thrombocytopenia, otherwise known as ITP a disorder that can prevent blood from clotting and cause internal bleeding. And they deemed that of natural causes. When we just heard the inventor of the messenger RNA vaccine technology say that from his colleagues at the FDA, they said that thrombocytopenia the lack of platelets is one, a signal, something that they have seen. And from what we've talked about so far, surely you're starting to see a pattern form that it's not just something that's going to happen three years from now, five years from now, these long term consequences, we're talking about it's happening now.

Tens of thousands of people are dying within days, weeks, hours, minutes, sometimes of taking these gene therapy injections you saw within 48 hours on the graph they're showing you this is the actual data. Within 48 hours, it went directly and targeted the bone marrow where the blood platelets are made. It's textbook timeline. But yet they use that as an excuse. They're like, well, he didn't die until what, like, ten days after he had the injection, so it couldn't be the injection. But his textbook timeline. We saw the progression on the grass at 48 hours, his wife hiding the doctor.

We'll talk about the doctor again. His wife, Heidi, said that he had begun experiencing strange symptoms several days, just days after receiving the dose, including small spots on his hands and feet. And by a few days later, he was admitted to the ICU and that's when they diagnosed him with the thrombocytopenia. Then two days before the last resort surgery, he got a hemorrhagic stroke caused by the lack of platelets.

Thrombocytopenia is one of them. Another one that is very hard to understand. That's starting to come up in the database is reactivation of latent viruses. Okay, so the single shingles is an example of that. But there are many others. And there's something in the literature about reactivation of latent human retroviruses.

Again, this is no mystery. This is no anomalous finding we've known for many years. Retroviruses can be reactivated by electromagnetic fields. This ties into the Magneto affection delivery system, the nanotechnology delivery system. And it ties into all of these EMF readings that people are having in their body with a self replica. Because it's self replicating. It spreads anyway. In 1997, exposure to a 50 Hz electromagnetic field induces activation of the Epstein Barr virus genome and latently infected human lymphoid cells. When you're fully informed, everything makes sense.

And that's why this is a crime against humanity. What the mainstream media is doing, what Mark Zuckerberg and Facebook are doing by censoring these people trying to get the information out. And as their documents say, even if it's true, or even if it's probably true, still censor it because we don't want anybody to hesitate to take this deadly gene therapy. This is despicable. People should be allowed to make informed decisions. And this data also confirms what we've been saying about the blood types and germline genetic modification, which, of course, is what Magneto affection is used for for GMO crops.

In the seeds at the seed line, like in the ovaries, the eggs in the ovaries.

They say it is not that nobody's magnetic, right. Well, they know that they're magnetic, and they know why it is. And I'm getting ready to show you exactly that. It's called Magneto fiction. Magnetic Nano particles. This imagery here will help you get the idea a lot better. These are cotton spores or cotton eggs. You might say seeds. Okay. And these seeds have little. What they've got labeled here is aperture in the little openings. Okay. In the seeds. And what they've come to figure out is that if they take a magnetic nanoparticle that they can attach to it, see all these little things sticking off over here, they can attach DNA to it.

Instructions for the development of whatever. They're going to stick it in. Step two. Pollen. Magneto fiction. Okay, so you got your cotton pollen and you got the nanosize magnets with the mRNA on it, and then they put it in with the cotton pollen and it goes in through the apertures. Okay. The little holes in the seed. And once it gets inside the seed, it releases the DNA. And then, of course, you can plant that seed, and then it grows and produces more seed. And then you can harvest that seed.

And that seed will then be a transgenic cotton, geo engineered transgenic like transgender, like the altering of the original code the plant had. But this does not just apply to plants. They have been admitting all the way back since about 2000 that they are doing this in animals and humans to the point that it's admitted at this point in the studies that I'm going to show you in a minute that it's used in the the industry. Okay. Magnet affection delivers DNA in experimental malaria, right? Says today's drug delivery.

Word of the day is Magneto fiction, which essentially is the use of magnetic fields to build up a concentration of magnetic nanoparticles and guide them to target cells. Michael Burger, riding in Nano Mert work, discusses a particular kind of magnetic nanoparticle called the superparamagnetic iron oxide nanoparticles. Spy on kind reminds me of Prion.

I wonder why it also kind of reminds me of spy on exactly what it says. Spy on, you know, spy on like that patent that I just showed you from Bill Gates earlier in this video, where they literally intend on putting biosensors nanoparticle biosensors inside our body to monitor everything, all of these different nanotechnologies being layered into us. It's not just one mechanism. It's a system is a system, a nanotechnology system being created inside us. You know, when they want to not just monitor us, they want us to be the pharmaceutical manufacturer.

They want to just be able to hit us with a frequency. And these mechanisms inside will cause us to create our own medicines internally. I mean, think about that. Here's some more of that article talking about just this. This is not conspiracy theory. This is the science. Like I say, these ain't Grandpa's robots. These are nanobots. They are connecting and activating nerve cells. You guys know, I've shown all of the experiments and patents ad nauseum over the last several years, but here they're talking about. They have, for example, already been used to regulate blood glucose levels in mice, but involve multiple components which have to be introduced separately.

They're building a machine inside us, in my humble opinion. And according to all of the peer reviewed medical documents and experiments, that's exactly what they've been doing in animals. Already an animal trials for a long time, like, say, to control diabetes. This is what they're talking about. They layer in all of these Nano components separately, and then they make the body produce what they want it to produce. And everybody says, oh, isn't that great? Isn't transhumanism great that they put all these robots, all these, these little tiny magnets all through us.

And then now we have the system where they can just shoot radio waves at us and we'll be healed. It'll be wonderful. Well, they can also control your brain. Let's be clear. These same systems can connect to nerve cells in the brain. So somebody at a distance can literally interface with the circuits of your brain. You know, all these years, people are like, oh, it's just so silly. The little devil little angel on your shoulder, like you're having thoughts from the enemy, but you're also having thoughts from God, and you have to choose.

Well, now they're saying you can have thoughts from other people through radio waves. Researchers in the United States have developed a new method for controlling the brain circuits associated with complex animal behaviors, using genetic entering to create a magnetized protein. You guys, the spike protein was chosen. This was chosen. This is a biological weapon, in my humble opinion, to create a magnetized protein that activates specific groups of nerve cells from a distance. Several earlier studies have shown that nerve cell proteins, which are activated by heat and mechanical pressure, can be genetically engineered, like through a gene therapy, maybe so that they become sensitive to radio waves and magnetic fields by attaching them to an iron storing protein called ferritin or to inorganic paramagnetic nanoparticles.

These methods represent an important advance. They have, for example, already been used to regulate blood glucose levels and mice. Blah, blah, blah, blah, blah. So anyway, you get the point. And if you don't, please go back and watch any of the videos on my channel or on my website that has the word nanoparticle or nanotechnology or virus or vaccine in the title line. Please, please go and get caught up. This can save your life. This isn't just for entertainment anyway. This particular kind of magnetic nanoparticle called the superparamagnetic iron oxide nanoparticles spy on has been a promising candidate for targeted gene delivery using Magneto section.

So these are targeted delivery mechanisms. And thus far in this presentation, I've already shown you the actual data from the actual government showing that they are targeting the seed, the reproductive system, the ovaries, these tiny magnets that are delivering their payload to the ovaries to the eggs. You guys, it will affect our next generation. This is not transgenic cotton. This is transhumanism genetically modified organisms. Humans, our children, the next generation of human, and they're doing it against our will without our knowledge. I'm not being hyperbolic when I say a crime against humanity.

Please help us get this information out. We all know what the mainstream media does. Gas, lighting and making a mockery and not showing the people the truth. This other evidence. They don't have any evidence of long term studies because it doesn't exist. There aren't any. But we do have evidence that I just showed you and I'll continue to show you. So the fact that they are actively censoring us, as the Facebook whistleblower showed us, they're actively censoring this information that I'm trying to share with you right now.

I'm trying to share the doctors are these are all clips from doctors in here. These are medical publications. The doctors are telling you this and they won't let doctors give you sound medical advice or a second opinion or anything. This isn't an accident. This is an agenda to feed a false narrative to the public that this is safe. It's like proven safe. Everybody knows that safe and effective. Safe and effective, safe and effective. And any doctor who wants to show you the actual data, they're crazy conspiracy theorists on a baseless claim.

And just, you know, this is propaganda, and it's pinpoint accuracy. And you know what occurred to me, seeing the data now that has come out just so far. This explains why if you watch this video, the last one I was able to post on YouTube before they locked me out of YouTube and Facebook, this would have an extreme reality check. I'm in cyber jail for thought crimes. Remember how I was saying in that video that I'm like, why would these seem so unrelated? Why would they be removing content that I put up so many years ago?

Like, this is content, and they didn't seem to be related. One of them was a Jeffrey Epstein video. And the other one was the scariest reality ever. The zombie apocalypse, bio hacking the human brain. And in fact, that was years ago. I was talking about these technologies, the development of these technologies. And we used the Stephen King novel cell. They move out of it here about that sort of zombie apocalypse where they use the cell phone. They sent the signal, the frequency signal through the cell phones, and it clicked this nanotechnology on this neural interface.

So we use that as an example and then just went through and talked about the science. So I was like, these seem so unrelated. Jeffrey Epstein and this why would all these be erased the same day at the same time? You could tell they sent an algorithm through, caught everything. But now, in hindsight, it all makes sense. It clicked. That's what they're hiding. And that's what we say. You can tell what they're doing. They're so apparent. You can tell what they're doing by what they're hiding, every algorithm that sweeps through on every purge, the exact information that they delete.

What are they hiding? Right. It's easy to find out because leading very specific information every time. So this time, it's obviously about what what we were just talking about. This particular Jeffrey Epstein video wasn't about the pedestal. So they left that up. That's mainstream news. What this video was about was shocking. Jeffrey Epstein connections you won't see in the news. And in that video, we traced his financial contributions. It was about the funding, his charitable foundation. Right. And how he was funding different projects at different universities.

And here's a screenshot from in that video where we were specifically talking about him funneling money to this ECOG technology through different Chinese companies and all of that electro and philosophy and critical neurophysiology. I know these are all big words. And that's why I make these videos, because I have a passion to read through peer reviewed articles and medical documents and patents. And I want to try to put all of that information together in one place so people can see what's going on and to articulate it in a way that's not so worthy that most people don't want to listen.

I know a lot of people still don't want to listen, but I think all of you who are still here listening. Thank you. Anyway, this eco system is specifically almost what we were talking about with the Stephen King Sell movie. If you read all of the documents right here, finally, I will discuss a thought experiment of launching a venture company that sells ECOG dogs whose minds owners can read with smartphones. So they're talking about needing this high density wireless technology. This is the Wi Fi system to switch over from WiFi to WiFi.

You guys know we've talked about for years, and, of course, the five G infrastructure, this web of infrastructure they're trying to weave over us. That is necessary to run the smart cities, to run the smart grid. And apparently the new Bluetooth devices like living dogs and living humans anyway. So they will use that with this nanotechnology implant, this neural interface with the circuits of the brain. This is exactly what we were just talking about with this Magneto fiction technology used to remotely from a distance, access somebody's brain circuits.

These are the experiments with dogs. Epstein was funding all of this. And Bill Gates Abstain Bill Gates. Here's another screenshot from that scene video where we were talking about his funding of the Harvard professors Martin Novak and Charles Lever. Now Martin Novak, director of the program for evolutionary Dynamics. He's a professor of mathematics and biology. Here we have, including the evolution of cooperation and human language, as well as the dynamics of virus infections. This guy specialized in these dynamics, the mix of mathematics with biology, computers and the biologic system through viral infections.

And we know that no vac programs were shut down. They've been shut down. But remember, Charles Lieber was arrested right at the beginning of the Cove thing. Charles Weber was indicted on charges he lied about funding he received from China. So I know a lot of people don't believe in white hats, but somebody's investigating these connections at the same speed that the communists are censoring in this digital book burning that they're censoring all information that we're trying to present here at the same speed. Someone there's good guys somewhere in these agencies because these guys were arrested.

The United States Department of Justice, Harvard University and two Chinese nationals charge in three separate China related cases. This was all right at the beginning of Covet, and these guys all worked in this chemistry Department and all of that. So isn't that fascinating that way before COVID, before anyone had ever heard of COVID, we were talking about this in that Jeffrey Epstein video. That's why they have been deleting videos that have been up for years, and nobody had a problem with community guidelines or cyber bullying or any of these crap excuses that they use all the years that these videos have been up.

They're taken down now because of this, because they don't want us to talk about these connections and this technology because you don't have to be Perry Mason to see this. I mean, any old gumshoe can see that Facebook, these very same people doing the censoring, writing these algorithms to do the digital book burning across the entire Internet. I mean, think about the terrifying implications of what I'm saying, that a couple of agencies are wiping the Internet of things of information that they want to suppress. So conflict of interest wise.

Yeah, of course. Facebook is heavily invested in this research. This exact research go to the Facebook AI research. They have their own website, a Facebook. Com research, or the Facebook reality labs. All of this. They are in the race to dominate this new transhumanist movement, this AI interface, same exact thing with Google. They're heavily invested. They're on the forefront, pioneering edge of this AI research, all of their experiments and research. They've got their own websites, too. I do Google research. And then they have the quantum AI, which, you know, we've talked a lot about with the D wave quantum computers this next era quantum at Google.

So there's obviously a conflict of interest. The very people censoring us from warning humanity about what they're doing to us without our knowledge. The very people hiding that knowledge are the very people the most heavily invested in this exact research. And that's why we face this huge communication gap. And they're able to convince our own neighbors and friends who know us that we're crazy conspiracy theorists or liars or something. They have no understanding that when they use Google search engine, they think they're searching the Internet.

They don't know because it's censored from the search engines. They don't even know this information is out there. There's a huge communication gap. That's what the panel of doctors and scientists and vendors at the beginning of this video, we're trying to say, people, can you try to tell them what is happening and there's such a disconnect because they think they just go to the Google search engine like this. And they're just like, I'm just using a search engine. It would never occur to them that they're not searching the Internet.

The average person has no idea that they are being controlled, and they have no idea what's even going on in the world, because every search they do on the Internet, every device they use, I control. It doesn't matter if you use Google search engine or being that's Microsoft, that's little Gates, the very people who are pushing these gene therapy injections on us under the guise of a vaccine. They're the very same people who control all of our information, what we have access to. Google owns YouTube.

So, I mean, we're in a mess, you guys okay, we'll get back to the transaction, the Magneto section and these magnetic nanoparticle delivery systems in just a minute. But it wasn't quite done talking about the reproductive system and how they target the seed. They're targeting the ovaries, because this the unintended consequences or intended consequences of this could be a dystopian nightmare, sort of like that movie, Children of Men, where exactly this type of thing, an extinction level event had happened. And they had this one woman who was pregnant and everybody was amazed.

And did she hold the cure for this infertility? And so giving them the benefit of the doubt and saying that there could be unintended consequences. We still need to look at that, because if these things are accidental and they were just trying to, like I said, layer in the components of this nanotechnology or this medical technology because they think it's a great idea to be able to produce glucose and produce spike proteins, produce your own vaccines, produce an aspirin, produce whatever drug you're chemical, they want your body to produce from within instead of buying it at a drug store.

Even if you believe they had the best intentions, we still need to discuss that this is a very plausible, unintended consequence because we're already seeing that that's what the researchers at the beginning we're talking about. Doctors are reporting these things as this is like some unseen genetic abnormality that we've ever. And it is genetic, genetically modified. But these people having these miscarriages, the babies are coming out like you said, the one that their brain was ravaged and so were their organs and stuff in a matter of four weeks from the time of exposure, because these things self replicate.

So much so before we move on to more about the magnetism, I want these doctors to explain some more about the fertility issues right here. Okay, here's a quick clip of Dr. Ten Penny talking about these reproductive issues, and she makes a great point. We're talking about there are no long term studies talking about five years, ten years. She's saying, think about this. Let this sink in. There haven't been any nine month studies when you're talking about the gestation of a human child. We don't even have any long term studies like that.

And that's going to come into play when I show you the documents here in a second after this clip. In fact, I'll just keep rolling a few clips after Dr. Ten Penny finishes up with the documents. And you'll see in there that they had concerns, transmission concerns about pregnant women coming in in contact with people who are in the vaccine trial.

The infertility issue high index of suspicion that the answer is yes. However, we're not going to know for another nine to 15 months because we're going to have to watch because we've only been doing these shots now here in the US, about four to five months, or in Canada about that link of time well, somewhere in there, somebody's going to get pregnant. And we're not going to know if the pregnancy weight went down, if this carriage rate went up or down, if whether or not any of that for at least nine months, right?

Probably longer, because if it's a nine month period of time and people are getting pregnant all along there, you probably need to go to 18 months and to do a retrospective analysis on the data to see if there's been any change in the fertility rates. Now what we have seen so far, there was a study I saw maybe six weeks ago. Now saying that there's an increased risk of miscarriage is by 6000%. There was a study that came out within the last four days in the New England Journal of Medicine saying that of the 800 and some women that were in this study, there were 107 of them that received a shot in the first trimester, and 96 of the 107 had miscarriages if they received the shot in the first trimester.

So.

We also know that the spike protein, as we already said, binds to ace receptors. It's job, right. It's like laser find those ace receptors. And with each one of the shots, we are injecting 50 billion particles to be able to create spike proteins, 50 billion with a B. And you get two shots, you get 100 billion particles. And to put that in context, when you get a flu shot, there's about 2 billion viruses, which is still a lot, I think. But this is what is that 50 times that amount.

And if the spike protein can then bind to the spike protein combined to the ace receptors that live on the surface of sperm. And so we don't know what happens when that when that a reset. When it binds the receptor on the surface of the sperm, does it ride like a piggy back on top of it and get transmitted into the vagina? Does it go inside the spike protein or inside of the sperm and disrupt the genetics? Does it go inside the sperm and freeze up the mitochondria?

So there's no energy to make the little tail on the sperm go so that you end up with a sperm immobility problem. And if it does go inside, it matches up with an egg that comes out that also has ace receptors on it. The protein combined to it. So you get an egg with a spike protein, a sperm with a spike protein. If they got together, what is that going to create? Will it create life?

We don't know.

Will go together and start to replicate into a zygote?

We don't know.

Will it turn into a human? We don't know that either. What sort of birth defects are we going to see? Are we going to see, like, so litem babies that were born with arms, legs and and what are we going to see? We don't know. Why don't we know no long term studies.

And I'm of the opinion that we have to have free and open discussion. And we have to have full disclosure of risks.

And when you censor that you cannot have that it changes everybody's mindset into believing it's safe and effective. And when you have that you don't report these adverse events as being associated. So that is because I definitely want to be to fly in the ipad or you don't think it's possible.

Right.

So when a doctor sees a miscarriage and says, I've never seen a baby like this in my entire career where it's so bloody and the brain is split in half and so forth, she's never seen anything like it. And the woman was vaccinated a month ago and she's 25 weeks pregnant. When you have that sort of thing, the doctor says, Well, it can't be the vaccine because the vaccine is safe. And so they say, Well, it must be a genetic defect. And they reported as a genetic defect, and they don't even reported into the VAR system.

Okay. So that's for the vaccinated, the people who injected the Nano particles directly into themselves. But this other phenomenon about the spreading, the shedding, the transmission, it's not quackery. Here are just a handful of articles I put up you can go and verify them all. This has been all over the news and in the science and medical magazines and publications when COVID first broke out, talking about maybe the best way to handle the pandemic is to try these self spreading vaccine face right here. Vaccines of the future could be as contagious as viruses, COVID-19 cure.

Scientists plan to develop self spreading Corona virus vaccine. These are the self replicating Nano technologies that we've been doing videos on for years. So you can go back and watch those. If you want to see all the patents on them, I will sprinkle patents and PubMed the government articles and stuff. Verifying these news articles throughout the rest of this video in the cliffs. So you can go and verify that that it's old technology. These are 2020 articles because of the pandemic. But you'll see that the medical publications and peer reviewed articles that this goes back many, many years.

I think what I know I've at least read medical publications and peer reviewed articles as early as 2014 or so around there. So it's been around a long time. This is real. And then when we see the evidence of it in real life, why would we deny it? I guess it's blind faith in the establishment people really believe, even after all that we've seen with like the Tuskegee experiments with the syphilis and all of the horrible things that the MK ultra experiments with Dr. Cameron and Canada, and of course, also in the United States and everything.

But these are proven things that the government has done and made apologies for. And again, all the evidence is in other videos. I can't just keep replaying it with the President of the United States standing up and giving an apology for the Tuskegee experiments. These are all admitted things. We've had congressional hearings about the MK ultra programs and the radiation experiments on people. And just all of it is these aren't conspiracy theories. These are facts of human history. So, you know, look at what we saw in World War Two and what we've seen in the Gulags and in the concentration camps with the human experiments to say that there aren't any nobody has any ulterior motives and they would never do anything bad.

And, you know, because they're government. Well, what about Mal? What about Stalin? Without Hitler, governments do terrible things all the time. So this blind faith that people have when they see the evidence with their own eyes, they see the shedding, they see the spontaneous abortions happening when they come in contact with people who have had these injections, we see it with our own eyes. We see them talking about it. We see the medical publications, then we see the articles. Then we see it happen in our real lives.

And still, we're like blind faith in the government.

Weeks ago, there were reports of menstrual changes, and this was even in the headlines, menstrual changes to be expected after COVID-19 vaccine during pandemics. As experts, this is really driven by a single person. Her name is The Cape Clancy. She's an associate professor at the University of Illinois, and she put out on Twitter. If anybody was having any issues with their cycle, she found that interesting because one of her focuses was reproductive health and she had a flurry of responses back. It actually caused her her and a colleague to create a quiz to start tracking the menstrual experiences with covid 19 vaccine.

This is out of the University of Illinois because it wasn't really looked at in the trials. And so many people are having issues with this. So what happened from there is they started to become reports of people that have had IUDs or have went through metaphase already starting their cycles. And the interesting part was they haven't received the vaccine. So people were starting a question while I've just been around people that have had the vaccine. And now my cycles are starting to change. Or I've been in menopause for ten years.

And now I'm getting experiences like I'm having my period again, what's going on? And again, they have not taken that vaccine. So that's leading a lot of people that say, what's going on is this shedding, am I being affected by this vaccine somehow? And that's where the investigation really is starting for a lot of people. And as we saw by that montage, it's ended. It's trying to be ended by that corporate media, which is amazing.

I mean, I know we're going to get into because we've had a team of people around the world looking into this, but as soon as you see media and you hear those statements, there's no scientific evidence. There's no approve. This is conspiracy theory. Nobody knows anything about these products, right? I mean, just on a general perspective, I would say that this is why you you needed to do safety trials, which you did not do. You have escaped the safety trials. You have an emergency use authorization. So now we're all speculating on things.

We're seeing random occurrences all over the world. But for them to be able to say that there's no scientific evidence that this is true, where would that scientific evidence be? You're the idiots that are promoting a product that literally weeks into its base. Three safety trials is now being given to everyone around the planet. Where would we look to for that science? The science doesn't exist.

As always. I will put all of the links down in the description box, assuming that you're watching this on a platform where I can put links when I Restream, I don't have any way to put a description in there. So if you're watching on one of those platforms, you won't be able to get to the links that you might go over to one of my other platforms and get the links and read some of these accounts, or at least pause the screen somewhere on here and read some of them.

This is just a handful. Some of them are looser anecdotal evidence. But some of them are very profound encounters, like, say, offices like, say, a dentist office or a medical clinic where everybody in the clinic got the vaccine like except one person, the pregnant woman. And yet immediately within days, she miscarried really profound controlled settings where these people weren't around anybody except, like, their office who were vaccinated. Or there was one case where people like us who would never get this vaccine in a million years went to say a family reunion where they were around family members who had all been vaccinated.

And then again, within 48 hours is carried their baby had a spontaneous abortion. But as Dell Big Tree was just saying about the media and I've sent multiple times in this video about this is a crime against humanity, because now I'm going to play the media clips and their take on this like they don't even believe that we should be able to discuss this amongst ourselves. The gas lights. And you know that's the words chosen by the inventor of the Messenger Hard and a vaccine technology from earlier in the video, he said, that is the word that he would choose gas lighting.

We are talking about what they tell us is a worldwide pandemic and then an experimental gene therapy injection. And we shouldn't be allowed to as citizens of the world to discuss our own medical decisions, to get second opinions, to read articles that is insane, the hubris of these people. But anyway, here's the mainstream media propaganda like Del Big Tree just said it is impossible that they would have the scientific data to tell anyone this is safe and effective. There is no data yet. We are only a few months into this.

Nobody knows what the repercussions of this gene therapy is. So the very fact that they keep telling you that there is no need for any other discussion, no other second opinions. They have told you that this is safe and they got a Crystal ball where they can see ten years into the future. And they can tell you that this is safe. And you know, no, the dad is not in yet. The very fact that they talk like this is the evidence that they're liars or at least that they're inept that they don't understand how science works.

Like you actually have to have data and studies the news about Shedding.

This is all over the news lately. And let's see how it's been framed and covered.

Take a lookat.

Tonight, we are dispelling the myth of vaccine shedding.

The latest anti vac myth.

Vaccine shedding.

One theory we can debug, for short, is this idea of shedding the shot. That's just not how these vaccines work.

Scientific experts say this is the latest in misinformation surrounding vaccines that after getting a dose, you shed modified cell, kind of like a cat, shed their fur, and then that gets on other people.

There have been claims that vaccinated people can cause health issues and others, including pregnant women.

They're going around saying, well, people are shedding the coronavirus, a spike protein, just a spike protein. And that's causing this Paris sterility and all sorts of things. And Jack, that is utter non ship.

There is zero biological link to anything that is injected in the form of a vaccine, to any fluids that go outside of your body to sweat.

Or even from the effective touch a central Alberta business does they're banning anyone who has had the COVID-19 vaccine in the last four weeks from entering their store because of the risk they claim of so called shedding.

It's not supported in science. It's conceptually incoherent, and I think it's a very dangerous message.

Okay, now here's the truth. Here are the documents from Pfizer from their own safety trials talking about how that was actually a concern in the trials transmission to the unvaccinated, especially pregnant women or women in the process of conceiving a child.

Right. And speaking of the safety trials in early 2020, we have some evidence from Pfizer in their COVID-19 vaccine safety trials. This is in their clinical protocols. So we'll start out with this clinical protocol for their COVID-19 vaccines. They have something that's deemed reportable to Pfizer safety within 24 hours of investigator awareness. And this is what the quotes says. This is what is deemed reportable exposure during pregnancy. So the first couple of lines are, I guess, kind of common sense. A male participant who is receiving or has discontinued study intervention.

Now that means the vaccine. The COVID vaccine is being studied from Fizer exposes a female partner prior to around the time of conception, and then a female is found to be pregnant while being exposed or having been exposed to study intervention, which is the vaccine to environmental exposure. So there's a word that we haven't seen before. It's environmental exposure. Okay. Maybe that's just COVID-19 in the environment. But below our examples of environmental exposure during pregnancy, here's where the wording gets kind of interesting. A female family member or healthcare provider reports that she is pregnant after having been exposed to the study intervention by inhalation or skin contact.

Okay. Now we have some new vectors here a male family member or health care provider who has been exposed to the study intervention by inhalation or skin contact, who then exposes his female partner prior to around the time of conception. So now we have a second person exposure. Very interesting, because I thought this was just injectable. Now they're talking about inhalation and skin contact. So this is a website on gene therapy. And this is a site that's run by Novartis, who specializes in gene therapy. A lot of their products do.

And this is an overview of viral vector shedding. That's that adenovirus and Johnson Johnson as what you're saying is.

We'Re looking at gene shedding because essentially this technology that we're calling a vaccination, both Johnson Johnson AstraZeneca really they're just piggybacking on gene therapy, which used the same adenovirus vector technology to put a gene in and send it in, sort of gene slice into your DNA, right.

Right before COVID, these things were labeled. This technology was labeled gene therapy before COVID after COVID. Now we have this vaccination that uses gene therapy. So this is the overview of the viral vector shedding, which is the gene therapy. And this is meant to educate health professionals.

By the way, this website.

It says safety concerns associated with vector shedding is extremely low for replication deficient viral vectors. That is the adenovirus. Then Johnson Johnson vaccine shedding of replication deficient viral vectors is expected to be low of a limited duration and associated with lower potential for lease of infectious viruses. Now we go to 2015, going back to 2015.

By the way, that certainly doesn't say this never happens, which I just heard from the mainstream media news and say, oh, it's preposterous. There's no scientific understanding. That sounds like there's a chance, right?

Yeah. And there is a low chance, not a zero chance.

Okay.

Now, as early as 2015, the FDA produced guidance, industry guidance to track shedding and clinical trials. This was how to design the trials. This was guidance for industry design and analysis of shedding studies for virus or bacteria based gene therapy and on chaotic products in the term shedding that in their document, the term shedding means the release of products from a patient through feces, urine, saliva, nasal fear and geria fluids or through the skin through sores or wounds, and what it does is assessing the potential for transmission to untreated individuals due to shedding our current 2015.

Our current understanding is that in most cases the potential for transmission to the untreated individuals is extremely low. When VBT that bacteria based gene therapy products or oncolytic products are shed because of the derivation, methods and or modifications that are designed to attenuate the product when compared to the parent strain or virus or bacterium. Again, here what does low mean? And when we're talking about the COVID vaccine, as of today, 250,000,000 doses have been given, according to the CDC, so is low is low. So what are we talking about here?

Things Dr. Jane Ruby says that she has a horrific revelation about the truth behind this magnetism and what it is and why it's there. She's on hold and we will get to her momentarily. Britney Galvin, a vaccine injury victim that's been hospitalized in Florida and whose neurologist has confirmed that her serious diagnosis is a direct result of the Moderna injection being referred to as a Socalled Covet vaccine. Falsely. By the way, we have reached out to that neurologist and we hope that he will be brave enough to make an appearance on this program.

Her diagnosis is called Gian Barre syndrome, which is commonly referred to as a rare disorder. The disease forces your body's immune system to first attack your nerves, resulting in weakness and tingling in your extremities at the beginning, but ultimately resulting in full body paralysis and death. Since talking with Brittany on this program, I have received hundreds of emails from victims of the job saying that they too have received this exact diagnosis and when they try to tell the world they're censored, blocked, banned, canceled, they're scared to death for their own lives.

But at the same time have the strength and bravery like Brittany to be concerned about the rest of us, particularly our kids. Tragic social media has also been flooded with countless videos of people sticking metal objects to themselves, an unexplainable phenomenon that at first seemed fringe for medical professionals and scientists who were actually reluctant to associate this apparent magnetism with the COVID shots. You do figure out if this were all Brittney Galvin's Instagram account blew up after she publicly shared several self recorded videos. And then one of her team of doctors who was shocked when they themselves tested her magnet theory and saw that it was indeed real.

I've received so many emails about this magnetism since that interview, I can't even keep up, but nobody with medical credentials really wanted to talk about it. And the comments on Twitter, TikTok, Instagram, Facebook, and all the other platforms were mostly skeptics. Having a hard time believing that these people were credible. We can't say that anymore. It is real, it's scary, and it's becoming undeniable to everyone that would like for you to believe that it's a hoax. Jane Ruby is an international health economist with over 20 years in pharmaceutical research experience.

She's a medical expert, a Stu Peter Show contributor, and she joins us now. Dr. Ruby, this is horrific.

Stewart.

You hit the nail on the head. It's real. We know it's real. There's an entire science in the literature about it, and we also know something else that's really tragic and horrific. It was intentionally added to these injections. Why you're asking me? Because it is a more aggressive delivery mechanism to get it into every cell in your body. It's a process called Magneto affection, and all this information is readily available. You can do the research yourself. You can look at the government's website PubMed to look at the peer reviewed Journal studies that have been published on this particular science.

And what it is, too, is they are using magnetic fields through different chemicals to actually concentrate the the mRNA into people's self. This isn't alignment with everything we've been reporting for weeks now. We just know what and how is behind these magnetic phenomenon where people are having these items are sticking to them. So what it is is it's part of the lipid nanoparticle and it's it's a super delivery system. And there are places in your body that other synthetic DNA or RNA should not be going.

And yet this approach forces the material, the mRNA and codein to force your cells again to make over and over again, these dangerous spike proteins all over your body. It's actually a forced gene delivery system. And I wanted to share with the audience. You're going to be hearing something more and more of something called Spins. It's an acronym, Spins, and it stands for Supra Magnetic Iron Oxide Nanoparticles, where they're putting this magnetic field technology is in and around the lipid nanoparticle envelope that we've also talked about to get this mRNA into your cells.

Why do they need to do that? Because the mRNA is so delicate, so easily degraded. It's another reason why it has to be stored. If you know, the Pfizer shot material has to be stored at at least 70 degrees Fahrenheit below zero. So let me share something else with your audience. There's a company on the Internet and one of many, by the way, I've been doing all my digging. It's called Chemical. It's in Berlin, Germany. They advertise to all kinds of products. There are hundreds of components that you can use to create these magnetic fields around your molecule, right?

You can buy it in 200 microgram vials. It's called Poly Mag. And I want to share with your audience the Disclaimer on Chemicals website. In case you want to buy a little bit of of these magnetic fields and attach them to mRNA before you stick them into the human race. And I quote the company, the Magno section reagents and all of its components are developed, designed, intended and sold for research use only. And here's the frightening parts do they are not to be used for human diagnostic or any drug intended for humans.

And this is in the so called vaccines is these components are what they use, Pfizer and Moderna, at least used in their injections in these vials. This is why people you have to get an informed consent. You must be given the ingredients of anything going into your body and last, but not least, just wait. We're learning more every day.

So.

So you just made a very serious and damning allegation on this program. You just said that this substance was intentionally added to create the substance that's creating this magnetism. How can you substantiate that? There was intent.

Well, it doesn't occur naturally. It had to be added to the lipid nanoparticle. It's the component. We've also heard many experts, in addition to myself, talk about the polyethylene glycol portion of the lipid nanoparticle that makes it a little more fat, Silic or affinity for fat, which normally would just slip it through cell membranes that are very protective. In other words, if you have a water based member, a lot of other things can get through. But there are places in the body that God and nature never wanted any foreign material to get into.

And by magnetizing these lipid nanoparticles with these chemicals, you are creating a super delivery system, a forced delivery system into parts of the body that are not supposed to be. And that's why I've been saying for weeks, this material that is injected into your body from these mRNA in shots is going to every part of your body, every cell in your body. And while you may not have had an initial reaction, that of any concern, you are headed for disaster. Please do not. If you've gotten one, do not get a second one.

If you've gotten the two shot deal, do not get any boosters. This is going to get worse and worse and worse and very soon to.

Okay, so let's get into the actual report of the magnetism, and I'll show a montage here of multiple people doing the magnet test.

And I want to be clear.

Everybody understands that people fake things, kids trying to get tick Tock views, and everybody wanting to make a skit, make a spoof. All this stuff. So always when you're talking about these controversial topics are always going to have the water muddied with people wanting attention or just wanting to play a prank or whatever. And the sad thing is, though, is that the mainstream media will take they'll go find the most ludicrous imbecile on TikTok doing something like this, and then they'll show that on the mainstream news and then gas lines and try to discount all of this rather than doing a report like I'm doing right now showing you the actual doctor, showing you the actual evidence, showing you the papers, the graphs, the patents.

They won't do any actual journalism. They'll just go find something ludicrous, because that's what probably and does so I want to show you this montage of clips from sidewalk surveys where we just went up to people and who had been vaccinated and said, Can we check? And if any of you doubt this, go do that. Every single person just go through the videos that people post us like logic before authority channels like that, just go, you'll see everybody who has gone out and just asked somebody, a member put a clip in here from Walmart, a Walmart employee.

He can't believe that it's this nanotechnology. He thinks that part of the needle broke off in him or something. But I'll put that in here. The point is, I want you to look at these people and use your discernment, see with your own eyes now what the media tells you you saw look at these people, these little old grandmas and grandpas and the shock on their faces. And you'll see that these people are genuine. In fact, like Stew was saying earlier, that's how so many of these doctors woke up.

They didn't believe it either until their patients sat here, put this paper clip on me and the paper clip stuck. And they didn't have any frame of reference about what would cause something like that at all. They're shocked. So if you are having these symptoms and your doctor is at a total loss, please send this video to them. Because all of these other doctors in here, they've already been down that journey. They've been down that road. They've done the research. So at least if nothing else, they can get the names of ten or twelve doctors out of just this 1 hour or two hour little presentation.

And maybe they can contact them because that's what they're doing. If you go over on Frank speech, Michelin Dell's site or on to bit shoot or I think brand new tube has a ton of doctors. In fact, brand new tube was practically set up for these doctors that got unpersoned and deplatformed and censored right in the beginning of this whole pandemic. So you can go over there. Dr. Vernon Coleman's over there. Dr. Colin Barons over there. Of course. Delores chill there's just Sonyas over there. But just tons of doctors.

That was kind of the place where everybody went when they got kicked off of YouTube, hence the name Brand New Tube over on this. So they have tons of groups where these doctors do Zoom calls where you can see tons of doctors talking all about this information. I mean, this is Dr. Christine Northrop. As far as medical doctors on women's reproduction, she's like, one of the most famous in the world. Remember, Oprah Winfrey had her on all the time. She was Oprah's little Darling until she came out and started going on the circuit saying, oh, my goodness, this vaccine is targeting women's ovaries.

And as soon as she started talking about it and using words like bio weapons to describe what was going on. Yeah. Now you don't see her on the mainstream anymore. But I remember when I first started running the used bookstore, all of her books, her books on menopause, her women's bodies, women's wisdom, all of her women's reproductive books. Man, I can't tell you how many thousands of copies of her books I sold him. She sold millions and millions and millions of books. She was the foremost expert on it.

But now she's still the foremost expert on it. But she's saying what we're saying here in this video. So she's been ostracized. But these doctors aren't gone. They just came over here. But you'll see all of these doctors on there doing Zoom calls. It will be like twelve doctors on one video on a Zoom call. All they're talking about this stuff openly, and people don't even know what's going on. The mainstream has been completely kept in the dark about it, even other doctors. But this myth that the science is settled because Pouchy and this handful of mainstream media propagandist doctors that they just keep playing over it's the same, you know, like twelve doctors or two dozen doctors.

That the mainstream piece. These are the experts they keep. They're complicit in this. But, you know, go over to the Great Barrington Declaration and see that almost a million people have signed this. Let's see. Doctors wise. There are over over 40,000 medical doctors and another 17,000 or so medical scientists. Let me see. There should be a signature account somewhere on here. Let me find the tab. There we go. Yeah. Over 430 medical practitioners and over 14, 700 medical and public health scientists who have signed the Great Barrington Declaration saying that.

No, absolutely not. Here's your second opinion. We all of us internationally. All of us doctors are saying this is ludicrous, all of this advice you've been getting from Fouche and this, you know, two dozen doctors that are paraded around on the mainstream media propaganda. We disagree. We all disagree. Tens of thousands of doctors. It's not just the handful of doctors I've shown in this presentation. And all of these doctors, like I said, go to brand new tube, go to bit shoot, go to rumble, hear these doctors, they're brilliant.

They're ahead. They're on the pioneering frontier of this advanced technology, the doctors who don't know what's going on like that poor doctor in Florida who's, like, I'm going to show my patients how safe the vaccine shot is, and he took it, and then he dies. Thrombocytopenia so, you know, just because these people are doctors that they're parading around, the science is not settled, there are other voices, tens of thousands, hundreds of thousands of other medical professionals. So if you're suffering with these symptoms and you have a medical practitioner like that doctor in Florida who perished, show this to them.

Just because they're a medical practitioner and you're a regular person doesn't mean that you can't introduce them to all of these other doctors and scientists. Okay, here's the montage of magnets sticking to people. So you discern with your own eyes. Does this look genuine, or do you think we're all just trying to trick you? We're all just trying to lie to you.

It's going to. It's going to. I don't push it there yet. It's going there by, sir. Yeah, I don't know. Hello. This is a really heavy magnet here. I'll show you on the fridge. Like if you can hear it, if it's heavy in.

Okay.

And then this is my dad's arm. I had it sticking.

There it is.

I feel it.

What the heck?

It's boring. It's pulling. He says there's a here is your proof, I guess.

Real person. Real magnet.

Heavy magnet.

And that crazy.

No, it doesn't stick down there.

No, it's the way it is for the needle in just right there.

Okay.

It's the real thing.

Like.

And then if you turn it over the negative side, it pushes it away. You see, I it's pushing it away. And then when we turn it on to the magnetic side.

Jason, he got the Pfizer. Okay, you got the double dose on the Pfizer. He got it in his right arm. So we think it's right over here. Where is catching?

Wow.

Danny, shake your arm.

What the fuck?

Okay.

Overview the other side.

So see if you can get that off.

Wiggle that.

So it was pretty hard to get it off. Let's go the other side of your own. So if I go here.

Is something we have.

I don't know.

Not women. I bet you like it's.

Things I.

Walk it. Does that fall off? Put it here. Falls off right there, though.

Yeah.

Good.

Yeah.

And this is the first injection or 2nd.

2Nd.

Okay. After your second injection.

It was almost like it was about two weeks ago.

Two weeks ago.

And which one was it Madura? Er. It was Madura. Okay.

I feel like I'm being interviewed now, right? The major had a big reaction to it.

Oh, did you and you get really sick? Do you stay home? It just kind of sore arm.

And that was about it swelled up like a golf.

I did.

Okay.

I think I might have a little piece of metal or something. Sometimes it's easier to find than others.

There you go.

It's the real deal.

I'm just letting it drop until it grabs it.

Oh, my God. All right, let me confirm that this is a magnet. All right. This is a magnet. Alright, just like that. See a magnet?

I go to see the doctor. You're going to be a witness.

Oh, my goodness.

Me.

Okay.

I don't know what's happening right now. I don't know if that's just because I don't know if that's just because. Do you have sunscreen on or anything? I don't know why sticking. Now, have you heard any of these theories going around the internet that there's something in the vaccine that would cause this.

No.

What do you think about this?

Sticking to your arm right now?

I have no idea idea what it is.

Scary.

I don't know.

It's weird.

Yeah, it does stick.

Okay, so how do you feel about this?

I'm honestly care right there.

Okay, I confirm it on the whole the shot hole.

How do you feel about that?

I feel weird. I have a tracking device in my arm from the government, so take it out. I'm not going to lie. I'm kind of scared. I only got it because I wanted to travel. I don't think it could be a tracking device and it's die.

Oh, my goodness.

So I did it too with Alcantar.

It's really sticking.

I'm magnetic.

Is working back.

See shot. It's magnetic.

They put a check in the bitter.

It's kind of freaking me out.

I got my second jab, jab stay or whatever. My second COVID shot, and I was watching all over the internet how people say maintenance their arms and shit. Ever the second vein. And I was like, man.

Bitch, what is a magnet? Are you fucking kidding me? Are you fucking kidding me?

I'm not.

I.

Can see an attachment.

I don't know. Like, I don't know how else to like it's, like, see that it's sticking to my room.

And I'm literally, like, turning my body. So it's like, you know.

Not just like, my sat arm holding it up or whatever. Like, you can see, you know, now I'm gonna take it off. Okay? Fucking magnet. We're going to put it on the fridge. Okay?

Okay.

Looks like I got you to her around. Okay. Magnet again. Six to the fridge. Okay. Okay. You got to find the spot. Crazy. Really crazy. I'm turning my body like this, like planting. So that way you can see that the gravity, you know, is like it's on my arm, not falling off. Ovid vaccine magnet, right? No. Doesn't stay magnet. Here's the spot.

No.

You can feel when it pulls there, Jason, it works.

Move your arm a little bit.

This is a magnet, right?

Put your hand underneath it, mom. So when it falls, it will bust the magnet. Okay, so up there works down here where the shot wasn't at.

You ready? Doesn't work.

Oh, my goodness.

Okay, I'm going to wrap this up. This is already getting longer than I wanted the podcast to be. We're at around the two hour Mark, but I want to play this clip from Doctor Carry Made. She looks very young, but she does have decades of experience. She's worked in multiple countries. She's ran two clinics of her own. She says some things about neurotoxins that are groundbreaking when asked about, is there any cure for this? And I get that question a lot. Are there treatments? And now Dr.

Ten Penny and a lot of these people agree that there aren't presently any treatments for gene therapy. Once that CRISPR cast nine technology is used, and they insert that gene snippet into your genome or into the genome of your offspring. That's a genetic alteration. But as far as for treatment for the nanotechnology infections, they're like I talked about earlier in this video, my battle with the autoimmune disorder from these nanotechnology infections and my walk with using natural health. They've been banning all of the natural health channels like Health Ranger and everybody.

So I'll have to do a complete, separate video on that where I choose my words very carefully for legal reasons. I'm not a medical doctor, and I can't give medical advice, but I can give my testimony of the different treats treatments that I have used that have really been beneficial for me. So I do want to take the time to do that now, that will address the Nano technology portion of it. But obviously, none of those chemicals will address genetic alteration being a genetically modified organism or having your seed, your eggs and sperm affected by that technology genetically.

And she'll talk about one of the treatments that I use, diatomaceous Earth that she's had great success with. I don't know if she talks about it in slip or not, actually, but I know she does at least talk about one interesting treatment. It's a prescription only treatment, you know, like Ivermectin or hydroxychloroquine. It's a chemical called Colster mine that they usually prescribed for high cholesterol and things like that. But I think it's fascinating because this particular prescription drug has magnetic qualities. And she says, you know, she's asked about these home remedies and stuff that people are talking about online.

Does she think any of those will work? And she doesn't have information on the one she's asked about. But she begins to talk about this other prescription drug and the fact that she talks about the magnetic properties of it I thought was worth playing, because I'm of the same persuasion. And I think a lot of answers lie in that Avenue of medicine, you know, in this video that I have right here on the screen, the medical mafia, mysterious deaths of blah, blah, blah, where I talked about the Joe Tippins protocol.

These are all of the suppressed medical cures, not all of them, but a handful of suppressed medical cures for cancer and different things I talked about somewhere midway through, I had a segment about Dr. Robert Beck, and of all things, he was talking about these magnetic treatments and these micro pulse treatments, in fact, the micro pulse treatment that he discovered way back then in the 70s and 80s. I mean, he started his research in World War II era, so earlier than that. But anyway, Dr. Bob back his micro Pulser that he had soda instruments produced during the HIV crisis.

Another one of his treatments was called a magnetic pulse. And as I describe in that video, these are treatments that I myself used and tested. So some of my testimony is in there. But anyway, the point is, Dr. Carry Made is hot on the trail of that science. But she's talking about prescription drugs, chemicals that also have the same types of properties like diet, Tamasha, surf that I talked about is essentially a natural form of Silicon. And we know that Silicon Valley right. The reason that big tech is called Silicon Valley is because of its ability to be a superconductor.

But also when she talks about neurotoxicity in some of these other viruses, and she says that they are Nano, that they have always been nanotechnology. I just wanted to stand up and clap when I heard her say that I've never heard anybody say that before. And you know, that's what we've been talking about in the recess factor deception about blood types, that these antigens and antibodies that we are identifying in the blood, that we just say these are blood types. This is natural. It's always been that way.

Well, now that we see that they have been targeting the bone marrow and that these things can be inserted at the Germ line so things can be passed down generationally like types, it's all starting to make sense. And we've been saying this forever that it's always been nanotechnology. We just haven't been advanced enough to understand that. But we're coming to that place. So to hear Dr. Made say that I thought was awesome. So I want to play that clip.

I tell people if they look at their health app and go look at there's a way to look at the sub categories and sections. You will be floored to see what they can actually monitor through the health app. All they have to do the missing link is the nanotechnology. The missing link is getting us the hydrogel nanotechnology, luciferase crystals, whatever you want to call them all these different terms, names. Once I get that in it's, game over. We are automatically connected, and some people tell me, fine.

I'll get rid of my smartphone. Now we have smart devices everywhere, your television, your microwave, your smart meter, the traffic light. Okay, go in the middle of the jungle like me with nothing around. Guess what? You can't have one person next with the phone. If someone comes close to you, you will light up or you will then be trackable again. This is like the worst Dystopian scifi movies, all pushed into one that they're trying to propose on us, and they're trying to push this through and sneak it through and being deceitful and dishonest and not telling us there's no sun.

And right now, these two months are so important, we all need to stand up, and we all need to say no. We all need to start educating every single person. You see, the taxicab driver, the lithe person in the grocery store.

I don't care.

This is our duty. Once you have the knowledge, it is your duty to start telling people about this. And on my page. I'm listing all these references, and I'm sure Doctor Tenpenny, you are. But if people need, I see they don't know how to look up the patent numbers. I'll provide links or if you're to Michelle and you can spread that so they can actually see all the patents. This is a time to get off and rise up and stand up and start talking because I'm not just saying this just to scare people.

I'm saying this because this is reality as we know it. This is the game changer. This is what we thought. This could happen in the future, but it's happening right now and I won't go down without screaming it from the rooftops and warning everybody. So the next two months, guys, please, please start talking to everybody about it. And please look up these patent numbers. It has the the sensors, your bio sensor inside your body. They want to inject in you. The biosensors then linked to the device, which is your smartphone.

Smartphone is then linked to five G because they need the big bandwidth. Five G, then goes to the cloud where whoever can do whatever. But this is not just one way. It's two way goes down and up. And Dr. Craig Venter, I think I've told you this before he even mentioned and Bill Gates that this technology, this hydrogel can also be on demand drug delivery, meaning the idea of taking a tablet is obsolete because everything is a code. Everything has a pattern, a code, a language.

So instead of aspirin you would, actually, I'm just getting a simplified version. You would spell out aspirin in a genetic code, and that could be then transmitted into your hydrogel, your tech nanobots. They would then code for aspirin inside your body and you would make it. You would literally make your own drug. There's a lot of data on that. Bill Gates is having his little smirk in one of his little interviews. You all make your own, Dr. Evil. Look, you all make your own drugs, then we don't.

Now your bodies will be your own drug factories.

Wow.

Does this go against our tenants of being osteopaths or what?

Right?

I am kidding me. And then who controls that? Who's controlling that? What if you're a rioter or protester or speaking out? You're a threat to society? There's a little buzz and now or just a sedative, it drags you up.

So we need to stop it. Wow. It goes on and on. And even the question has come up a couple of times here about borax.

Boron.

Does boron salt? Does Boron do anything to interrupt the notes? I would say not, but I don't know what to.

I don't think so. If anything people are talking about, I think the answer would lie in a magnetic force. In my opinion, we have to look at something like that. And that's something that I have to research into, because right now, I don't have the answer for that. But I think it's more about magnetic. Or, you know, something interesting, I should say, is Cola termine powder. Are you familiar with that? Okay. I've used that a lot of my practice because micro plasma pneumonia, believe it or not, has nanotechnology on it.

Okay.

It always has. So that's another story. It's neurotoxin nanotechnology. And so it was so hard for me to get rid of this in people's bodies because of the toxicity.

Right.

So when I was researching came across Dr. Shoemaker, and he actually was talking about mold giving off neurotoxins, and he was saying he found that Cola tyramine actually bind because of a magnetic.

Worse.

This is how we describe it. It bound to the neurotoxins, and you would excrete it very safely. So I'm like, well, if it works for those neurotoxins, maybe it would still have the same idea with this micro plasma. And it worked beautifully. So I use that in combination with the doxycycline, and we could successfully clear out the micro plasma pneumonia from people's bodies. So this is something to look into. I use the powder and the canister. So it actually is. It's almost to me. I quit it to a magnet where it's drawing and pulling in these neurotoxins to it, and then you excrete it through your bowel movement.

So you're not having to process the toxin either.

Okay. Well, there's so much more I'd like to say on all of these subjects, and I will in future videos, please go to all the alternative platforms and subscribe and follow their I'm grateful to have survived as long as I have on YouTube. What has been twelve or 1314 years, almost since the beginning of YouTube itself. And I know that millions and millions of people have been purged from it over the last, especially five years or so. So I'm grateful that I have lasted this long. Praise God for his protection, and I hope he gives me some more time, because like I said, over there, I have about a quarter of a million subscribers between the three channels.

And on these alternative platforms, I have a couple thousand, like, seriously, like, two to 4000 subscribers. So please go over there and subscribe on all the bit, shoot and rumble and Patreon and these other sites because I will continue posting. If I disappear from YouTube, I'm still in the world. I will just have to post on the other platforms, and I'll finish all of the other series that we were in the middle of. But I wanted to point out is I closed that this is another one of those secrets hidden in plain sight that I always use as a theme throughout my videos that these are secrets hidden in plain sight.

Biser, the pharmaceutical company, joined forces with bio and tech. Bio and tech. It's exactly the research that we were talking about. With Epstein funding these chemists, biologists, mathematicians, computer gurus, joining biology and technology in this transhumanist movement. So it's right there in the name. This is not a conspiracy theory. It's an open secret hidden in plain sight. Why are all of these computer gurus like Bill Gates? Microsoft, Mark Zuckerberg, Facebook. Why are these tech Giants making medical decisions for the whole world? It reminds me early on of that comedian JP Sears.

He cracks me up where he did that? Skit about that.

My baby sick.

Oh, my Lord.

He is.

You need to get him to a computer programmer. I don't know what I'm gonna do. Let's sit on it and see what this interestfree person thinks you should do.

Dude.

Magic Johnson got AIDS from having sex.

Maybe.

Don't say for anyone to have sex anymore. We need sexual distance.

Did sure.

Climate change is getting worse. We need to do something. I got it. We should shut down. All these is brilliant, sir. I'll get right down on that. He's really sick.

So I'm calling you. I'm an appointment at the Apple store.

Laughter is the best medicine, right? So on that note, I'll close this out. I love you guys. I love you so much. Hang in there. I know it is so hard being ostracized and rejected and constantly called names, even being labeled as not just a crazy Cook, but now a domestic terrorist. You know, to be a conservative or a Christian. Now they literally want to criminalize us instead of just demonic. So I know it's tough, but know that God loves you. Stand strong. Standing truth. We knew this was coming.

The Bible prophecies warned us that these things would come upon the whole world. But the Bible prophecies also promised us the God wins in the end, and that those who endure to the end shall be saved. Stay close to Jesus Christ. If you don't know Jesus Christ, there's always a link down in the description box of all of my videos. Because this thing that's coming is so big, you're not going to be able to save yourself. You're going to need a savior. And we have one.

That's the good news. I love you guys. God bless you and your families.

