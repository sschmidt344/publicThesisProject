Good afternoon. It's Friday, the 4 December 2020, just after 01:00. Welcome to UK Column News, your host today, Patrick Henningson, myself, Brian Gerrish, Cold Day today, Patrick. We've had a bit of snow on dark more. So maybe that sets the Christmas theme a bit, but of course, more important things happening were to be vaccinated.

Well, this is our key to freedom, Brian. Our key to liberation. We're told by the politicians or is the vaccine coming up over the horizon like a dawn over the horizon as Man Hancock, the health Secretary, said recently in an interview. Now, this is with The Good Morning Britain with Piers Morgan is the host. I know that's one of your favorite TV presenters.

I'm afraid he's not. No, I'd like to see him taken to task on a number of subjects.

So we're going to play a couple of clips now of this interview with Matt Hancock. And I'm just going to say before we preface this, Brian, this is an all out, full court press on vaccines across all media for the last week. And they're really pushing hard. And so they're really looking for agents of influence, media celebrities and so forth to get on board with the program with the propaganda bandwagon.

Right. We're gonna have a little look at the BBC a bit later on this subject.

So first let's start off with an impassioned speech by Matt Hancock, the health Secretary on the floor of the House of Commons recently. Let's go ahead and look at this.

We talk a lot of the outbreak in Liverpool and how that great city has had a terrible outbreak and got it under control. This means more to me than I can say, because last month, my step grandfather, Derek Court covered there. And on the 18 November, he died in my family, as in so many others, we've lost a loving husband, a father, a grandfather to this awful disease. So from the bottom of my heart, I want to say thank you to everyone in Liverpool, forgetting this awful virus under control, it's down by four fifths in Liverpool.

That's what we can do if we work together in a spirit of common humanity. We've got to beat this.

Adam adaptive speaker.

We've got to beat it together.

I was very moved by that health Secretary and I want to send Barb, everyone here our deepest condolences to you. I and to your family. Tell us about your step grandfather, Derek.

Well, Derek was my stepsisters stepfather and I have a complicated, messy and loving family and with one big extended family really sadly. Well, he caught coronavirus in November, and then he passed away and it's just awfully.

And what are your first impressions on that, Brian?

I think it's a pathetic play that he's putting across very badly. The faked emotion is not coming across well at all. Boris Johnson looking at him, lovingly there from the benches as if this was some amazing story being delivered. We have, according to the public reports, over 400 elderly people died in care homes as a result of lockdown. Not one word of compassion shown for those elderly people in Westminster. But Matt Hancock can come up with this story about a step away for the truth. I think we'll discover what I mean by that in a minute.

And we are supposed to believe that this is real news. I just simply do not believe this.

You brought it the key point, Brian, which is that the main demographic affected by the pandemic or by Covin, it's overwhelmingly in one specific, at risk vulnerable, high vulnerability demographic, not the general public, not the general population. And yet they're claiming that their circuit breaker and Liverpool cut infections by four fifth. Are they really making this claim publicly government?

Well, they are because the government's going to make any claim is making any claim it wants to. At the moment, the truth has gone out the window. It's simply claim off to claim about COVID and the policy to deal with civic.

So absolutely. I'm trying to work out the lineage. First on the Commons floor, he said, Matt Hancock, it was my step grandfather. Then with Piers Morgan there on the new segment, it's his stepsisters stepfather. And then the Daily Mail would take a look at this. They did a story on this, and apparently, according to The Daily Mail, it's the second husband of his stepfather ex wife. So not exactly a direct family there. And they went to great lengths here, including a family tree chart here, Brian, to sort of try to explain how this was, in fact, his step grandfather.

A week or so ago, Matt Hancock there was a picture of Matt Hancock alongside one of his friends that had just got a huge contract by some mysterious interaction. His neighbor, his neighbor and the two of them were looking extremely happy. Now, maybe that was a photograph from some time ago. I don't think it was so we seem to have had an amazing change in Matt Hancock in front of the cameras here. But I'll come back to the 400 plus elder elderly people that died alone in care homes.

And at the moment around the country, we've got many elderly people. Many of them have suffered bad strokes. They're not allowed any visits from relatives. So they are being lined up to die alone by this man, Hancock. That's putting on this pathetic performance. I do feel very passionately about this, actually, because in our family, we have one extremely elderly ladies had a terrible stroke. Her only contact, the only bit of Sunshine life is for somebody to go and visit her. And we can't visit as a result of this man's policies.

And yet I'm supposed to respond to him crying in Westman stuff. It's a scam.

The policies are inhumane. I don't think there's much argument. I think so about that. Let's look at that. Dramatic performance. Some more of that will continue that clip.

And especially now with this vaccine news, we can get through this together as a country if we do the things that we all know we need to do. And it just made me even more determined to get this thing beaten. I mean, I just really feel it here.

We are speechless with Patrick. We are speechless watching this man because clearly he does not care whatsoever about the damage that his policies are doing in the country.

He said it right there. Everyone. Everyone does what they're supposed to do and we'll get through this together, right?

And how is the government going to ensure that people do what it says must be done? Well, can we remind people at this point that we've been warning and warning about the government's use of the behavioral Insights team? We put this out about two, three weeks ago, we found David help in here working on the little book of Green Nudges. This was how to change the minds of University students. But David Helen, the chief executive of the Behavioral Insights team, using political applied psychology to change the way people behave and think.

This is what he said. Acknowledge of these cognitive processes. We can make changes to the options people have the choice environment in order to encourage certain choices. Or we can explicitly design choices to harness or overcome common cognitive bias. So the government is going to make sure that as far as COVID is concerned, the only options you are given are the ones the government wants so that the public will be led into doing as the government sees fit. And these policies are going to be enacted by psychology.

That as we have warned about, consistently look at the government Mindspace document, you will not know that this type of psychology is being used. Second part of it here will just bring up we say that this man's effectively facilitating the government's COVID response. Why can we say that? Because he has been working within Sage and within the specialist psychology team, Spy B and we have published the minutes of their own meetings where they're showing that they're using this applied psychology to affect behavior. This is one of the documents that was talking about how well their message was a Deering to young people so young people being targeted.

But in May, I think it was the 22 May. We showed the minutes of the meeting where they were openly saying they were going to ramp up fear amongst the communities in the UK in order to get people to follow the government's COVID policies. So you ramp up fear, you ramp up stress, you ramp up depression, you ramp up suicides and mental illness. And that is another whole layer that this despicable man Hancock is pushing alongside R Johnson.

And he admitted as much of what you just said. Brian just rolled the next clip. Let's listen to what he has to say again, sweet.

But you do have a job on your hands, don't you? From people who say, well, on the one hand, you've got the people who are anti vax. Let's just put those to one side. You do have a significant group of people. Do you think this has happened too quickly for my liking? How are you going to persuade people to take this vaccine up? Because unless most of us have the vaccine, it's not going to have the effect in terms of getting rid of other restrictions that you want it to.

Exactly as you said, Brian, how are you going to convince people to take it? Because if you have to work so hard to convince people to a believe there's a pandemic in B have the vaccine when there's not really a visible pandemic around.

And as we're going to be showing them in a minute, challenge after challenge from medically and scientifically qualified people to say we do not believe the pandemic message that the government is putting across. But of course, none of that appears on television. So the interviewers they're giving Matt Hancock and easy, right? Because they could have. But on screens, scientific papers showing the challenge to the policies he's enacting. So peers Piers Morgan there, I mean, another useless TV celebrity because he doesn't challenge on the facts that are available.

He's just kind of Matador journalist. They call it, just wave them through and cheerlead cheerlead for them.

Yeah, I would say so.

Let's listen to what else he has to save.

That's right. And you know, the vaccine wouldn't be approved by the regulator if it wasn't clinically safe. But also what I'd say is, don't listen to me. Listen to the clinicians, listen to the experts. People like Professor Jonathan Van Tam, JV as he's become known, right? He is an expert in these things. And he's said that he's called his mom and said, mom, if you get the call from the NHS, make sure you get there and get vaccinated. Because.

More on Jonathan Van Tam. In a moment. We'll get to that in a second. But you can see this is just like really trying really, really hard to get people to believe this story.

Trying too hard, because the more he tries the worst the acting is. But notice that the little story given is as, oh, you as an adult member of UK society are a seven year old is trying to get the emotional here. This is the use of the applied psychology. Hancock's not bright enough to use this stuff on himself. He's been briefed by the teams and in the background, the Cabinet Office using this applied psychology to attack the minds of the public.

So now Michael Eden, there's an interview up with talk radio. I believe he did this with Julie Hartley Brewer just yesterday, I believe. And so he's really warning about the safety of the vaccine rollout. Has it been properly tested. And he's also questioning the efficacy, the effectiveness of it. He's saying, quite frankly, is there a health need? In other words, is there a need for this vaccine? You just don't go and vaccinate healthy young people when they're not actually at risk of COVID-19, especially if there's safety questions and there's no health need for the majority of the population.

Then you have a big problem when they're those two things are clashing on the job of the BBC is to make sure that that clash is never seen publicly that's kept away from the public.

So that conversation is happening on these other media outlets, but not on the main broadcast networks?

No, because they are simply being used as the government.

So let's look at a few things that Dr. Eden said in that interview here and mind you, he's the former respiratory head of scientific research at Pfizer and Pfizers, leading with one of the main miracle vaccines, as they call it, in this sort of race to vaccinate the population. And this is what he has to say. We really don't know enough about the long term safety. It's just not been in people very long. This is kind of a common sense question, Brian, when they've only done a few months of human trials and they've skipped a lot of the normal protocols and due diligence because apparently we're in the midst of a pandemic.

We just can't wait for safety.

That we can't wait.

The politicians can't wait. I think that's the problem. They can't wait politically because they need this as sort of a benchmark to come after. Lock down is kind of to prove or to sort of get the population into this kind of gestalt of one thing after another. And this is what's Eden has said. Let's just look at what he said here. He said. I don't think we know much about its effectiveness because the trial has only discovered when people became PCR positive, they haven't looked at full length viral sequencing or cultures.

This is a really basic point, Brian. So they boast about the testing. They boast about the 94% effectiveness, which we'll come on to in a minute. But really, what do they show? They show up? They're PCR positive. This is what the Pharma companies are doing in their tests, and all they're doing is reporting PCR positives. There's a whole question around whether the PCR positive test means that you're a case or even an infection. That's a wellknown conversation. This has been hashed out by a number of top medical experts, universities.

And so here we have the drug companies are completely avoiding that debate and baking it into their trials. So their trials are really designed to succeed from their point of view. And it's not me saying that a lot of the top journalists and even some of the top medical journals have said the same thing.

Brian, they have the other thing. We need to point out is that amongst the people medically, scientifically trained to challenge what's going on and to say we don't believe what's going on. We don't believe that the policies to to be enforced are the correct ones. But of course, these people are now fearful for their jobs. If you have somebody working within the NHS who is well qualified to say what the government is trying to tell you is not correct, they're worried that if they speak out, they're going to lose their job.

So on top of the fear that's been created around COVID by the government, we've now got fear amongst the experts across society that if they dare challenge the government, they can delete side jobs. This is a very insidious position, isn't it?

Sure. And one of the things that Dr Yen and others have said, and here's this study here, this is the Telegraph. Actually, herd immunity could have saved more lives than locked down. This study suggests. So not only that, they're saying that we've broadly achieved her immunity already, and this is what many other people are saying as well, and that this is actually the key that's already been delivered to the solution of the problem has already happened.

Well, because it's nature, isn't it? This is one of the key things that we are seeing so many scientific people saying, Whoa, hang on a minute. The human body has been around for a long time. It's designed to deal with this sort of problem, and it's herd immunity, which will be the ultimate thing which protects you.

And this is what they're saying quickly here, Brian, that blanket social distancing. The closure of schools have cost more lives than if her immunity had been allowed to build slowly in the community. A study suggests. And they're analyzing the Imperial College model that the government used as it sort of basis for the whole Lock experimental lockdown policy back in March, shutting schools, et cetera. But really, they're saying that in terms of preventing youngsters from mingling may have led the counterintuitive effect of actually killing more people on this one to come up.

If I just bring this one up. A study in the BMJ now we're not talking sideline periodicals here talking British Medical Journal. We're talking prime journals to comment on this. And a study in the BMJ and Or University predicted that over the entire course of the pandemic, keeping children out of classrooms would increase deaths by between 80,090 5000. Likewise, social distancing of everyone, rather than just the over 70s, could cost between 149,170, 8000 lives. And while this sort of research is being pushed forward, let's say we don't know whether this is correct, but there should be a debate on it.

There should be a proper open scientific debate. While this sort of warning is coming from well qualified sources, the BMJ Matt Hancock is playing in Christmas pan to minds to get sympathy for his version of what the events are. And we can bring another one up here. Experts say the virus was able to spread faster to vulnerable people. Once locked out measures were introduced, then if some level of immunity have been allowed to build up in the young. So these are fundamental challenges to the government policy.

And I got another one. Here it comes, as thousands of scientists across the world signed the Great Barrington Declaration calling for an end to lock down for young and healthy people. And we just do one more on this segment, the authors of the new people who discovered the figures in their reappraisal. So the government appeared to have chosen to protect the NHS in the short term, rather than save lives throughout the whole epidemic that reduce peak demand for ICU beds. It prolonged the epidemic, resulting in more longterm COVID-19 deaths.

So all of this analysis, Pat, is coming in that the government's policies, when properly evaluated, resulted in thousands and thousands of more people dying. So surely Matt Hancock should be brought in front of a public inquiry to answer what these, what these government policies have really been about.

It might end up being a tribunal if we keep going in this direction of travel.

I think we should. And I think it's time to get passionate about it because we are dealing with the death of thousands of people.

So again, the government is just trying to Ram science as they see it into their policy, basically trying to Ram a square peg into their round hole in doing a tremendous amount of damage on the periphery.

Right. But I think we also got to ask, Pat, why has this round hole been created? They're desperate to get the peg in the hole. That why was the whole peg and the hole created. And that's got to come down to money and profit from the from the pharmaceutical companies, certainly.

And there's also a bigger economic agenda called The Great Reset, which we'll talk about in a little bit. But back to the peers and Matt show real quick let's they're going to tee off our next talking point.

Go ahead and roll this as I know only too well and so many families now, this is a deadly disease and the vaccine protects you from it.

Okay. That's a lie right there. According to the pharmaceutical companies themselves, the vaccine does not provide immunity from the coronavirus, Brian. And so that brings us back to Dr. Michael Eden here. And this was published really just in the last couple of days, which he coauthored here with Dr. Wolfgang Dark from Germany. Now, both of these gentlemen, Dr. Water, worked with the German government for years, Brian on Approving, Edison and drugs. So he's well versed and has a great amount of expertise in area Dr. Michael Eden.

He worked on drug development and Rand at Pfizer for many years, 20 plus years experience in that field at that level. And this is what they're saying here. They've drafted this letter. It's a request to stop all coronavirus vaccination studies and call for Co signing this petition. And there's a link in this piece. I suggest everybody to go online, Google this find it. Share it. It's a very, very important article with an important link embedded within the article. And this is the link to what they've published here.

Brian, this is a letter that they've drafted together. And when you go through this letter and we go down, it addresses a number of really important points with regards to the safety of this vaccine of this Corona virus vaccine, and they go into technical detail. Obviously, these are extremely qualified individuals at the top of their field, Brian. So what they're raising in terms of red flags should be taking very seriously. But there's a few things that caught our eye, Brian, that we think are incredibly important, and we had the flag and here is one of them.

It's in this section here, section eleven. And just to bring up the fine print, it has to do with the safety of this with regards to pregnant women or with regards to the issue of infertility. And this is what it says. There is no indication whether antibodies against the spike protein. This is what's created by their vaccine. The mRNA vaccine of SARS viruses would also act like, like, anti syncytin one antibodies. So this is the type of thing that's generated through this new vaccine. However, if it were to be the case, this would then also prevent the formation of a placenta which would result in vaccinated women essentially becoming infertile.

Now, I cannot stress to you how important that type of a safety issue is in this conversation. And for Matt Hancock or anybody to be saying that it's been fully tested and it's totally safe because the regulator says it's safe for them to say that how could it be fully tested? Long term effects if it's only been tested for a few months, how would they know they don't know.

They don't know is the key thing is what Michael Eden said as well.

So obviously, we're not making any medical expert claims here. We're quoting the experts.

So recording the expert, and I think we are allowed to say to our audience today that we were contacted by one of those medical experts early this morning who wanted to alert us to a whole range of evidence which challenges everything that we're being told about these vaccines. We can't give you an a name. We can't give you an identity because as I mentioned earlier, the problem is that people are now in danger if they speak out at a professional level on what's happening. But the person and fully agreed with what you're showing on screen.

And I think you have some more details about that.

Let's bring this in. Now. This is going back to 1969. We're being told that yes, this is very old information however, the basis of it is fully relevant to what's happening with the the vaccines that are being offered to the public over COVID-19. I've put a little notice here that the UK column has been alerted to this material by a fully qualified medical professional who is deeply concerned at vaccine risks to women. And the subject is Mbro toxicology, and it's the effect of what's known as Poly I and police.

Now I'm going to say that some of this is a deep bio science level by a medical scientific level. All we can do is show the basis of this evidence, and we're going to try and get more input by the relevant specialists who can go into this in detail. But let's have a look at what this paper actually is talking about. So here we are. This is August the 16th 969. I just try and focus on the key bit here, but it's talking about these two things Poly police.

Now what we are being told is that effectively these are also going to be present in the modern vaccines. And I just read this bit here as although Poly iron police appears to be extremely embroi embryo toxic in terminating pregnancy, the compound does not have the high terror genic properties, these doses in the rabbit, in our experimental conditions, and in the data table underneath, you can see that they're actually listing doses versus damage to the fetuses of rabbits. Now, remember, of course, that when we're talking about tests of vaccines in the early days, all of the tests are on animals.

They're going to be on rabbits and monkeys and particularly young monkeys, because of the relative strength of the immune system in a young monkey. But this 1969 report is warning that there is a real risk of these components, which we are being told are present under within other material coming into the modern vaccines, which can have a risk to the placenta and thus the development of babies. This should surely be debated openly, but we've got no debate on it part at all.

Instead, we have cars for a wide rollout, a rushed roller rollout of a vaccine for a pandemic that doesn't look like it's materialized or there was a pandemic. You could argue in the spring of of 2020, but according to the numbers that we're looking at in terms of ICUs in terms of deaths and so forth, attribution of death, a covert there's no pandemic. So now on this pregnancy on risk to pregnancy point, Brian, this is Jonathan Van Tam. Let's listen to what he has to say. You could say he admitted as much that there's an issue, but he very skillfully talked his way around it.

I believe one of the chief scientific medical officers for the government for a save by Mr Hancock. Clearly, JV is Matt Hancock called. Let's listen to Mr van Town.

If the vac seems safe for pregnant women and it kind of feeds into what you were saying about who has been who has taken part in these trials?

Yes. Thank you. That's a question that's come up before. None of the trials deliberately included pregnant women. But then we'll always have been, as there were in the trials that I'm aware of women who volunteered for the program who then during their vaccination program as part of the trial, became pregnant. And it is always the case that the manufacturers that the sponsors of the study always follow those women who became pregnant during the study rigorously right to the end of the study, and they also follow the baby into its early years of life.

So from that perspective, this is covered. But right now, do we have the data in pregnant women to understand it's the use of any of these vaccines in pregnant women? No, we don't. Does the J CVI suggest that pregnant women should be vaccinated? No, it does not. And that isn't a sign that the JCI or me have seen some terrible problem. It's a definite sign that we don't have the data at this point. And therefore, safety first, always being cautious, even though there may well be no problem at all and nevertheless, always safety first.

I totally contradictory. He's contradicting himself. He's saying it's always the case that the drug companies follow through. And he's saying that we've got this covered. And he said safety first, but then admits that they don't have the data. Of course, they don't have the data, because if you've only been doing testing for a few months, last time I checked, Brian, the gestation period for a pregnancy in a human is how many months? Well, knowing roughly it's nine and then to follow the baby afterwards a minimum of a year.

How could they possibly know if it's safe and be able to cover all of that?

They are not recommending this vaccine is going to pregnant women because they know the data that we're talking about, the risks. They know about this. But what do you do? Oh, we just recommend that pregnant women don't have it. If you didn't know you were pregnant, don't worry, because we'll follow you to see whether you do have problems.

So we'll roll it out first.

Yeah. Roll it out first, wait for the damage. And then we'll sort of assess that.

And women who are girls who aren't even pregnant at the time taking the vaccine. So I mean, there's a lot of questions here that are really unanswered, and it seems like they're just rushing it in, saying, don't worry, no problem. We'll deal with that later kind of thing.

Yeah. Because the agenda of the drug company is to get those multi millions of doses out and get the profits rolling in. These drug companies have not suddenly become nonprofitmaking charities for the benefit of mankind. They are in driving for the multi billion pound profits that the British government's handing handing them on a plate that's why their own executives are selling shares on the basis of these huge contracts. This is about profit.

So on the question of are the vaccine companies doing a good enough job testing for efficacy or safety? We'll just go and point people right here to the British Medical Journal. Again, Brian, this is in the Shabby fringe publication here. And whether they're saying, well, COVID-19 vaccines actually save lives, Matt Hancock said that the only thing that can save lives is the vaccines. Current trials aren't designed to tell us. And here's what they're saying here, Brian. Only a safe and effective vaccine will be approved, they say.

And nine vaccine manufacturers issued a rare joint statement pledging not to prematurely seek regulatory review, which they're actually doing right now. They're prematurely seeking regulatory review. So again, this is a little double talk by the establishment, the government and the vaccine manufacturers. And they go on to say here, ideally, you want an antiviral vaccine to do two things. First, reduce the likelihood that you will get severely ill and go to the hospital and to prevent infection, therefore interrupting disease transmission. This is from one of the top infectious disease experts in the United States, Peter Hotes here, and it goes on to say, well, is this actually going to happen, Brian?

Maybe not yet. The current phase three trials are not actually set up to prove either. None of the trials currently underway are designed to detect a reduction in any serious outcome, such as hospital admissions, use of intention care or deaths. Nor are the vaccines being studied to determine whether they can interrupt the transmission of the virus. They do not provide immunity, and they can't even say for sure that they would keep you from getting infected.

Well, the expert who spoke to us this morning, I had to take notes very quickly, a lot of information coming over, but they stated that to see the claim being 44 effective for the vaccine was false was the word used. This is all based on relative risk. And they said that the actual risk reduction was actually a fraction of a percent. And they stressed the point that you've just mentioned that the vaccine was definitely not going to stop infection between one person and another. Medical experts coming forward to the UK column.

And presumably this is because it's so difficult to get the Socalled mainstream media to respond by telling us that the claims of the vaccine companies absolutely false. Now, that's quite something, isn't it?

It is. But what's even more amazing, Brian, is they're kicking it back to the regulator, Matt Hancock, the other go pass the buck deniability. Not my fault. The regulator said it's safe, and we trust the regulator again, just like we trust Sage or we trust the science. But they themselves don't have to actually take responsibility. We've got a clip here. This is what Matt Hancock said about the Mr ha regulator. Go ahead and roll this.

I say we would happily take this if it helped. Get the message over. I take it live on a on a I just feel like it's really important if we're gonna get through this. That enough. People take it.

Yeah, yeah. I'll take it with you.

Pass.

You got to show leadership and these things.

I'll come to where you are any time next week. If we can do this and let's do it together live on a it would be powerful. It would send the right message. If you take it, I take Ezana takes it. Doctor Hillary takes it. I think it will have an impact.

Well, yeah, let's just take. No, it's not just he takes it. His family take it. His children take it. His grandchildren take it. Let's do the whole thing for Piers Morgan. If he believes in this, a whole of his family get this and then we'll start to see.

But not even that. Brian, he said, Well, it's not because of health. I'm doing it because I want to convince people that it's safe. So he's admitting that he's playing the role of actor or public relations actor for the government there with the health Minister. I mean, this is totally unprecedented. Where is this coming from? This is a whole new way of government operating here. And it seems like these corporations are absolutely fused with the government right now. It's a total merger of corporate and government state interest here.

And then the media, of course, is corporate as well. Their biggest advertisers. A lot of them are pharmaceutical companies.

We had Bill Gates meeting with Boris Johnson a couple of weeks ago. What was discussed in those meetings? The public has no idea. So we've simply got big corporations mincing through the dolls at number ten in order to have discussions in order to put policy in place, which affects every person in UK and the public's. Simply not told. What did Mr Gates have to say as an unqualified individual?

Bill Gates has lots of honorary degrees. Brian, what are you talking about? He's given them every week.

He's given them every week, but he's medically unqualified. I'll take the point. Let's have a look at this. Now. This is detailed information about the fights of vaccine. This is what the company is claiming itself. Have a look at the red box. And we're going to ask for any support out there from fully qualified statisticians mathematicians, because what our experts said is if you look at this claim in the red box, there is this statement. It says 100%, two sided, 95% confidence interval of -13.1% to 100%.

And the person said to us, you have not got to look any further. But if you are dealing with confidence levels where you're using minus numbers -13.1% to 100%, what you're actually saying is that the system you're using is totally irrelevant. It's false. But this data has been put down in order to what's the word brow beat the public into believing this has come from qualified experts. So our challenge today, and we're pleased that we've got members of our audience challenging us. But we're going to put out, if you're a fully qualified statistician, come and talk to us about this -13.1% to 100% confidence indicator.

So this is the sort of subtext that's not in the headlines, Brian. All the headlines saying is vaccine is 94% effective. So this isn't the government saying that this isn't an independent Food and Drug Administration or anybody saying that the companies themselves are running their own tests and then telling us how the results went. And as we've said, a lot of experts and critics are saying they're designed to succeed for a number of different reasons which will report on in future programs. Hopefully, Brian, but that's where the sort of some people may call it a can.

Yes.

Well, some people might let's bring up this. This was a clip out of an interview with John Snow, if I remember correctly. But he was talking to John Bell, professor of medicine, Oxford University. And this is what the experts said. He's talking about the vaccine for covert 19. We need to look carefully, and regulators need to look quite carefully to make sure that it's done what we needed to do before it gets approved. So there will be a delay between the outcome of the trial. The decision as to whether it can be used as a vaccine of all that make sense, anything that undermines the legitimacy of the regulators to make independent decisions is, in my view, profoundly unhelpful.

Well, that sounds a reasonable statement, doesn't it? So let's have a look at what he might be talking about. So we'll get into MHRA here notice the childish cartoon because, of course, it's designed to be talking to adults, but we need cartoons to understand. So what credibility does MHRA have? These are all people commenting on MHRA. Recent events have proven that it's not a watchdog. It's a pussy cat that purs in front of the pharmaceutical industry and does what it's told. It has an incestuous relationship with Big Farmer and has a close Association with the associate.

Sorry, with the Association of the British pharmaceutical industry. It has a disgraceful recent record. We can look with gratitude to the work, not of the medicines and health care products regulatory agency in protecting the public, but to people such as Sarah Bosley of the Guardian for exposure, the organization to the television program Panorama, and to Richard Brook of Mind, who courageously resigned from MHRA in disgust at its activities. So this is not coming across just from the UK column. If you go and look, the evidence is all out there in the wider media that this organizations not fit for purpose.

Look at some more of the comments on it. So this is from NBC, MHRA, the UK drug safety agency, falsified vaccine safety data. Millions of children at serious risk. Glaxo SmithKline Savor HPV vaccines was arvical cancer. The MHRA systematically tampered with 600 reports of adverse reaction. 6000. Sorry, 6000. Plenty for that to declare the vaccine safe. And on it goes. House of Commons Elect Select Committee Reporter 2005. In view of the failings of MHRA MHRA regulators, trail of deception has been exposed. Andrew Miller, the chairman of a parliamentary set Let committee, has said that a trail of deception has been exposed in the system and that's from the Telegraph.

That's not just coming up on social media. Mhra under fire amid calls for shake up of regulatory system, the scandal of device regulation in the UK. And that comes from the Lancet. And on it goes, the Rocat killer is asking the government why they allow Dr and Hunts, the HR, a CEO to take part in the European medicines value agencies, reviews rocks at as an anti depressant. So working both sides of the case always a popular thing. More on that, MHRA. It shreds all its data.

Dr Ben Goldacre, in his book, he shredded all its data. So it's pretty clear what's going on with that one. And we're back on to Glaxo SmithKline and we've got more and more. So this organization, Patrick, hasn't got a leg to stand on and we shouldn't be trusting it to regulate the introduction of a new vaccine, surely.

Well, there's just a litany of scandals there as long as anyone's arm. And that goes right back 20 years, which you've just shown, Brian. So this is the regulator that's rubber stamping these vaccines that are on this express schedule. Expedited rollout. Why does it need to be rushed? Why not take the normal amount of time which to develop to property develop a vaccine? As Dr. Michael even says, he's all for a welldeveloped vaccine that meets a medical need, he said in his interview with Talk Radio. Four to ten years, Brian, four to ten years, and this is being done in effectively six months.

Okay, what could possibly go wrong? Is there a question I would trust a regulator because it's off fine. Everything's fine.

The trouble is when the things go wrong, people damaged in the short term in the long term, or they die. And of course, that's why there's a huge fund kept by the British government to pay off anybody who's unfortunately suffered adverse side effects from vaccine. So it's not as if people are saying, well, there aren't any side effect. No, we have to have a huge fund available for people to make claims against. Except what the victims say is you try making a claim to get paid money.

It's very, very difficult. So the government protecting the firms. Once again, this is love for a University. Let's bring this one up on screen. So I've slightly covered the lure University logo there. But it says actual death due to COVID as some 54%, 63% lower than employed. But the standard excess death measure and reported excess deaths likely to include a significant number of non COVID deaths. And then the second box down on your screen over the lockdown period. As a whole, government policy has increased met mortality rather than reduced it.

This is a major in British University.

A highly respected University with this sort of data. And indeed, our medical expert this morning was happy to say this is the sort of data we should be paying attention to.

So they're reflecting what you've been talking about. What we've been talking about. The UK can work since the beginning of the crisis, talking about lockdown deaths, that there is actually a case to be made that the excess mortality or the spike in depth are a direct result of Lockdown, which is government policy, not the Corona virus.

Well, and, of course, Mike Robinson produced a wealth of excellent graphics showing this, and I think UK column can actually say, well, we've had a big hand in focusing people's attention on the damage from lockdown. Let's just put up Laffer University's graphs. I mean, they've put out a lot of material, but essentially, here we've got an average weekly excess death. That's the red line we've got in blue weekly excess deaths that's being linked as the COVID line, if you like. And then the dotted line is the five year average of excess death.

And what they're saying is there isn't a graph here which is actually showing that the COVID deaths have gone above that five year medium line.

So really within the normal range of excess mortality from previous years. And this is also dovetailed by the Johns Hopkins University report that was repressed this past week that says basically the same thing with looking at us data from the CDC itself, Brian. So whether it's in the UK or whether it's in the United States, we're seeing the same conclusions being drawn now. Afterwards we're sifting through the dust and we're finding out, hey, what we've been told, what's been claimed in the press and by government isn't actually true.

And of course, we've got, as you were talking about, players like Piers Morgan, is Piers Morgan listening to us now? I wouldn't thought so. But we'll say Piers Morgan time you got this information up on your own program and started to discuss it in front of the public. I think he's going to be too frightened interrogating the claims.

We the government rather than just being a cheerleader for the policies in front of his Christmas tree. So it seems like not all this is a few weeks old, Brian, but not all NHS staff are keen to line up in the front of the queue for the vaccine. And of course, they're supposed to be the ones getting at first, although the government pulled that back this morning saying that no, actually, NHS workers won't be the first to get vaccinated along with the vulnerable and elderly. And here look how they're characterizing it in the headline.

Not surprised. It's The Times after all, Brian here and they say staff, they join the antivax group. So antivax. Yeah.

You've got concerns about the vaccine and the question you're making a statement, you've got concerns, you've got questions. The Times instantly brands them as though they are. Well, they're anti. That's a negative connotation the moment you start.

It'S a broad brush as well, and it doesn't speak to the actual questions in the actual concerns that are being raised by these stuff. It's good to know that there's still some independent minded, critical thinking members of the staff of the NHS, but they're being demonized and their jobs are on the line by taking this stance because it's not politically correct. You believe we're having this debate right now?

Well, I'm afraid I can. I can because this is the United Kingdom under, they said polling, polling government. We asked the person we spoke to this morning what it was like in order to try and speak out from within the NHS. And they said it's extremely dangerous. The inference is that you're going to lose your job pretty quickly. But they said that people in the NHS are very, very concerned, deeply concerned about the effect of vaccines. And they are now starting to group up in order to give themselves some protection and to challenge the and I think we heard shortly before we came live that there's some talk that maybe the vaccine rollout for NH staff could be delayed.

That's right.

I haven't got to the bottom of where that report came from, but that was moving around amongst us.

Very interesting brain. And why would that be? Could it be because there's some dissent within the ranks of the NHS? Some questions.

And if they lose the confidence of the main specialist people inside the NHS, the whole of this COVID scam is going to come unraveled. So I can imagine that they've bullied the NHS into following the program. Now the worm is turning a bit. This is very dangerous for the likes of Matt Hancock.

Isn't it amazing? Bring the government used the NHS, get out and clap every Thursday night or whatever it was. Protect the NHS. The whole lockdown itself at the beginning was to flatten the curve to protect the NHS. Everything was about the NHS, and now the government's effectively using the images, pushing them right to the front of the queue, saying, you must get all 1.4 million health care workers in the country need to be vaccinated with this fast tracked, absolutely rushed vaccine product from the major pharmaceutical firms.

So that's a thing to be concerned about in itself, that they would try to politicize this national institution to this degree.

Government's got no Quan. Patrick. I wouldn't want dealing with a criminal government.

That's not just a political football, Ryan.

That's a political elephant that they're pushing around and maybe it's going to squash them. We could just hope for that one. Well, we couldn't have a UK column news without talking about the BBC. So what's the BBC been up to? Well, if you look at their website every morning, of course it's pumping out the COVID fear propaganda. I just took this screenshot earlier this morning and I was just fascinated. So top article, Breakthrough Chance recedes as UK EU talks go on. So in theory, we've got a Brexit article, but note that we have with it a very large picture of somebody wearing a mass.

This is deliberate four £3 billion worth of propaganda machine. They know what they're doing. Then we've got Bouncy here apologizing for saying that the UK had rushed vaccine. We've got to get that on screen because we don't want anybody challenging what's happened in the UK. I wouldn't trust this man further. I could throw in absolutely the ABC needed to get it on screen. And then what have we got? Well down here. What are the safety checks for vaccine? Well, if you want to read a Christmas Pantam, get into that article after the UK called today.

We've got this one. Now this is preparing people will I need a vaccine? Passport? The BBC is not saying, do we need passports? What are the risks of these passports? No, this is prompting people that the passports are going to come in. And really you will need one. And then the articles go on pub shops, travel. What can you do in each COVID tier? What tier is your area in? So BBC simply reporting COVID. But what was on that page a little bit before I took the screenshot was a link through to this article.

I put this specially for you, Pat. Obviously COVID Biden to ask Americans to wear masks for 100 days. Let's look at this. I'm asking Americans to wear masks for my 1st 100 days in office and the BBC made sure readers knew that the first hundred days was sort of a statement period that presidents make to stamp their authority on an administration and the nation. So he wants you to be masked up is not in that picture, though, which is a bit worrying. But there we are.

The first day I'm in all grated to say I'm going to ask the public for 100 days to mask, just 100 days to mask, not forever. 100 days now the to say in Pinky purple. There was part of his quote. So I'm not sure what was going on in this old man's brain. I'm allowed to call him an old man.

I think at my stage in life imagine would be the correct word.

So I don't know whether he's beginning to suffer from wearing a mass too much. And I think we'll see a significant reduction if we occur that if that occurs with vaccinations and masking to drive down the numbers considerably. This is not even proper English Pat, what is going on in this man's brain. I don't know. I'm going to issue a standing order that in federal buildings, you have to be mass transportation into state transportation. You must be masted, aeroplanes and buses, etc. I'm happy to take a vaccine in public.

Perhaps he could join Piers Morgan. They could have a vaccine love in.

They could have a big vaccine party.

Yeah, people have lost faith in the ability of the vaccine to work. Now, that's an interesting statement.

We need to do something about that. So as the government.

We need to crush that, it matters what a President and the vice President do. So there we are. Lots of masking up.

All about optics, Brian, all about nudging, all about coercing the public. But Joe Biden is a perfect example, Brian, of what happens when he's been wearing a mask for months. That's what oxygen deprivation to the brain does. Yes. And this is why he can't complete sentences properly.

Okay, well, on a lighthearted note, but I'm afraid it is black humor. An advert for David Ellis's latest report, Battleships. I encourage people to watch this. David kindly invited me to speak on the matter from long ago military experience, but he was a bit concerned to see young naval aviators who apparently now being able to play board games in order to learn about air a anti submarine warfare. If you don't believe what you're seeing on screen, go to the front page of the UK column and look for the Lis report and you can see and hear just some amazing things again.

This is, of course, UK's military being treated and brought to the level of children. This is a political agender at work.

What are you talking about? It's a great game, battleship, Brian. I played it when I was nine and 1011 right up when I was in high school. I was too old to play it, of course, but it's a great game.

It's a great guy.

It's very instructive indeed.

I thoroughly recommend it for children, but I'm a little bit concerned to see adult military people being reduced to playing battleships. But do watch that report and we just say thank you very much to everybody who's watching today, listening today and supporting the UK column. We can only do what we do with your help and support, and it's very much appreciated. I couldn't save more on that, really, because it's been really wonderful this year. Now we have got an audience that thinks and UK columns got used to the fact that if we get something slightly wrong, our audience picks us up pretty quickly.

And I have to say that I made a report the other day, which was about mercy care. So this is an NHS trust, and we highlighted the fact that in this Freedom of Information report, it was reporting that there were just five deaths related to this. How I am going to admit that this information came into us shortly before the news I did our basic due diligence checks on it. What I didn't quite pick up was that actually that trust is deals with mental health illness and therefore it is a very small trust and therefore the fact that they only had five deaths.

That is tragic. But of course, that was a very low number because the trust itself is very small. So a number of emails came in. I thought I'd put this one up. The RTI featured on the Wednesday, December, the second relates to one mental health trust in Merseyside does not apply to the acute hospitals any seriously ill patients. This trust has transferred to an acute hospital. You might like to investigate the NHS structure in Merseyside. That leads to such confusion. This information came from a retired friend who lives in Merseyside and was part of the NHS administration.

Now I'm going to say thank you to everybody that challenged us because we know that you were doing that for the right reason, and we've printed this acknowledgment. But I'm also going to say that if you say to us, we should be investigating, we're just going to return some of this and say, no, no, no. We encourage you to if investigate because we have more than enough on our plate at the moment. So if you really want to support the UK column, please keep this positive criticism coming because we welcome it.

But we're also going to say we need all the help we can get from our audience to do the research and to lift the stones to show what's really going on. I don't think we can say more on that one.

No, no, that's good.

Okay, now a little bit of an eye on the clock and I'm hoping that Mike behind the scenes will give us a couple of minutes just to finish this because we just wanted to comment a little bit on how our politicians are responding to challenges. Let's have a look at this one. This is Colonel Bob Stewart, Conservative MP for Beckham. He was being interviewed by Julia Julia Hartley Brewer, December the first excuse me, 2020. And let's go through what he had to say very quickly. He said, I'm going to vote with the government.

Well, that votes already happened. So he's voting for the government on COVID-19 lockdown policies. So he says, I'm going to vote with the government. Listen, I was not actually keen on the lockdown, and I did actually speak to the Prime Minister about this because I said to him, I'm not very keen. And he said from my position and this is his view, I have to listen to what the experts, whatever you say. The experts, the experts are the chief scientific officer of this country and the chief medical officer of this country and Sage.

Now, there are a huge number of experts on the Internet. I sometimes wonder if they are all doctors or they've been to University. But these experts are all saying that the Prime Minister has got it this wrong, that they've got it right. There is a difference and the difference is this. And this is what the Prime Minister said to me. And this is, in my view, battle winning. He said, all these people that are disagreeing with the way we're tackling this problem. I accept that there are different views, but there is one crucial difference between them and me.

If I make a decision and I get it wrong, a hell of a lot of people are going to die. Now. When I listened to that, I didn't know whether I was getting thoughts from inside the mind of Colonel Bob Stewart or I was simply getting a party political message from Boris Johnson. It was rather difficult to tell. And I wasn't alone because the lady stepped back in and I've just taken a snapshot. But she started to say, Well, hang on. We've got these crazy measures in force.

And she said, Why are you supporting more measures which have no scientific basis, telling a pub that you can have a drink unless you're sitting down and having a meal at the same time? There is no scientific basis or medical judgment for that rule. So why are you voting for it now? She was pretty crunchy here and I'd say, Well done, Julia, because you're getting stuck in this was the reply because I think we've got to take these measures to try and keep this horried pandemic under control.

Now I'm sure the audience sees what I see. But let's imagine the Colonel Bob Stewart was still in the military and the tanks were advancing towards his position. The tanks representing coronavirus and signals come down that you to fire antitank ammunition at the tanks, but you're also to throw mud at them. And surely the soldier would be saying to him, but, sir, why are we going to throw Mudder tanks? And Colonel Bob Stewart would be saying, oh, because we must follow the instructions. We're going to throw Mudder tanks because that's what the senior officers have told us, just in case Patrick reassure me here, am I alone in this?

I think we're starting to see breakdown in the thought processes of our MPs. I'm going to suggest that this Colonel has been mentally reframed and he's unable to think coherently. He can only talk about what the MP says. We just give you one more and then we'll end today. This is Steve Double and he was challenged by one of his constituents. And this is what he replied, thank you for your email and for clarifying some of your thinking behind the issues of the Great Reset, the New Normal and Agenda 2030.

A word of caution in my previous email was that whilst there is a genuine plan drawn up the World Economic Forum entitled The Great Reset, there are also a number of bogus claims, including speculation that the pandemic has been orchestrated by world leaders which are deeply threatening to our fight against the virus. This is also known as the Great Reset conspiracy Theory. You see where his mind is going.

They've tied themselves in knots on this. But go ahead, Brian.

Well, let's carry on and see what Steve says. It's certainly true that many are thinking carefully about how we can live life better beyond the virus. Learning from technological advances that might have been made over the past eight months. It's also important we are better prepared for any future epidemiological threats a bit more. However, it's worth clarifying the Right Honourable Michael Gove statement in that he was referring to ways in which the nation would need to adapt until a virus, a vansing was rolled out and the virus has been suppressed.

He was not referring in that moment to any new way of living beyond the pandemic, as our confidence is that as restrictions are relaxed, we will be able to regain normality once more, not lease in the way we can socialize with others with his mind. I'm having trouble. I'm struggling. Please be assured that the end is in sight with a hope of several vaccines proving effective, one of which I participate in trials for we have very good reasons to be positive that we'd be able to enjoy the things we value in life so much once more.

And I'm going to say this is another man. This is not real thought process. This is a sort of quasi political regurgitation of something this man's reframed. He's not thinking coherently. Is it any wonder why there's no proper debate in Westminster?

Well, what the medical experts that we spoke to Brian earlier today said the proper scientific term for what we're seeing now is a pseudo pandemic, a pseudo pandemic. So if you want some language that you can use out there on social media, this is the proper scientific term to what is happening right now. It's when a pandemic is being hyped up when actually the numbers, the data, the actual medical evidence there doesn't support that there is actually a pandemic going on right now today, December 20. So that's a pseudo Penda.

The other thing I'm going to say about Steve Double, a little bit of double speak from Steve double the World Economic Forum. Build back better. All of their terminology is blazoned behind Boris Johnson, behind Joe Biden, behind Justin Trudeau, behind a number of other world leaders. You telling me that's just a coincidence. That's not a conspiracy theory. That's a fact. So it's quite disingenuous for him to sort of word people off asking, Why are they all streamlined using the same slogans and they're saying, Build back better, build back, better build back better.

They broke it. So they want us to build something back better, which they broke. It was a government policy. It was lockdowns that destroyed the global economy, not the coronavirus, because some countries did not lock down and they are perfectly fine today. They want to blame and escape out the virus for absolutely everything and say that we have no alternative. We had to do this for your own good to flatten the curve. And then three months later, it's something else. And then six months later, it's something else.

Wait for the vaccine and so forth. This would just keep going on for what, another year, another 18 months more school closure until we stop.

It is the answer. And at that point, I think we're going to have to say we're out of time for today's news. Patrat, thank you very much for joining me. Thank you. To all that audio audience. We really do appreciate your support. We also love it when we can see that you're using information we're pushing out in order to challenge these despicable MPs and government officials in this created pandemic scam. That's my personal view on it. So if you're digging and exposing what's really happening, feeding us the information we couldn't wish for more.

Thanks for joining us. We'll be back at the same time on Monday.

