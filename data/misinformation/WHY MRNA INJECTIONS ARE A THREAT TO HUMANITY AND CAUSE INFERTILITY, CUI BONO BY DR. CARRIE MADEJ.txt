Good morning, Vermonters. I am here today with Dr. Kerry Made, and I'm going to introduce you by reading a little bit off of her website, which is called The Battle for Humanity. Doctor Kerry Made directed two large medical clinics in the state of Georgia since her 20, she has been fascinated, rated by vaccines and studied them ever since. Her in depth research led her to discover that the proposed technologies are for the new covid 19 vaccines. What she is revealing is alarming. This video is an in depth documentary that's actually linked above, so I'm not going to go to that, but this is the start of transhumanism, turning us into humans two point by changing our DNA through the vaccines.

This might sound cool for those who watch too many scifi movies, but the reality is, though, it ends our autonomy and make slaves of globalist tech companies who can then control us without us being aware. Carry, welcome to the show. Thank you very much for taking the time to talk to me and to my fellow Vermonters. That's a mouthful.

Thanks, Alison. It's a pleasure to talk with you. I'm happy to share knowledge and bring awareness with all of your audience. We know as many as we can to understand what's happening.

We sure do. And this is going to be a really honest conversation. Today. We want to talk about who's pulling strings, who benefits and where we're headed. So what were your first concerns when you started studying vaccines?

Well, I first started questioning them when I was a teenager and I was told to get my tetanus booster because back then, I think more than now we were all told by our doctors and teachers and parents that you better get that booster or something really horrible is going to happen to you. We all talked about this 1010 that would happen. So the idea back then was that if you were running around the backyard barefooted in a rusty old nail got inside of you that the bacteria could within minutes to hours, not days.

Ministers would cause such a ten, such a muscle paralysis and all of your muscles that you would curl up in a ball on the floor, die foaming at the mouth of suffocation. I mean, that's a tragic way to die. I had never heard of anyone dying like that around the world. You think you hear something in Africa or India, right. So that started my quest of I don't believe this thing. And so it went all the way through my resin, sea and even infectious disease specialists very high up in their field.

I said, Where is the bonified case of someone dying like this? And they actually came back and said they could not find one bonifide case ever proven that anyone died in this manner from the tetanus bacteria. So there is none. So that means throughout the decades we've been lied to about the purpose of the tetanus vaccine. Now, I'm not saying that the bacteria cannot cause cellulitis. Of course it can like any bacteria, right? But it's not causing that crazy. That tragic of a death, because that's how they get away with giving us multiple doses of a vaccine, because if it was just a cellulitis, nobody would get it.

So if it's not for that purpose, and when I questioned it, let me go back to the infectious disease doctors. They told us all to be quiet, to shut up and never repeat what we were taught. As far as there was no bonified case, we were still supposed to give a vaccine, never tell anyone that we found out there was no bonified cases, or we would never work again. So many times in my career, I've been threatened that way, blackmailed or told I would be blackballed from the industry.

So I found out a reason why we did give the vaccines because I happened to do an observation of one of the hospitals I was studying at, and I realized that in that hospital, they had a protocol, the people that were on social welfare, they did not get the tetanus vaccine, ever. The people that were and they got all the other vaccines, the people that have private paid did get it. And I questioned why they told me, be quiet. That was the protocol. Don't talk about it again.

Wow.

So I noticed the only big difference in the two groups was fertility. And I noticed that people who did not get it were very fertile, no problem, even with their poor nutrition and poor prenatal care versus the people with private pay. I had a hard time with the fertility. I did a Google search, a regular Google search, and I found that since 1972, the NIH and World Health Organization have been working on the tetanus vaccine as a sterilization or an abortion vaccine. So the intent was for a completely different purpose was to control the ability for women to have children.

It actually mean, too, because what they were putting in it was a human chorionic gonadotropin, which is HCG or pregnancy hormone. So your body learns to attack anything inside a vaccine. So if that HG is in there, it's cumulative. The more shots you get, the more infertile you'll be. And so this you can still find information online with this. How far back was that carry when I learned about this? This is like late 1990s to early 2000.

And so with the time frame on when they were doing the past decade.

Or was this like the hospital that I noticed they were doing that? That protocol was, I would have to say, late nineties, late nineties. You were doing the protocol. Now the Vatican found out they were doing this in Latino countries because they notice they would only give the tetanus vaccine to women of childbearing age, only not older women, that children, not men. And so they analyzed it they did their own research and found that the pregnancy hormone was inside of there. And so actually, the Vatican found this out.

They recently found this out what within the last five, seven years in Kenya and some other countries as well. So are they doing it here in the US? My observation says it's a possibility, and but we don't have hard data on it. But we do have the admittance of these big organizations saying, yes, we've been doing this. We've been purposely doing this to the vaccines. So my point was, wow, we've been lied to just the everyday person. But in medicine and science, we've been lied to.

We've been told to give something to people that has an ulterior motive. They were doing that. What else are they doing?

Right? And it violates the Hippocratic oath right off the bat.

I take that very seriously. And so at that point, I started to really research every vaccine and was horrified to find out that we did not have the research and the proof that they are applications at all. And also the safety profile was horrifying. I did not know this because in medical school, we get 4 hours of training period. That's it. So you think your doctor knows what they're talking about? Vaccines? I'm here to tell you. No, we don't get taught very much about it.

Right? So fast forward, there's an agenda clearly going back to according to your observation, at least the 90s, the beginning of the 90s. And here we are, 2021. It sounds like this is vaccines ten0 in 2021. What is going on with that? What is the agenda? Who's behind it?

Well, it was when I started researching this plan, Demic, that I found out that the word vaccine popped up almost immediately, which is very strange. Why would that come up before even treatments, of course. And then the word RNA or DNA kept coming up, which is a genetic modification that is completely different than what we've ever done before in the M stands for modification.

Is that right?

It's modified messenger RNA. There should be two Ms there. Okay, they only put one, but really extremely. It's messenger RNA, but they modified it. They synthesize it. It's recombinant. It's not from nature. Very important to know that point. And that's a code. A genetic code. It's genetic modification. And when they try to tell you it's not, it is completely a lie. It's manipulating your genetic code is manipulating how you are producing a protein in your body. So that's genetic code in the path of vaccines. How they work is we took the actual virus, the real virus we isolated and we could either kill it or it's alive.

But a weakened version put a couple few toxins in the solution and then injected it into you. The idea is the weakened virus would hopefully not make you sick. But your body would gain knowledge and information on how to fight it. In the future. That's the idea. Well, we never isolated this virus, believe it or not, it's never been isolated for the admission of the CDC and five other countries so far, so they never have the whole virus in its entirety. They only had pieces of a virus that they isolated from a sick person.

They assumed that is what was making people sick. What kind of science is that? They assumed people don't know.

You just jump all of the news.

They're assuming these pieces are what's making us sick. Well, so how do you make it into the whole genetic code? We took the computer simulation, a computer analyzed it and put in the missing blanks. That's why it's recombinant apart from nature, apart from AI.

Yeah.

Now that code. That's why they can't do the old kind of old fashioned kind of vaccine. So now we have to put the code and trick your body into making part of the virus inside of you. So we don't have the actual virus. Now we're going to trick our bodies into making part of the virus purposely inside of our bodies. How dangerous is that?

And it's not really the virus. So what is it?

That's my question, everybody. I mean, what is it?

We don't know. It sounds like a gala or some kind of monster that we've created that we're just inserting into our body.

Well, it's pieces of things, right? And they admitted we're taking pieces of things and putting them together. People have analyzed the code so far, and they found 18 subunits of HIV, one that should be alarming number two. Some of the sequences are identical to our chromosome eight, our personal chromosome eight in charge of fertility and intelligence. And also there's a protein called Syncytin that's coding for that happens to be on the human placenta, the woman's placenta and the male game, the sperm. Well, we got two hits on our fertility just with that, also our intelligence.

And then the other problem is. Okay. So now we have a code that has some parts analogous or similar to us. What's inside of our body. And I remember a vaccine is made so that your body learns to attack anything in that solution. Okay, well, now your body could be attacking itself. That's called autoimmune disorder, which is a long laundry list of things. And that could happen immediately or years from now. So we know autoimmune problems are going to happen from this thing. We also know that we're all different.

So when we're putting a code that we are supposed to manufacture this on our own, if you manufacture something too fast for too long, it doesn't shut off. That's called cancer. That's a definition of cancer. We could do that because we're putting this kind of code, this kind of synthetic technology inside of us, that we're all different. So some people will get cancer. We know that autoimmune disorders also just like a computer code. We put in. Mistakes happen. Something could be translocated, switched around, deleted, inserted.

That's called a mutation.

And they get viruses, too.

And we don't even know what we're putting in anybody. This is the insanity of the whole thing. And again, so then you have to ask why. Because again, that's what I asked a long time ago. Why the tetanus vaccine. I kept asking why, why? Why? And I found the answer was that they were intentionally using it for to control people's fertility on a grand scale. The sterilization vaccine. Right. And it's a cumulative kind of effect on there. So if they were doing it for that, let's look at this thing.

What could be the ulterior motive, the agenda? Because if I can find this out by Googling, the other scientists don't know what they're doing, right?

Right. Right.

That's what people tell me. Like, did you write to the President? Did you write to all these people and our government entities to tell them what you know? I said, Are you kidding me? They know this stuff. If we can Google it, they know well.

And also at the very beginning of this, I was checking the death, the global death rates going back. And what I noticed was that the death rate people are living longer and at the same time, people are having less baby. So there was this cross section where it was, it was down, like, 50%. So at this point, we're kind of like.

I do like it that that's interesting.

Yeah. That's on the CDC site. And you can get that off of it. You have to kind of finagle it a little bit. Always not easy. I never make it easy to me. And so this has been going on. I was like, at least 20 years going back to the 2000, at least. So you could see this. The cross where they crossed was right about now.

Okay.

At this time. So to me, it was really obvious that the agenda here. And especially now that you're saying with the infertility that this vaccine attacks that that is the agenda. And when I tie that back to Agenda 2030 and a population by 2030 of 500 million people, that is within that document, again, it's not easy to find. You have to look for it. But it's there. So this is what we're dealing with. What is that agenda about? I'm not sure we'll answer that question. So you also have talked about the DoD being in charge or involved with this vaccine.

What is that? That's kind of like a nefarious signal over there.

Right. And when I saw that, I have never heard of that, that I know of in medicine, that the Department of Defense. And if you really look into it, DARPA, the Defense Advanced Research Projects Agency, which is a black Ops kind of agency that does the Sci-Fi technology that is known really to be focused on transhumanism of us. They are involved with this project.

Internet of Things five G Internet of Things Light, sky, transhumanism.

Most people have never heard that word before, but it's an agenda that's been talked about in world meetings and business meetings and scientific meetings for a while where they believe the next step. And if you listen to Elon Musk, he says, it's the only way for us is that we must merge with artificial intelligence, so we would change who we are. And that was my first video. I said, what does it mean to be human to you? Because every single person on the planet must answer that question now or that will be answered for you, because at this very moment, we are facing that pivotal question.

That pivotal point. Do you believe being human is how we are right now? Our genetic code, that, to me, is made in the likeness of God, and that is a very sacred and precious thing. Do you think that that is something that should be changed? Do you think that we should have a choice in that? Do you want to be immortal in a digital sense? Because this is what they're talking about. The the people in transhuman is they believe we should Mell themselves with AI so that we're walking little computers, communicating with everything kind of like the Matrix, but not so nice and that we would never die because they believe in uploading our memories, which they believe is life.

I don't believe that. Then downloading it into a new body or new digital system or whatever you want to call it. They believe that that's how you can live forever. And they talk about this in scientific meetings for me. No, I know what it is to be human. And I don't believe in becoming into that transhumanist space. I don't want to meld with a computer. I believe in my genetic code. I want to keep it the same. I don't want to live in that way. That's a horrendous way to live.

Yeah. And who we are like that is such an essential question. And also there's a different again, we get back to agenda the agenda of being human. If I believe that we're energy that experiences this body and that we are here to understand the polarity and responsibility and accountability and to understand ourselves as little gods and goddesses, that little points of life that have all of the attributes and powers of gods and goddesses, or the great God or whatever you want, whatever your name or names is, and that that we're here to learn how to be that way to be these great big beings.

And in a way, what this is forcing us to do is to either be that way or Capitulate. And you and I are still on the hope wagon here, spreading the word that we can still wake people up and have them understand that the other agenda is not for us. It's actually a profit motive. It's a control motive. It has nothing to do with humanity. From their view, we are slave. We are. We are to be controlled and manipulated for their benefit. Let's try to find a little bit of hope.

How do we move out of this carry? How do we move or what are our options?

Well, I go back and I tell people look at the motivation behind the people pushing these vaccines, pushing this agenda. And, you know, in the scientific meeting I was at where they're talking about this genetic modification, synthesizing our genes and using biosensors to control how we think and what happens to us. They believe in the beginning of that conference, the beginning of that speech. This is what was told to us. They said, what is God God creates now we can create. So now we're God's plural. And I think that should speak volumes to everybody on the intention and the motivation.

Right? And so with that, what do you choose to be and what do you think life is? I believe. I believe that we are made in the likeness of our Father Creator God. That is my belief. I believe that because we are made the likeness we have God within all of us. That's what makes us so beautiful, so special, so different than anything out there in the world. And that we are energetic beings. We are light beings. We just forgot who we are. And so that's our job right now is to wake up our brothers and sisters around the world and remind them about the light that's inside of us.

And I love science. I love good science. It's not as bad. So I tell people, look up heart Math Institute. They've done amazing research and studies showing our electrical beings. We are voltage. Ph. You've heard of PH, right? That's just another way of saying voltage. We are electrical. Ekgs measure electricity, EEGs electricity, electricity. So the heart is the center of that. In fact, with its electromagnetic energy combined, it's 100,000 times more powerful than our brain. And that in a normal, everyday human, it goes out 6ft and a strong hurry, human.

It goes out. Probably miles. We think that's amazing. So that power we have if we remembered it and we know what makes that energy happen is love. Love is a real frequency. It's a real energy. It's measurable. Love is the highest frequency. Look what's happening right now. The people in power keeping us in fear, which is the lowest frequency, the lowest energy, the lowest voltage, the lowest PH. Whatever you want to call it. But think about that. If a strong, loving person can emanate their energy out, I think that's why they're afraid of us.

They're afraid of us knowing that. And so they say, stay 6ft away. Well, one of the reasons I think is they know that Heart Math Institute keep away. So we don't connect our powers together. Right? Our energies put the mask on forgetting that you're human, you know, suppression, oppression. It's a sign of enslavement coercion as well. A lot of things happening among lowering the immune system, locking us down away from nature. We are connected beings to everything. The energies are connecting us with everything, each other with the plants, with animals, with nature, the sunlight.

Right. They want us to be disconnected from that. God is everywhere and every living thing. So I believe the people pushing agenda. They do know that we have these innate powers that we forgot about this innate energy. So they want us to forget that our job is to remember who we are, who we always have been. And I believe Jesus Christ taught it very well. He said, look, don't idolize me. You can do things just like I can do. But greater things you can do. He gave us the instructions he gave us the knowledge.

Now is the time we actually wake up and we open up our hearts and we utilize it because, like that, things can change nanotechnology. All the scary stuff we talk about. That's a low frequency. If we elevate ourselves out of fear and we wake up automatically, that's what we can do. That's how we can stop this. How we speak up for each other. We defend each other. Right? We forgot about that. We take care of each other, and very fast, it will stop.

I wanted to go in a little bit more about the nanotechnology. I've touched on this before, but you have a degree behind your name, and you can talk about more authentically.

Sure. Well, unfortunately, most doctors have no knowledge of this. We don't get taught much genetics, either, by the way. So I don't think I don't think people should put as much credence into it. It's nice that if we speak up on it, but just know that we purposely aren't taught certain things, like vaccines, like genetics. Probably purposely. Right.

Right.

So that you don't have the knowledge just because doctors, I think people do put too much credence behind those degrees behind your name.

I understand. But what I as a journalist all the time. What are the doctors saying? So that's why I'm asking you that question.

Well, my experience and knowledge about nanotechnology came from actually, a business meeting I intended, so it had nothing to do with even my medical meeting so much. This business meeting happened in Metro Atlanta, and it's one that you had to get invited to. And I really only went to one of the meetings because I disagreed with the intention and motivation of this group. So this group, when I went to the meeting, we had to be bust in. We could not drive to this location. Our cell phones were jammed, and this was back, like, around 2014, which was new for me to experience that.

I couldn't even walk back to my car. I was too far away. I couldn't leave the building. I wasn't allowed to leave the building. That until the meeting was done, a different kind of business meeting and the whole objective here. There's different people, mostly tech, big tech, some people from CNN, et cetera. So the agenda was to talk about, how do we fix the behavior of people in Metro Atlanta because we see a problem. We want people from different countries to come open their businesses here.

And we, as business owners, have taken on this responsibility of fixing the behavior of the people here because they're too racist and they're not amenable to new culture. So we're going to fix it now. There's no voting on it, no asking others, they're going to do it. And so they came up with the idea of using a health app on our phones at the time, the health app was not downloaded, but it is now everybody's phone it's there. And this is how they described how they would use this kind of technology, which is using nanotechnology.

They said they already have the software and the phone, which they do to measure almost anything you can think of inside of our bodies. They can measure your menstrual cycle if you're fertile, if you're having sex, you're brushing your teeth. If you're drinking alcohol, how much alcohol, your drugs, you're taking your thoughts, your emotions. They know when you're lying because it has a lie detector test already in here. Your voice inflection app on here. It can tell immediately if you're lying by the voice inflection app all kinds of things.

So they already have it there. They can do it through sweat glands and different voltage channel, voltage, ion channel gates, and our body through biosensors. Okay, so Biosensors is a brand on the phone.

So the software on the phone.

What they needed to do is get the substrate inside of the body so that we could communicate wirelessly with their phone or any, not just our phone. Right. So this was a bonafide true business meeting. I was one of the only other medical professionals there. Mostly these were tech people and business people. I happen to know my own clinic at the time. That's how I got there. So I couldn't understand how they would get the people to agree to the substrate. They never said this. But let me give you an example of how they were going to use it on the people.

We were going to be the pilot city. So they said, let's imagine two women talking on the phone, the one woman as the other woman. Where are you? You're supposed to be at the restaurant at 05:00. You're not here. The other woman said, oh, I'm sorry. I'm running late at the gym when she said that the phone would know she's lying would light up, give her an instant repercussion. They didn't say what the instant repercussion would be, but the phone system would actually calculate how many times she lied over.

Let's say six months at the end of six months, she would be given either a penalty or bonus, whatever you want to call it. If she lied too much, she couldn't get the mortgage for the house she wanted. She couldn't get the job she wants. She couldn't go to the school she wants. She couldn't eat good food. She'd have to eat bad food. She couldn't go to nice fun concerts. So that's called social credit system that China is using. We talked about using it in Atlanta as a pilot city.

Now what? This is the end of 2014. They wanted to unveil it around five years from around now, right? They're behind their timeline. This is a real meeting. Okay, so I was appalled because they were talking about using this and not ask anyone's permission. They were just going to start implementing it. The only missing link was the substrate. How could they get those biosensors inside of us? And if people don't understand what a biosensor can do, there's drop downs on your health app. You can look at it has everything.

But if you go to Profuse on YouTube, they have a little two minute clip of advertising of some of the things they can do with this bio sensor and a happens to be DARPA's little baby company. Okay, so again, it goes back to the Department of Defense, goes back to DARPA, always. So on the two minute clip, they're going to tell you, you have to have, like, a little patch on you. You don't need the patch that's just to make it not look so scary. They don't need the patch as long as you have the biosensors inside your body.

Now, how do you get them the most efficacious way to get the payload into your body? A payload is through injection or microneedle platform, and they use something called hydrogel. It's also known as Nano lipid particle nanotechnology. They will use many different names to get you to not understand what they're using, right? It's a slight of hand kind of thing, but it's all the same stuff. And that goes back to this. So when I learned about the meeting, I was horrified. I was like, I never go back to this group again.

I don't agree with them. Everybody's clapping, some standing ovation, and I asked the people there, how can you be okay with this technology? And they said, Well, soon you'll see it's either us or them. What side are you on? I said, I know the site I'm on. And I said, if you think this technology won't be used on you, your fool, because we're talking about an algorithm, a computer with one human, not other humans involved. This will turn on you, too. You'll be involved. You're full, you know.

So I never went back. And then I thought, Well, that's much further in the future. I don't have to worry about it until I saw the ingredients of this COVID-19 vaccine and that's when my heart sank and I was horrified. And like, I have to talk because they're using these kinds of chemical morites called Nano lipid particles, which can also be used as biosensors. I believe this is the way they can get this into our body. Once there's enough in our body, enough of a payload, they can turn the system on.

And you won't even know it's been turned on on you.

And that's tied into the Internet of things. So and then, by chance.

Yeah. Microsoft at March 26 of 2020, Bill Gates, Microsoft launches their patent for the 2026 Six six, which is exactly what I just described about the business meeting. And it has a stick figure there. And you're wirelessly connected by the biosensors to your smartphone. It accumulates the data from the health app. It goes to the 560, which goes to central server computer, which then sends back the algorithm of how much cryptocurrency you get again social credit system to give you your electronic payment or deduction of a payment.

You could be deducted money for not being a good human. People. Wake up. So again, if you look at the risk and benefit of the vaccine, the benefits are almost nothing. Only they think that it could prevent you from having one positive PCR test and one symptom. That's all the study shows, like lack of a cough, lack of a fever. But you still are sick. You can still die. You can still go with intensive care unit. And maybe it could work, maybe up to two months after the second shot.

That's it. But the risks are huge. So again, look at the tennis. There's another and another motive to me. It's a way to get the payload in you. It's a way to get these biosensors into you under the guys using that same nanotechnology to envelope the messenger RNA to go into you. But it also can be used for this payload. And this is my warning to everybody.

Oh, God, I just lost it.

Listen, it's a lot of information.

I know where I can lose track of all the things we're talking about.

Too, because it's a lot that we're done.

Yeah. So it was the techno fascist combination with big Pharma, I think, is where I was going. And on the one hand, it just sounds like boys with toys, and they're just because they can. They are. But on the other hand, when you look at it, it's world domination and control. And I don't want to get into politics too much because I actually stay away from it as much as I can. But this actually seems to tie right into a political agenda that China has of world domination and controlling populations to do.

It's basically a consumerist kind of model where they all are connected this way they have these biosensors, and whether or not those are turned on over there, we don't know yet. My guess is they are and whether they also control people's moods, whether they control whether people are awake or asleep, literally urges to go buy something. You know, instead of doing yoga, go buy something. You know, that kind of thing. Because if they can collect it, then they can also send it.

That's absolutely your so right. Alice and I keep trying to warn people about that, that it's a two way street. It's a two way device. And listen to Elon Musk, who's now in the vaccine game because everybody in technology is getting the vaccine game. That should give you a clue.

Money.

Man, he loves Neuralink is frightening. Neuralink is a way that they can download memories of other people into your brain. And you will not know if they're your memories or someone else's memories. That's me. I think there's a definition of schizophrenia where you're in two different realities. You don't know whose memories or who's right. Think about. Okay, people think of the Matrix. You can download, how to do crowd, how to Cook this or how to speak languages. Maybe. Or maybe not. That would work. Let's say it works.

But think about it. Do you really trust some other entity, some other group, some other computer with what memories are inside of you? Imagine the terrible things that could happen that could be downloaded into your brain. Well, acceptable to me.

Yeah. The conspiracy theorist, every time there was a mass shooting were saying, oh, those guys were on drugs or whatever. And and maybe they actually were the test subjects. I don't want to speculate, but that, to me, is what sounds a possibility, right? Yeah.

It's a pretty good possibility that they could be. It could have been a tough subject.

How far can we push this that kind of thing? And the evidence of that is that this vaccine is experimental. It has not been approved by the FDA, and we are the guinea pig.

Absolutely.

And how long does it take to know if it works or not? What is the timeline?

A year under 15 years is the real timeline, right. And I don't care what they say. We have new technology. We don't need that long. Yes, we do need that long. Because cancer takes time. Autoimmune diseases take time. What happens to our future generations? It takes time to realize what happens. You cannot fast forward that process at all. No, we won't know for ten to 15 years. Really? The real ramifications of this. And as we speak, everybody is in the live experiment. Not one experiment is completed until, like, October of 2022.

The other one in 2023 sometimes. And they're not properly. They're very poorly designed studies, right?

Yeah. Well, I had another question, and again, I'm sorry I went out of my head. I really want to have people go back to the Heart Math Institute because that was one of my big wake up calls, too. I'm a sound healer. And about the time that ten years ago when I started on that, I got turned on to them because sound and frequency and heart are all the same. And I can just train my heart by singing one tone. And I actually have helped myself out a couple times when they didn't like what I was doing.

Seriously, it's powerful.

It is.

That's what we should be focusing on, right? Because I tell people when you research it, you know this. You go into these dark places, it is and then you forget and I do. And I forget that. Wait a minute. They can do all this technology. They can go light years with their Sci-Fi gadgets, but they can never beat us on that frequency level. Never. And that is a beautiful, wonderful truth that we should always remember and hold on to because it's all about frequency. Nikola Tesla is one of my favorite people that I've never met.

It's all about frequency, energy and vibration. That is the truth. I don't remember that.

I think he was the one that maybe he didn't. But where attention goes, energy flows. And that is the simplest formula of all of them. And we're the drivers were the creator. We decide. And that's why, to be honest, this job is hard because I have to go into the dark. But the good thing is that I do feel like we've got the we've got the knowledge and the tools that are actually very ancient tools.

We've had these tools for you always have had it inside about looking it up and we need each other to do that. We are social and we are connected so you can't do it all on your own. No, we've got to assist each other and help each other. And do you teach people on the techniques that you do?

I haven't yet. I'm not. I'm just sharing it when it comes up. I share it. I love to be more kind of direct and spend more time and do it because I've got it. I could do a whole weekend.

You probably should do that. I think that would be powerful.

Yeah, well, anybody who's listening can contact me if you're interested, because I definitely am looking for a way to do it for the weekend and I think that would be powerful.

I think people are starting to wake up and they're ready.

Yeah, definitely. I just was so glad to hear you are connected to the heart math. It was like, alright, is the truth.

It's the truth. There is a possible light inside of us when we finally get to the state of being we were always supposed to be at. We will literally see light emanate from us. Yeah, that will be a wonderful day.

One of the things. I don't know if you ever saw this yourself under probably electron microscope, but I see my photons. I visualize them and they're being just like I'm a being. They are beings. I've got millions of them.

It's a force.

It's like Star Wars.

My favorite movie, the Force. He has a lot of truth in that movie. Yeah. Okay.

I think we've done everything that's really important. You've got a really good message here. Carry. What would you like to say to reminders as moving forward here?

Well, I tell people this is overwhelming. It's overweight for me. So once you remember to take baby steps once a week, minimum, once a week, you should go to each other's homes inside your home. No cell phones. See if you could leave them somewhere and just talk and be with each other and hug each other. There's no math. Kiss each other, Cook with each other. Learn where your food comes from. A very beautiful music. Music has a frequency and can break chains, but it also can be used for negative.

It's all frequency. A beautiful uplifting joyful music or pray together or whatever gives you makes you feel good and just do that once a week. And I promise you will already see a change in you yourself, and that spreads to others. So you don't have to do something so dramatic. And I know people get paralyzed almost in fear because they're like it's so much. I don't know where to start. Start with the simple things. That's what we're supposed to do.

Great.

Okay.

I'm so glad to make the connection. Thank you so much for your time today, Kerry. And I hope we have another conversation down the road, and maybe we'll have something completely different to talk about. Wouldn't that be great? That would be good?

Yeah. Well, maybe it'd be more about energy here.

That show I'm doing with you. Okay.

Thank you. Alison has been a pleasure.

Thank you, my dear.

Okay. Bye bye.

