Now, this is where I first saw this, actually this morning. It's funny. Is there's some synergy here today? Dr. Akan said shared this tweet.

Holy crap. But it's actually yesterday you shared if I saw it this morning, this leaked Fizer study from the EMA shows that the vaccine particles are hugely sequestered into the ovaries and a couple other places as well. Now he shows just this one page with this one part highlighted. Now, what's interesting the synergy I'm talking about is that Whitney Web reached out this morning after this and told me that Dr. Peter Mccola, who we adjust, played on our show where he cites Whitney Web as being a great researcher and this great thing she found out in the beginning of all this that nobody was talking about.

We just played that, in fact, right here. In fact, I don't think I'm going to play it today, but here is Dr. Peter Macolo. Something is very wrong. And he calls out Whitney Web here and says, Great job or not calls out but shouts out Whitney Web.

What's interesting is that he reached out to Whitney and said, Check this out. Not only do I have the study itself, which will show you not just the screenshot that's going around the Internet today. So we can actually prove to you that is what it says. But he was blown away by this as well as a couple of other things. Now, funny enough, the two other things that he sent, we've already shown you on the show.

I'll go over him again today. It just one speaks to how far immersed we are on this and how far ahead we are typically pretty much everybody out there. And that's not my opinion. Guys. Just look at the track record.

But the fact that he is very concerned about this and what this shows you not just a screenshot. We'll get into it. All that shows you that there is an obvious accumulation over a very short period of time, of the problematic issues. We're going to talk about this in regard to the spike protein in regard to how this works. It's building up in the ovaries and primarily in the uterus, even in the testes, to a degree, for for men, but not even close to as much.

So let's look at this. So what's interesting? So what this ultimately is it says the overview of a pharmacokinetic test so that this is legitimate, but it's being shown essentially now, right now, before it was supposed to be, like, officially shown to everybody. What that means is the pharmacokinetics is the study of how an organism affects a drug, which is interesting, whereas pharmacodynamics is the study of how a drug affects the organism. So you would think that will be the other way around.

Why would they be concerned about how our bodies will affect the drug? Maybe it's because it's a way to find out whether the body breaks things down. I don't know. Maybe I'm not well versed on this to know whether this is a normal thing or not. But regardless, it shows you that they're trying to dig into this to find out how these things interact.

That's the important part. Now here is the beginning page of this same study. Here's the page itself just you can see I'm not going to scroll on it as I usually do. I have it right here. So this is the page of what he first shows on his screen shot.

Now I want to point this out because I found it to be interesting, but it's also interesting because I want to explain something that I think is being confused, not necessarily not even at all by Dr. Peter McCalla, but just by other people in general. And this was something that came up early on. But this is still interesting to me because this has been dismissed as something that's not even involved in this process. Now it says because in Vivo and you embody expression distribution of the antigen encoded by the biotech Fizer injection is considered to depend on the lipid nanoparticle distribution, which the lipid ano particle part of this in and of itself is a problem.

But it says the Blab C. Mice, who are the ones being studied in this process are intramuscularly administered luciferase, RNA encapsulated lamp, the piano particle and Alternatively reported protein. Now remember what this is now the luciferase is about the the luminescence, the idea of being able to track this stuff through the body as I understand it. So what's interesting to me is that this is still being discussed in the process of these injections, even whether it's trials or not. And yet they act like this is such a crazy thing that we should dismiss as fake news.

I just find that telling, but also that I wonder whether or not this is being used in trials on people. Just an honest question, cause I don't know. But it says in Vivo distribution. By the way, we saw this in the modern documentation way back in regard to those trials. Remember, that was people.

So that's why I'm asking that question. Now it says in Vivo distribution was examined. As a result, expression of Luciferase is found at the site of administration. Now the point of this the main point of reading this from the study itself. But you can read and check and look into for yourself.

Now the important part is again, you can see what he's got highlighted him as well. But here all the way across. Now it's important to get the full picture. Here's the point. First of all, it says total lipid concentration, males and females.

Now what it's saying here obviously is combined. But when it gets to things like ovaries and stuff that's not combined. Now what it's saying here is that the lipid concentration remember which is encapsulating the Moran a instructions to build out the spike protein. Right. So this is how this can end up finding its way into other parts of your body.

As, by the way, I'm going to go over more of this today. We've shown unequivocally as even Dr. Hodkinson and different people have pointed out, these things do not just stay in the side of injection, which it's obvious. And multiple scientific studies show this. It ends up going into your blood, that it ends up going into your body, which then causes all the same problems.

Call reiterate again today because the spike protein alone has all the different studies on this topic have shown can cause all these problems. So even as I showed you in the past, one of the studies that says this should call into question whether these vaccines are safe. No one cares. So the lip Nano particles with the problem are being put into your bodies. Now, after 25 minutes or 25 of an hour into 1 hour, two hour, 4 hours and so on.

As you can see the hours up top right here. Okay. And then you can see on ovaries, it shows you the concentration. Now take note of everything else around it. After 1 hour, you get the one point 34, 1.64 after two, 2.34 after 4 hours and all the way up to 12.3 after 48 hours, you notice the numbers around everything else.

1-5-6-1-2 you're talking 12.3 more than any other location in the body. So let's just pretend for a second that these things aren't dangerous, even though all the data on all the different studies that have been shown are very close, suggesting that both the lipid nanoparticles themselves and despite protein itself, can be very damaging, in fact, are the problem. But that aside, is it not interesting that these things are what is that? That's what 24 times over most of the other ones 48 hours later, it is exponentially more concentrated in your ovaries and your reproductive locations.

Now, also, what he points out is the percentage of administer dose.

Now that correlates with the time over here. So I want people to recognize that. Okay. So they're at point that the percentage of the administered dose. So it's the lowest part of it up to the highest part of it after 48 hours.

Obviously recognize that it gets higher than almost everything else.

Right out in 1 hour, it goes up to one point 34. Look at the other numbers. The spleen at this point is really high. There's the other part of it, the spleen. That's what I was looking for.

23. So the second highest in regard to your ovaries. Now, the spleen is one of the other places we've already talked about regard to a lot of these issues we've been seeing. I'm not going to get into that today. The point is the concentration spleen or ovaries after 1 hour of the administer dose.

Think about how crazy that is. Now, anyway, I'm not going to belabor the point. Their data from their own documentation shows you quite clearly that it's building up in the ovaries and the reproductive areas. Okay, so that's alarming. Now let's get into why, despite protein and these things being there are alarming.

This one is one I've already shown you. Okay, so reproduction toxicity. Now, I've shown you this before. This is from the Europa EU. This is from the European side of this discussion, and it's talking about the study they did with mice that shows you an obvious issue.

Now, this is one that happened before all of this. March 11. Okay, so March 11, 2021. So think about how long this has been out, right? It's not like it was yesterday.

Months have gone by and no one wants to talk about what this means. If you saw this, you remember. And this is crazy what it says a GPL compliant reproductive and development to toxicity study. Dart. Also ask yourself why a toxicity study in regard to re productivity was being done on March 11, 2021, while it was being injected in pregnant women, while it was being injected in all sorts of people.

Who cares, right? Because it totally safe and effective. And we did all the studies right? As we continue to side the things that we're concerned about, because those totally make sense together, right? No, they're literally diametric opposite mutilate school.

You cannot put those two things together. But it says this study in regards to re productivity and development with the mRNA 1273. The Madura vaccine has been conducted in females rats. Now it says I am administrations of the RNA of the modern vaccine to female rats at the human clinical dose, twice before mating and twice during gestation was associated with non adverse effects, including. And this is what's funny is that this is the first part, not even the dangerous part, but thin fur cover, swollen Hind legs, limited usage of the Hind limb.

And they talk about this like no big deal. Not even worth talking about. That sounds crazy to me. That sounds like plenty enough to worry about. But it says, however, there was no mRNA Moderna related effects on female fertility.

This is what they stated before. They say the next thing, no issue, no related effects. And you'll see why they say that now, since the Moderna related non inverse effects were limited to an increase in the number of that's weird I looked at this last time focuses apparently the plural of fetuses pots or something strange. It doesn't make sense to me, but fetuses, I guess we'll save because I don't like saying that word with common. They said it increased the number of fetuses with common skeletal variations with one or more rib nodules or one or more wavy ribs with no effect on the viability and growth.

So fine they were able to grow up and exist. But you're literally talking about deformed skeletal growth and that's no big deal. Who cares? They had lift in fur, swollen Hind limbs, limited usage of their legs. And, you know, they had one less rave when they were born.

But no big deal there not at all. That doesn't mean that's gonna affect you guys. This is exactly why they do these studies. And it's ridiculous. They would claim this.

But here's the actual point. And if you remember, this is crazy. In this study, it says no vaccine dose was administered during the early organogenesis to address the direct embryo toxic effects of the components of the vaccine formulation. Okay, so early are they said, well, we didn't do that part of it because we didn't address these parts. They're discussing direct embryo toxic effects they didn't deal with.

However, such a risk is considered low in humans. Right. So this is what they keep doing. Well, because vaccines have been shown to be safe for so long. We're not worried.

Well, that doesn't apply. How about the fact that? Well, since this doesn't have a viral component, we don't worry about pregnant women. Again, that doesn't apply because we're not even talking about the same technology. But this is what they keep doing.

Are you concerned about the direct embryo toxic effects that they just disregarded because, well, we already know they're low in humans. I sure am still not even the most important part, given the one. Again, that was the point. They say it right there, given the non live organism nature. So we're going to disregard this very clear issue that we've acknowledged exist just because we've assumed that non live organisms don't mean this won't be a risk.

But that's being clearly shown not to be the case in the show today will make that clear as well. And the low risk genotoxic effect of the lipid nanoparticles and humans. Yeah, exactly. Exactly what we're concerned about. And exactly what we're seeing cause a problem, but lesser than the spike protein, the overall pregnancy index.

This is the important part was numerically lower in the in the modern vaccinated female rats. What? So we didn't have any issues, but the women who took these injections had a lower pregnancy index compared to the control animals. Look at this with the injection with nothing. You're telling me that an almost 10% decrease in reproductive infertility is not noticeable.

That's not if anything is statistically relevant. 10% decrease is very clearly statistically significant. But it says. But and this is the point. It remains within the test facilities historical control range.

God. So as long as you don't drop below seven possibility to reproduce, then we don't care. Think about how disgusting that is. Who sets that test facilities, historical control range. People making the test.

Oh, who's doing that? Oh, you mean the people that have a profit motive? Weird. I sure care about a reduction in fertility or the fact that we have weird skeletal growth or a genotoxic effect on embryos that were disregarding because of something. It doesn't make sense.

No, not. This has been here for months. Nobody cares other than you. Here's a new study because, of course, it's all safe and effective, and we know it's okay for pregnant women. But while we study that will pretend, we think that right now.

February 10, 2021, they're currently recruiting. Last updated March 26 covid 19 vaccine. No variant reserve. Well, what do you know? It's safe and effective, though, right?

You're telling pregnant women they can do it, right. Well, what are we studying? Fertility issues. Perfect. So we don't know if that's the case because we haven't finished the research, but we'll keep pretending like we know that's not the case because we finished.

There's no way to finish that. They are lying to you or they're lying or they're stating what they think is the truth because they're too stupid to do their own research. Fertility research about whether it hurts you is being done. There's no way you can know the outcome of that before it's done. Kindergarten stuff, guys, the effect of COVID-19 mRNA vaccine on ovarian reserve ongoing here, by the way, on that note, are a couple of things from the current FDA document about these injections.

May 19. It says all pregnancies under the pregnancy 11.1 section. All pregnancies have a risk of birth defect loss and other adverse outcomes. Period. Okay.

Now why would they start with that? This is something that's being directed. This one was specifically for. I believe this was the one for the caretakers when people doing it. Providers.

Okay, so this is specifically for the people administering the injection. Right. So one do you think they're not aware that pregnancy have birth effects? This isn't meant for mass adoption. This is meant for the average guy in the corner.

This is meant for doctors, nurses, people administering it. So ask yourself why they feel the need to interject an opinion or at the very least, a statement of what they feel is important. So the reason they're stating this is because they want to counterbalance this. To say all pregnancies have risks and losses and stuff. That doesn't mean all these things are pregnancy related.

Clearly, that's why that sentence is there. They're already trying to get ahead of what's happening in the statement they're giving to people giving the injection. I mean, I know I maybe digging too much into that one sentence, but realize why that is an unnecessary statement. This is about risk summary. So go in and tell us about the risks.

You don't need to counterbalance that with why that risk is not as serious because other things happen other way of other places. That's just crazy. That is propaganda. So going forward, it says available data on Pfizer Biose COVID-19 vaccine administered to pregnant women are insufficient to inform vaccine associated risks and pregnancy that's as May 19, 2021, really drink that in insufficient to inform risks about pregnancy. So why then is it being okay for pregnant women?

Why then? Is it being given to pregnant women? Why then our doctors allowing it to be given to pregnant women? Anybody know because they're either not reading this or they don't care which one is a crime, and one is catastrophically, serious negligence or even malfeasance. Who cares, though, right.

May 19. But we're all crazy fake news because we read the actual inserts in Point of Scientific studies down here. It says under lactation. Well, data, again, are not available to assess the effects of this injection on breastfed infants or on milk production excretion. But it's happening anyway.

People are taking this thing and then maybe a month week later, a month later getting pregnant. What if they had a baby two months before they got the injection and now they're still breastfeeding? Nobody cares. This is right there. It's right in front of us as obvious, and they know it.

Pfizer knows it. The FDA knows it. Nobody's doing anything. How do you not see that for what it is? How do you not realize that that means there's a conscious choice to ignore crimes, to ignore violations of something very serious of safety while they scream it's for your safety?

Here's the other document. Now, this would be the one for people taking it, right. So this is what you would see if you weren't smart enough to go out there and find the other document or watch this show and look it up for yourself. They hope you don't see that that's meant to be for the nurses, right? This says, what if I'm pregnant or breastfeeding?

Well, guess what? Instead of saying we don't have the studies or science to tell you that you maybe shouldn't do it, they just go discuss it with your healthcare provider. Oh, you mean people that also don't know that it's a problem. The people that also don't know that this document very clearly says that that shouldn't happen. And there's no studies.

Yeah, because they don't know because the media and the government aren't telling them because the CDC and the FDA that they blindly trust are not telling them that's the reality. So they just go talk to your doctor. Your doctor says, yeah, get it. Because we're all in danger. And here you go over and over and over, and we're the ones that are breaking the law.

